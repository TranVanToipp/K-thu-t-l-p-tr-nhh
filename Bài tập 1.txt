

/**
 * @(#)T002.java 16-00 2023/02/22
 *
 * Copyright(C) 2023 by TranVanToi  LTV
 *
 * Last_Update 2023/02/22.
 * Version 1.00.
 */

package fjs.cs.action;


import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * T002
 * 
 * @version 1.00
 * @since 1.00
 * @author toi_tv_ttv
 * 
 */
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.sun.org.apache.bcel.internal.generic.RETURN;

import fjs.cs.common.Constants;
import fjs.cs.dao.T001Dao;
import fjs.cs.dao.T002Dao;
import fjs.cs.dto.T001Dto;
import fjs.cs.dto.T002Dto;


public class T002 extends HttpServlet {
	private static final long serialVersionUID = 1L;
	/**
	 * Init man hinh
	 * 
	 * @param HttpServletRequest  req
	 * @param HttpServletResponse resp
	 * @return RequestDispatcher
	 * @throws ServletException, IOException
	 * @since 1.00
	 */



	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String indexPage = request.getParameter("index");
		if (indexPage == null) {
			indexPage = "1";
		}
		
		String pages = request.getParameter("page");
		if (pages == null) {
			pages= "1";
		}
		
		int page = Integer.parseInt(pages);
		HttpSession session = request.getSession();
		session.setAttribute("indexsession", page);
		
		int index = Integer.parseInt(indexPage);
		request.setAttribute("tag", index);
		
		
		
		
		T002Dao dao = new T002Dao();
		
		//get data
		List<T002Dto> list = null;
		int count;
		try {
			list = dao.getData();
			request.setAttribute("listData", list);
			count = dao.getDataPage();
			int endpage = count/15;
			if (count % 15 != 0) {
				endpage++;
			}
			List<T002Dto> listPage = dao.pagingData(index);
			request.setAttribute("ListA", listPage);
			request.setAttribute("endP", endpage);
			request.getRequestDispatcher(Constants.T002_SEARCH);
			RequestDispatcher myRD = null;
			// Hien thi man hinh Search
			myRD = request.getRequestDispatcher(Constants.T002_SEARCH);
			myRD.forward(request, response);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * Event man hinh
	 * 
	 * @param HttpServletRequest  request
	 * @param HttpServletResponse response
	 * @return RequestDispatcher
	 * @throws ServletException, IOException
	 * @since 1.00
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html");
		try {
			String name = request.getParameter("txtCustomerName");
			String sex = request.getParameter("browser");
			String birthdayFrom = request.getParameter("txtBirthdayFromName");
			String birthdayTo = request.getParameter("txtBirthdayToName");
				
			if (birthdayFrom != "") {
				if (!isValidDate(birthdayFrom)) {
					String messagebirthdayfrom = Constants.MESSAGE_ERROR_FROM;
					String dataFrom = birthdayFrom;
					request.setAttribute("dataFrom", dataFrom);
					request.setAttribute("messageFrom", messagebirthdayfrom);
					RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
					rd.forward(request, response);
					return;
				}
			}
				
			if (birthdayTo != "") {
				if (!isValidDate(birthdayTo)) {
					String messagebirthTo = Constants.MESSAGE_ERROR_TO;
					String dataTo = birthdayTo;
					request.setAttribute("dataTo", dataTo);
					request.setAttribute("messageTo", messagebirthTo);
					RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
					rd.forward(request, response);
					return;
				}
			}
			if (birthdayFrom != "" && birthdayTo != "") {
				String dataFrom = birthdayFrom;
				String dataTo = birthdayTo;
				if (isValidDate(birthdayFrom) && isValidDate(birthdayTo)) {
					String dayFrom = birthdayFrom.replaceAll("/", "");
					String dayTo = birthdayTo.replaceAll("/", "");
					
					if (Integer.parseInt(dayTo) < Integer.parseInt(dayFrom)) {
						String messageFromTo = Constants.MESSAGE_ERROR_FROM_BIGGER_TO;
						request.setAttribute("errorFromTo", messageFromTo);
						request.setAttribute("dataFrom", dataFrom);
						request.setAttribute("dataTo", dataTo);
						RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
						rd.forward(request, response);
						return;
					}
				}
			}
			
			
			T002Dao daoSearch = new T002Dao();
			List<T002Dto> resultSearch = daoSearch.getDataSearch(name, sex, birthdayFrom, birthdayTo);
			
//			HttpSession session = request.getSession();
//			String page = (String) session.getAttribute("page");
//			String page = request.getParameter("pagepage");
//			if (page == null) {
//				page = "1";
//			}
			int page = 3; // trang hiện tại
			int recordsPerPage = 15; // số phần tử hiển thị trên mỗi trang
			int startIndex = (page - 1) * recordsPerPage; // vị trí bắt đầu của trang hiện tại
			int endIndex = startIndex + recordsPerPage; // vị trí kết thúc của trang hiện tại
			int totalRecords = resultSearch.size(); // tổng số phần tử của danh sách
			int totalPages = (int) Math.ceil((double) totalRecords / recordsPerPage); // tổng số trang
			List<T002Dto> resultPaginated = resultSearch.subList(startIndex, Math.min(endIndex, totalRecords));
			request.setAttribute("listDataSearch", resultPaginated);
			request.setAttribute("currentPage", page);
			request.setAttribute("recordsPerPage", recordsPerPage);
			request.setAttribute("totalRecords", totalRecords);
			request.setAttribute("totalPages", totalPages);
			
			RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
			rd.forward(request, response);
			//Lấy data các checkbox được checked
			String[] ids = request.getParameterValues("selectedValues");
			if (ids != null && ids.length > 0) {
			    String idList = String.join(",", ids);
			   
			    // Loại bỏ các dấu ngoặc kép trong chuỗi
			    idList = idList.replace("[\"", "").replace("\"]", "");
			    String result = idList.replaceAll("[^\\d,]", "").replace("\"", "");
			    String[] result2 = result.split(",");
			    if (result2.length == 16) {
			    	String[] result3 = Arrays.copyOfRange(result2, 1, result2.length);
		    		daoSearch.deleteData(result3);
			    }else {
			    	for (int i = 0;i< result2.length; i++) {
				    	if (result2.length == 16) {
				    		daoSearch.deleteData(result2);
				    	}
				    	daoSearch.deleteData(result2);
				    }
			    }
			}	
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private boolean isValidDate(String txtDate) {
	    String rxDatePattern = "^(\\d{4})(\\/|-)(\\d{1,2})(\\/|-)(\\d{1,2})$";
	    Pattern pattern = Pattern.compile(rxDatePattern);
	    Matcher matcher = pattern.matcher(txtDate);
	    if (!matcher.matches()) {
	        return false;
	    }
	    int dtMonth = Integer.parseInt(matcher.group(3));
	    int dtDay = Integer.parseInt(matcher.group(5));
	    int dtYear = Integer.parseInt(matcher.group(1));
	    if (dtMonth < 1 || dtMonth > 12) {
	        return false;
	    } else if (dtDay < 1 || dtDay > 31) {
	        return false;
	    } else if ((dtMonth == 4 || dtMonth == 6 || dtMonth == 9 || dtMonth == 11) && dtDay == 31) {
	        return false;
	    } else if (dtMonth == 2) {
	        boolean isLeap = (dtYear % 4 == 0 && (dtYear % 100 != 0 || dtYear % 400 == 0));
	        if (dtDay > 29 || (dtDay == 29 && !isLeap)) {
	            return false;
	        }
	    }
	    return true;
	}
}






<%@page import="java.awt.List"%>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<%@page import="fjs.cs.dao.T003Dao,fjs.cs.common.Constants"%>  

<title>Search - Training</title>
</head>
<style type="text/css">
  <%@include file="/WEB-INF/css/common.css"%>
</style>
<style type="text/css">
  <%@include file="/WEB-INF/css/T002.css"%>
</style>
<body>

<style type="text/jsp">
  <%@include file="/WEB-INF/include/header.jsp"%>
</style>

<div class = "search-container">
	<div class = "search-container__dan">
		<div class = "search-container__text search-container__text_text">
			Login > Search Customer
		</div>
	<div class = "search-container__context">
				<div class = "search-container__logo">
				Welcome
					<%if (session.getAttribute("name") != null) {
						Object session2 = session.getAttribute("name");
						session.setAttribute("name1", session2);
					%>
							<div><%=session.getAttribute("name") %></div>
					<%} %>
				</div>
		
			<a href = "/CustomerSystem/T001" class = "search-container__logout search-container__text_text" onclick = "Logout() ">
    			Log Out
			</a>
			<script>
				function Logout() {
				    <% session.removeAttribute("name"); %>  // Xóa session "name"
				    location.reload();
				}
			</script>
	</div>
	
	<div class = "search-container__line"></div>
	
	
<form id = "form-Search" action ="/CustomerSystem/T002" method = "POST" >
	<div class = "search-container__handalSearch">
		<div class = "search-container__handalSearch--margin handalSearch-customerName">
			<div class = "handalSearch-customercommon handalSearch-customerName__text search-container__text_text">Customer Name</div>
			<input id = "txtCustomerName" name = "txtCustomerName" maxLength = "50"/>
		</div>
		
		<div class = "search-container__handalSearch--margin handalSearch-customerSex">
			<div class = "handalSearch-customercommon handalSearch-customerSex__text search-container__text_text">Sex</div>
			<select name="browser" id = "cboSex">
				<option value=""></option>
		      	<option value="0">Male</option>
		     	 <option value="1">Female</option>
			</select>
		</div>
		
		<div class = "search-container__handalSearch--margin handalSearch-BirthdayFrom">
			<div class = "handalSearch-customercommon handalSearch-BirthdayFrom__text search-container__text_text">Birthday</div>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" name = "txtBirthdayFromName" maxLength = "10"/>
			<lable class = "handalSearch-BirthdayFrom__ngangcach">～</lable>
			<input id = "txtBirthdayTo" class = "txtCustomerValidateTO" name = "txtBirthdayToName" maxLength = "10"/>
		</div>
		
		<div class = "handalSearch-btnSearch">
			<button type = "submit" id = "btnSearch">Search</button>
		</div>
	</div>

	
	<div class = "search-container__btnContext--chuyenhuong">
		<div class = "search-container__btnContext--start">
			<%
				if (request.getAttribute("ListA") == null) {
			%>
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
			<%
				}
			%>
			<%
				if (request.getAttribute("ListA") != null) {
			%>
				
				<c:if test="${tag == 1}">				
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
				</c:if>
				<c:if test="${tag > 1 }">	
					<button id = "btnFirst"><a href="/CustomerSystem/T002?index=<%=1 %>"><<</a></button>			
					<button id = "btnPrevious"><a href="/CustomerSystem/T002?index=${tag-1}"><</a></button>
				</c:if>
			<%
				}
			%>
			
			
			<lable class = "search-container__btnContext--textstart search-container__text_text">Previous</lable>
		</div>
		
		<div class = "search-container__btnContext--end">
			<lable class = "search-container__btnContext--textend search-container__text_text">Next</lable>
			<%
				if (request.getAttribute("ListA") == null) {
			%>
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			<%
				}
			%>
			
			<%
				if (request.getAttribute("ListA") != null) {
				int endP = (Integer) request.getAttribute("endP"); 
			%>
			<c:if test="${tag >= endP}">			
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			</c:if>
			<c:if test="${tag < endP}">			
				<button id = "btnNext" ><a href="/CustomerSystem/T002?index=${tag+1}">></a></button>
				<button id="btnPrevious"><a href="/CustomerSystem/T002?index=<%= endP %>">>></a></button>
			</c:if>		
			<%
				}
			%>
			
			
			<p>Phân trang
	<c:choose>
		<c:when test="${requestScope.currentPage > 1}">
			<a href="?page=1">&lt;&lt;</a>
			<a href="?page=${requestScope.currentPage - 1}">&lt;</a>
		</c:when>
		<c:otherwise>
			<span>&lt;&lt;</span>
			<span>&lt;</span>
		</c:otherwise>
	</c:choose>
	
	<c:forEach var="pageNum" begin="1" end="${requestScope.totalPages}">
		<c:choose>
			<c:when test="${pageNum == requestScope.currentPage}">
				<span>${pageNum}</span>
			</c:when>
			<c:otherwise>
				
					<input hidden id = "elementByIdPage" value = "${pageNum}" name = "pagepage"/>
					<button type="submit">${pageNum}</button>
				</form>
			</c:otherwise>
		</c:choose>
	</c:forEach>
	
	<c:choose>
		<c:when test="${requestScope.currentPage < requestScope.totalPages}">
			<a href="?page=${requestScope.currentPage + 1}">&gt;</a>
			<a href="?page=${requestScope.totalPages}">&gt;&gt;</a>
		</c:when>
		<c:otherwise>
			<span>&gt;</span>
			<span>&gt;&gt;</span>
		</c:otherwise>
	</c:choose>
</p>
				
</form>		
		</div>
	</div>
	<form action ="/CustomerSystem/T002" method = "POST" onsubmit = "return deleteRows();">
	<table class = "search-container__table">
        <tr class = "search-container__table--tieude">
        	<th class = "searchtable-trcheck"><input type="checkbox" id = "checkAll" name="checkboxAll" value="" onclick = "checkBox(this)"></th>
            <th class = "searchtable-trid">Customer ID</th>
            <th class = "searchtable-trname">Customer Name</th>
            <th class = "searchtable-trsex">Sex</th>
            <th class = "searchtable-trbirthday">Birthday</th>
            <th class = "searchtable-traddress">Address</th>
        </tr>
<c:choose>
    <c:when test="${not empty listDataSearch}">
    	
        <c:forEach items="${listDataSearch}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:when>
    <c:when test="${not empty ListA}">
        <c:forEach items="${ListA}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:when>
    <c:otherwise>
        <c:forEach items="${ListA}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:otherwise>
    
</c:choose>


    </table>
    <div class = "search-btn__form">
		<button class = "search-container__nav-btnAddNew">
			<a href="/CustomerSystem/T003" >Add new</a>
		</button>
    		<%
				if (request.getAttribute("ListA") != null || request.getAttribute("listDataSearch") != null) {
			%>
				<button type = "submit"  class = "search-container__delete" >Delete</button>
			<%
				}
			%>
			
			<%
				if (request.getAttribute("ListA") == null && request.getAttribute("listDataSearch") == null) {
			%>
			<button type = "submit" disabled style="pointer-events: none;" onclick="deleteRows()"class = "search-container__delete" >Delete</button>
			<%
				}
			%>
    </div>
	</form>
	</div>
	<footer class="footer">
		<div class="header-br"></div>
		<div class="footer-text__copyright">Copyright (c) 2000-2008
			FUJINET, All Rights Reserved.</div>
	</footer>
</div>
</div>

<%
	if (request.getAttribute("messageFrom") != null) {
%>
<script>
	window.onload = function () {		
		alert('<%=request.getAttribute("messageFrom")%>')
		document.querySelector(".txtCustomerValidateFROM").value = <%=request.getAttribute("dataFrom")%>
	}
</script>
<%
	}
%>

<%
	if (request.getAttribute("messageTo") != null) {
%>
<script>
	window.onload = function () {		
		alert("<%=request.getAttribute("messageTo")%>")
		document.querySelector(".txtCustomerValidateTO").value = <%=request.getAttribute("dataTo")%>
	}
</script>
<%
	}
%>

<%
	if (request.getAttribute("errorFromTo") != null) {
%>
<script>
	alert("<%=request.getAttribute("errorFromTo")%>")
	document.querySelector(".txtCustomerValidateFROM").value = <%=request.getAttribute("dataFrom")%>
	document.querySelector(".txtCustomerValidateTO").value = <%=request.getAttribute("dataTo")%>
</script>
<%
	}
%>
<%
	String messageCheckNot = Constants.CHECKED_NOT_ERROR;
%>
<script>
	<%@include file="/WEB-INF/javascript/T002.js"%>
</script>
</body>
</html>























String page = request.getParameter("pagepage");
			if (page == null) {
				page = "1";
			}
			//int page = 1; // trang hiện tại
			int recordsPerPage = 15; // số phần tử hiển thị trên mỗi trang
			int startIndex = (Integer.parseInt(page) - 1) * recordsPerPage; // vị trí bắt đầu của trang hiện tại
			int endIndex = startIndex + recordsPerPage; // vị trí kết thúc của trang hiện tại
			int totalRecords = resultSearch.size(); // tổng số phần tử của danh sách
			int totalPages = (int) Math.ceil((double) totalRecords / recordsPerPage); // tổng số trang
			List<T002Dto> resultPaginated = resultSearch.subList(startIndex, Math.min(endIndex, totalRecords));
			request.setAttribute("listDataSearch", resultPaginated);
			request.setAttribute("currentPage", page);
			request.setAttribute("recordsPerPage", recordsPerPage);
			request.setAttribute("totalRecords", totalRecords);
			request.setAttribute("totalPages", totalPages);






<%
				if (request.getAttribute("ListA") == null) {
			%>
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
			<%
				}
			%>
			<%
				if (request.getAttribute("ListA") != null) {
			%>
				
				<c:if test="${tag == 1}">				
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
				</c:if>
				<c:if test="${tag > 1 }">	
					<button id = "btnFirst"><a href="/CustomerSystem/T002?index=<%=1 %>"><<</a></button>			
					<button id = "btnPrevious"><a href="/CustomerSystem/T002?index=${tag-1}"><</a></button>
				</c:if>
			<%
				}
			%>
			
			
			<lable class = "search-container__btnContext--textstart search-container__text_text">Previous</lable>
		</div>
		
		<div class = "search-container__btnContext--end">
			<lable class = "search-container__btnContext--textend search-container__text_text">Next</lable>
			<%
				if (request.getAttribute("ListA") == null) {
			%>
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			<%
				}
			%>
			
			<%
				if (request.getAttribute("ListA") != null) {
				int endP = (Integer) request.getAttribute("endP"); 
			%>
			<c:if test="${tag >= endP}">			
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			</c:if>
			<c:if test="${tag < endP}">			
				<button id = "btnNext" ><a href="/CustomerSystem/T002?index=${tag+1}">></a></button>
				<button id="btnPrevious"><a href="/CustomerSystem/T002?index=<%= endP %>">>></a></button>
			</c:if>		
			<%
				}
			%>





























<c:forEach var="pageNum" begin="1" end="${requestScope.totalPages}" varStatus="loop">
  <c:choose>
    <c:when test="${pageNum == requestScope.currentPage}">
      <span>${pageNum}</span>
    </c:when>
    <c:otherwise>
      <form method="POST" action="/CustomerSystem/T002">
        <input type="hidden" name="pagepage" value="${pageNum}" />
        <button type="submit">${pageNum}</button>
      </form>
    </c:otherwise>
  </c:choose>
</c:forEach>


String page = request.getParameter("pagepage");
if (page == null) {
    page = "1";
}
int recordsPerPage = 15; // số phần tử hiển thị trên mỗi trang
int startIndex = (Integer.parseInt(page) - 1) * recordsPerPage;





String page = request.getParameter("pagepage");
			if (page == null) {
				page = "1";
			}
			//int page = 1; // trang hiện tại
			int recordsPerPage = 15; // số phần tử hiển thị trên mỗi trang
			int startIndex = (Integer.parseInt(page) - 1) * recordsPerPage




<c:choose>
		<c:when test="${requestScope.currentPage > 1}">
			<a href="?page=1">&lt;&lt;</a>
			<a href="?page=${requestScope.currentPage - 1}">&lt;</a>
		</c:when>
		<c:otherwise>
			<span>&lt;&lt;</span>
			<span>&lt;</span>
		</c:otherwise>
	</c:choose>
	
	<c:forEach var="pageNum" begin="1" end="${requestScope.totalPages}">
		<c:choose>
			<c:when test="${pageNum == requestScope.currentPage}">
				<span>${pageNum}</span>
			</c:when>
			<c:otherwise>
				<form action ="/CustomerSystem/T002" method = "POST">
					<input hidden id = "elementByIdPage" value = "${pageNum}" name = "pagepage"/>
					<button type="submit"><a href="/CustomerSystem/T002?page=${pageNum}">${pageNum}</a></button>
				</form>
			</c:otherwise>
		</c:choose>
	</c:forEach>
	
	<c:choose>
		<c:when test="${requestScope.currentPage < requestScope.totalPages}">
			<a href="?page=${requestScope.currentPage + 1}">&gt;</a>
			<a href="?page=${requestScope.totalPages}">&gt;&gt;</a>
		</c:when>
		<c:otherwise>
			<span>&gt;</span>
			<span>&gt;&gt;</span>
		</c:otherwise>
	</c:choose>































T002Dao daoSearch = new T002Dao();
			List<T002Dto> resultSearch = daoSearch.getDataSearch(name, sex, birthdayFrom, birthdayTo);
			
//			HttpSession session = request.getSession();
//			int page = Integer.parseInt((String) session.getAttribute("indexsession"));
			int page = 1; // trang hiện tại
			int recordsPerPage = 15; // số phần tử hiển thị trên mỗi trang
			int startIndex = (page - 1) * recordsPerPage; // vị trí bắt đầu của trang hiện tại
			int endIndex = startIndex + recordsPerPage; // vị trí kết thúc của trang hiện tại
			int totalRecords = resultSearch.size(); // tổng số phần tử của danh sách
			int totalPages = (int) Math.ceil((double) totalRecords / recordsPerPage); // tổng số trang
			List<T002Dto> resultPaginated = resultSearch.subList(startIndex, Math.min(endIndex, totalRecords));
			request.setAttribute("listDataSearch", resultPaginated);
			request.setAttribute("currentPage", page);
			request.setAttribute("recordsPerPage", recordsPerPage);
			request.setAttribute("totalRecords", totalRecords);
			request.setAttribute("totalPages", totalPages);
			
			RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
			rd.forward(request, response);








List<T002Dto> resultSearch = daoSearch.getDataSearch(name, sex, birthdayFrom, birthdayTo);

if (!resultSearch.isEmpty()) {
    request.setAttribute("resultSearch", resultSearch);
    HttpSession session = request.getSession();
    session.setAttribute("resultSearchSession", resultSearch);
}





HttpSession session = request.getSession();
List<T002Dto> resultSearch = (List<T002Dto>) session.getAttribute("resultSearchSession");

// Kiểm tra xem list có data hay không
if (resultSearch != null && !resultSearch.isEmpty()) {
    // Sử dụng list ở đây
} else {
    // Xử lý trường hợp không có dữ liệu ở đây
}




























List<T002Dto> resultSearch = daoSearch.getDataSearch(name, sex, birthdayFrom, birthdayTo);
List<T002Dto> resultSearch = (List<T002Dto>) request.getAttribute("resultSearch");
// sử dụng list resultSearch ở đây



public class MyServlet extends HttpServlet {
  
  private List<String> dataSearch; // Thuộc tính để lưu trữ giá trị của dataSearch
  
  public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    // Lấy giá trị của dataSearch từ request POST
    String[] searchData = request.getParameterValues("dataSearch");
    dataSearch = Arrays.asList(searchData); // Lưu giá trị của dataSearch vào thuộc tính của ServletContext
  }

  public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    // Truy cập vào thuộc tính của ServletContext để lấy giá trị của dataSearch
    List<String> search = (List<String>) getServletContext().getAttribute("dataSearch");
    // Tiếp tục xử lý với giá trị của search
  }
  
}



window.addEventListener("load", function() {
  if (checkBirthdayFrom !== null) {
    alert(document.getElementById("checkBirthdayFrom").value);
  }
});





<input type="hidden" id="dataFrom" value="<%= dataFrom %>">
<input type="hidden" id="dataTo" value="<%= dataTo %>">
<input type="hidden" id="checkBirthdayFrom" value="<%= checkBirthdayFrom %>">
<input type="hidden" id="checkBirthdayTo" value="<%= checkBirthdayTo %>">
<input type="hidden" id="checkedNot" value="<%= checkedNot %>">
<input type="hidden" id="messageErrorTo" value="<%= messageErrorTo %>">
<input type="hidden" id="messageErrorFrom" value="<%= messageErrorFrom %>">
<input type="hidden" id="messageErrorFromBiggerTo" value="<%= checkerrFromTo %>">
<script>
	var dataFrom = document.getElementById("dataFrom").value;
	var dataTo = document.getElementById("dataTo").value;
	const checkBirthdayFrom = document.getElementById("checkBirthdayFrom").value;
	var checkBirthdayTo = document.getElementById("checkBirthdayTo").value;
	var checkedNot = document.getElementById("checkedNot").value;
	var messageErrorTo = document.getElementById("messageErrorTo").value;
	var messageErrorFrom = document.getElementById("messageErrorFrom").value;
	var checkerrFromTo = document.getElementById("messageErrorFromBiggerTo").value;
	
	window.onload = function() {
		if (checkBirthdayFrom !== null) {
			alert(document.getElementById("checkBirthdayFrom").value);
		}
	};








window.onload = function() {
  // Xử lý sau khi trang đã tải xong
  console.log('Trang đã tải lại thành công!');
};




<p>
	<c:choose>
		<c:when test="${requestScope.currentPage > 1}">
			<a href="?page=1">&lt;&lt;</a>
			<a href="?page=${requestScope.currentPage - 1}">&lt;</a>
		</c:when>
		<c:otherwise>
			<span>&lt;&lt;</span>
			<span>&lt;</span>
		</c:otherwise>
	</c:choose>
	
	<c:forEach var="pageNum" begin="1" end="${requestScope.totalPages}">
		<c:choose>
			<c:when test="${pageNum == requestScope.currentPage}">
				<span>${pageNum}</span>
			</c:when>
			<c:otherwise>
				<a href="?page=${pageNum}">${pageNum}</a>
			</c:otherwise>
		</c:choose>
	</c:forEach>
	
	<c:choose>
		<c:when test="${requestScope.currentPage < requestScope.totalPages}">
			<a href="?page=${requestScope.currentPage + 1}">&gt;</a>
			<a href="?page=${requestScope.totalPages}">&gt;&gt;</a>
		</c:when>
		<c:otherwise>
			<span>&gt;</span>
			<span>&gt;&gt;</span>
		</c:otherwise>
	</c:choose>
</p>







<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<html>
<head>
	<title>Pagination Example</title>
</head>
<body>
	<h1>Search Results</h1>
	
	<table>
		<thead>
			<tr>
				<th>Name</th>
				<th>Sex</th>
				<th>Birthday</th>
			</tr>
		</thead>
		<tbody>
			<c:forEach var="item" items="${requestScope.listDataSearch}">
				<tr>
					<td>${item.name}</td>
					<td>${item.sex}</td>
					<td>${item.birthday}</td>
				</tr>
			</c:forEach>
		</tbody>
	</table>
	
	<p>Showing page ${requestScope.currentPage} of ${requestScope.totalPages}</p>
	<p>
		<c:choose>
			<c:when test="${requestScope.currentPage > 1}">
				<a href="?page=${requestScope.currentPage - 1}">Previous</a>
			</c:when>
			<c:otherwise>
				<span>Previous</span>
			</c:otherwise>
		</c:choose>
		
		<c:forEach var="pageNum" begin="1" end="${requestScope.totalPages}">
			<c:choose>
				<c:when test="${pageNum == requestScope.currentPage}">
					<span>${pageNum}</span>
				</c:when>
				<c:otherwise>
					<a href="?page=${pageNum}">${pageNum}</a>
				</c:otherwise>
			</c:choose>
		</c:forEach>
		
		<c:choose>
			<c:when test="${requestScope.currentPage < requestScope.totalPages}">
				<a href="?page=${requestScope.currentPage + 1}">Next</a>
			</c:when>
			<c:otherwise>
				<span>Next</span>
			</c:otherwise>
		</c:choose>
	</p>
</body>
</html>













package fjs.cs.action;

import java.io.IOException;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import fjs.cs.common.Constants;
import fjs.cs.dao.T002Dao;
import fjs.cs.dto.T002Dto;

/**
 * Servlet implementation class T002
 */
@WebServlet("/T002")
public class T002 extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public T002() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String indexPage = request.getParameter("index");
		if (indexPage == null) {
			indexPage = "1";
		}
		
		int index = Integer.parseInt(indexPage);
		request.setAttribute("tag", index);
		T002Dao dao = new T002Dao();
		
		
		//get data search
		List<T002Dto> list = dao.getData();
		
		request.setAttribute("listData", list);
		//page 
		int count = dao.getDataPage();
		//trang cuoi cùng
		int endpage = count/3;
		if (count % 3 != 0) {
			endpage++;
		}
		
		List<T002Dto> listPage = dao.pagingData(index);
		request.setAttribute("ListA", listPage);
		request.setAttribute("endP", endpage);
		request.getRequestDispatcher(Constants.T002_SEARCH);
		
		
				//request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp").forward(request, response);
		RequestDispatcher myRD = null;
		// Hien thi man hinh Login
		myRD = request.getRequestDispatcher(Constants.T002_SEARCH);
		myRD.forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		response.setContentType("text/html");
		try {
			String name = request.getParameter("txtCustomerName");
			String sex = request.getParameter("browser");
			String birthdayFrom = request.getParameter("txtBirthdayFromName");
			String birthdayTo = request.getParameter("txtBirthdayToName");

			
				if (birthdayFrom != "") {
					if (!isValidDate(birthdayFrom)) {
						String messagebirthdayfrom = Constants.MESSAGE_ERROR_FROM;
						String dataFrom = birthdayFrom;
						request.setAttribute("dataFrom", dataFrom);
						request.setAttribute("messageFrom", messagebirthdayfrom);
						RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
						rd.forward(request, response);
						return;
					}
				}
			
			
				if (birthdayTo != "") {
					if (!isValidDate(birthdayTo)) {
						String messagebirthTo = Constants.MESSAGE_ERROR_TO;
						String dataTo = birthdayTo;
						request.setAttribute("dataTo", dataTo);
						request.setAttribute("messageTo", messagebirthTo);
						RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
						rd.forward(request, response);
						return;
					}
				}
			
			
		
			if (isValidDate(birthdayFrom) && isValidDate(birthdayTo)) {
				String dayFrom = birthdayFrom.replaceAll("/", "");
				String dayTo = birthdayTo.replaceAll("/", "");
				if (Integer.parseInt(dayTo) < Integer.parseInt(dayFrom)) {
					String messageFromTo = Constants.MESSAGE_TO_SMALL_FROM;
					request.setAttribute("errorFromTo", messageFromTo);
					RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
					rd.forward(request, response);
					return;
				}
			}
		
			
			
			
//			if (name == null || name.trim().isEmpty()) {
//			    name = null;
//			}
//			if (sex == null || sex.trim().isEmpty()) {
//			    sex = null;
//			}
//			if (birthdayFrom == null || birthdayFrom.trim().isEmpty()) {
//			    birthdayFrom = null;
//			}
//			if (birthdayTo == null || birthdayTo.trim().isEmpty()) {
//			    birthdayTo = null;
//			}

			T002Dao daoSearch = new T002Dao();
			
			List<T002Dto> resultSearch = daoSearch.getDataSearch(name, sex, birthdayFrom, birthdayTo);
			int page = 1; // trang hiện tại
			int recordsPerPage = 3; // số phần tử hiển thị trên mỗi trang
			int startIndex = (page - 1) * recordsPerPage; // vị trí bắt đầu của trang hiện tại
			int endIndex = startIndex + recordsPerPage; // vị trí kết thúc của trang hiện tại
			int totalRecords = resultSearch.size(); // tổng số phần tử của danh sách
			int totalPages = (int) Math.ceil((double) totalRecords / recordsPerPage); // tổng số trang
			List<T002Dto> resultPaginated = resultSearch.subList(startIndex, Math.min(endIndex, totalRecords));
			request.setAttribute("listDataSearch", resultPaginated);
			request.setAttribute("currentPage", page);
			request.setAttribute("recordsPerPage", recordsPerPage);
			request.setAttribute("totalRecords", totalRecords);
			request.setAttribute("totalPages", totalPages);
			
			//request.setAttribute("listDataSearch", resultSearch);

			
			String[] ids = request.getParameterValues("selectedValues");
			if (ids != null && ids.length > 0) {
			    String idList = String.join(",", ids);
			   
			    // Loại bỏ các dấu ngoặc kép trong chuỗi
			    idList = idList.replace("[\"", "").replace("\"]", "");
			    String result = idList.replaceAll("[^\\d,]", "").replace("\"", "");
			    String[] result2 = result.split(",");
			    for (int i = 0;i< result2.length; i++) {		
			    	daoSearch.deleteData(result2);
			    }
			}
			T002Dao dao = new T002Dao();
			List<T002Dto> list = dao.getData();
			request.setAttribute("listData", list);

			// Chuyển hướng request và response đến trang jsp
			RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
			rd.forward(request, response);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
private boolean isValidDate(String txtDate) {
	    
	    String rxDatePattern = "^(\\d{4})(\\/|-)(\\d{1,2})(\\/|-)(\\d{1,2})$";
	    Pattern pattern = Pattern.compile(rxDatePattern);
	    Matcher matcher = pattern.matcher(txtDate);
	    if (!matcher.matches()) {
	        return false;
	    }
	    int dtMonth = Integer.parseInt(matcher.group(3));
	    int dtDay = Integer.parseInt(matcher.group(5));
	    int dtYear = Integer.parseInt(matcher.group(1));
	    if (dtMonth < 1 || dtMonth > 12) {
	        return false;
	    } else if (dtDay < 1 || dtDay > 31) {
	        return false;
	    } else if ((dtMonth == 4 || dtMonth == 6 || dtMonth == 9 || dtMonth == 11) && dtDay == 31) {
	        return false;
	    } else if (dtMonth == 2) {
	        boolean isLeap = (dtYear % 4 == 0 && (dtYear % 100 != 0 || dtYear % 400 == 0));
	        if (dtDay > 29 || (dtDay == 29 && !isLeap)) {
	            return false;
	        }
	    }
	    return true;
	}

}


<%@page import="java.awt.List"%>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<%@page import="fjs.cs.dao.T003Dao,fjs.cs.common.Constants"%>  

<title>Search - Training</title>
</head>
<style type="text/css">
  <%@include file="/WEB-INF/css/common.css"%>
</style>
<style type="text/css">
  <%@include file="/WEB-INF/css/T002.css"%>
</style>
<body>

<style type="text/jsp">
  <%@include file="/WEB-INF/include/header.jsp"%>
</style>

<div class = "search-container">
	<div class = "search-container__dan">
		<div class = "search-container__text search-container__text_text">
			Login > Search Customer
		</div>
	<div class = "search-container__context">
				<div class = "search-container__logo">
				Welcome
					<%if (session.getAttribute("name") != null) {
						Object session2 = session.getAttribute("name");
						session.setAttribute("name1", session2);
					%>
							<div><%=session.getAttribute("name") %></div>
					<%} %>
				</div>
		
			<a href = "/CustomerSystem/T001" class = "search-container__logout search-container__text_text" onclick = "Logout() ">
    			Log Out
			</a>
			<script>
				function Logout() {
				    <% session.removeAttribute("name"); %>  // Xóa session "name"
				    location.reload();
				}
			</script>
	</div>
	
	<div class = "search-container__line"></div>
	
	
<form id = "form-Search" action ="/CustomerSystem_Servlet_Jsp/T002" method = "POST" >
	<div class = "search-container__handalSearch">
		<div class = "search-container__handalSearch--margin handalSearch-customerName">
			<div class = "handalSearch-customercommon handalSearch-customerName__text search-container__text_text">Customer Name</div>
			<input id = "txtCustomerName" name = "txtCustomerName" maxLength = "50"/>
		</div>
		
		<div class = "search-container__handalSearch--margin handalSearch-customerSex">
			<div class = "handalSearch-customercommon handalSearch-customerSex__text search-container__text_text">Sex</div>
			<select name="browser" id = "cboSex">
				<option value=""></option>
		      	<option value="0">Male</option>
		     	 <option value="1">Female</option>
			</select>
		</div>
		
		<div class = "search-container__handalSearch--margin handalSearch-BirthdayFrom">
			<div class = "handalSearch-customercommon handalSearch-BirthdayFrom__text search-container__text_text">Birthday</div>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" name = "txtBirthdayFromName" maxLength = "10"/>
			<lable class = "handalSearch-BirthdayFrom__ngangcach">～</lable>
			<input id = "txtBirthdayTo" class = "txtCustomerValidateTO" name = "txtBirthdayToName" maxLength = "10"/>
		</div>
		
		<div class = "handalSearch-btnSearch">
			<button type = "submit" id = "btnSearch" onclick ="validateForm()">Search</button>
		</div>
	</div>
</form>
	
	
	<div class = "search-container__btnContext--chuyenhuong">
		<div class = "search-container__btnContext--start">
			<%
				if (request.getAttribute("ListA") == null || request.getAttribute("listDataSearch") == null) {
			%>
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
			<%
				}
			%>
			
			
			
			<%
				if (request.getAttribute("ListA") != null) {
			%>
				
				<c:if test="${tag == 1}">				
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
				</c:if>
				<c:if test="${tag > 1 }">	
					<button id = "btnFirst"><a href="/CustomerSystem_Servlet_Jsp/T002?index=<%=1 %>"><<</a></button>			
					<button id = "btnPrevious"><a href="/CustomerSystem_Servlet_Jsp/T002?index=${tag-1}"><</a></button>
				</c:if>
			<%
				}
			%>
			
			
			
			
			<lable class = "search-container__btnContext--textstart search-container__text_text">Previous</lable>
		</div>
		
		<div class = "search-container__btnContext--end">
			<lable class = "search-container__btnContext--textend search-container__text_text">Next</lable>
			<%
				if (request.getAttribute("ListA") == null || request.getAttribute("listDataSearch") == null) {
			%>
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			<%
				}
			%>
			
			
			<%
				if (request.getAttribute("ListA") != null) {
				int endP = (Integer) request.getAttribute("endP"); 
			%>
			<c:if test="${tag >= endP}">			
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			</c:if>
			<c:if test="${tag < endP}">			
				<button id = "btnNext" ><a href="/CustomerSystem_Servlet_Jsp/T002?index=${tag+1}">></a></button>
				<button id="btnPrevious"><a href="/CustomerSystem_Servlet_Jsp/T002?index=<%= endP %>">>></a></button>
			</c:if>		
			<%
				}
			%>
			
			<%
			if (request.getAttribute("listDataSearch") != null) {
			    int currentPage = (Integer) request.getAttribute("currentPage");
			    int totalPages = (Integer) request.getAttribute("totalPages"); 
			%>
			 	<c:if test="${currentPage == 1}">               
		        <button id="btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
		        <button id="btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
		    </c:if>
		    <c:if test="${currentPage > 1 }">    
		        <button id="btnFirst"><a href="/CustomerSystem_Servlet_Jsp/T002?index=<%=1 %>"><<</a></button>           
		        <button id="btnPrevious"><a href="/CustomerSystem_Servlet_Jsp/T002?index=${currentPage-1}"><</a></button>
		    </c:if>
		    
		    <c:if test="${currentPage >= totalPages}">           
		        <button id="btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
		        <button id="btnLast" disabled style="pointer-events: none;"><a href="#">>></a></button>
		    </c:if>
		    <c:if test="${currentPage < totalPages }">    
		        <button id="btnNext"><a href="/CustomerSystem_Servlet_Jsp/T002?index=${currentPage+1}">></a></button>
		        <button id="btnLast"><a href="/CustomerSystem_Servlet_Jsp/T002?index=<%= totalPages %>">>></a></button>
		    </c:if>
		
		<% } %>
				</div>
	</div>
	<form action ="/CustomerSystem_Servlet_Jsp/T002" method = "POST" onsubmit = "return deleteRows();">
	<table class = "search-container__table">
        <tr class = "search-container__table--tieude">
        	<th class = "searchtable-trcheck"><input type="checkbox" id = "checkAll" name="checkboxAll" value="" onclick = "checkBox(this)"></th>
            <th class = "searchtable-trid">Customer ID</th>
            <th class = "searchtable-trname">Customer Name</th>
            <th class = "searchtable-trsex">Sex</th>
            <th class = "searchtable-trbirthday">Birthday</th>
            <th class = "searchtable-traddress">Address</th>
        </tr>

<c:choose>
    <c:when test="${not empty listDataSearch}">
        <c:forEach items="${listDataSearch}" var="dept" >
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:when>
    <c:when test="${not empty ListA}">
        <c:forEach items="${ListA}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem_Servlet_Jsp/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:when>
    <c:otherwise>
        <c:forEach items="${ListA}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem_Servlet_Jsp/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:otherwise>
    
</c:choose>


    </table>
    <div class = "search-btn__form">
		<button class = "search-container__nav-btnAddNew">
			<a href="/CustomerSystem_Servlet_Jsp/T003" >Add new</a>
		</button>
    		<%
				if (request.getAttribute("ListA") != null || request.getAttribute("listDataSearch") != null) {
			%>
				<button type = "submit"  class = "search-container__delete" >Delete</button>
			<%
				}
			%>
			
			<%
				if (request.getAttribute("ListA") == null && request.getAttribute("listDataSearch") == null) {
			%>
			<button type = "submit" disabled style="pointer-events: none;" onclick="deleteRows()"class = "search-container__delete" >Delete</button>
			<%
				}
			%>
    </div>
	</form>
	</div>
	<footer class="footer">
		<div class="header-br"></div>
		<div class="footer-text__copyright">Copyright (c) 2000-2008
			FUJINET, All Rights Reserved.</div>
	</footer>
</div>
</div>

<% 
    Object dataFrom = request.getAttribute("dataFrom");
    Object dataTo = request.getAttribute("dataTo");
    Object checkBirthdayFrom = request.getAttribute("messageFrom");
    Object checkBirthdayTo = request.getAttribute("messageTo");
    Object checkerrFromTo = request.getAttribute("errorFromTo");
    String messageErrorTo = Constants.MESSAGE_ERROR_TO;
    String messageErrorFrom = Constants.MESSAGE_ERROR_FROM;
    
    if (dataFrom == null) {
    	dataFrom  = request.getAttribute("dataFrom");
    }
    if (dataTo == null) {
    	dataTo  = request.getAttribute("dataTo");
    }
    if (checkBirthdayFrom == null) {
    	checkBirthdayFrom  = request.getAttribute("messageFrom");
    }
    if (checkBirthdayTo == null) {
    	checkBirthdayTo  = request.getAttribute("messageTo");
    }
    
%>
<input type="hidden" id="dataFrom" value="<%= dataFrom %>">
<input type="hidden" id="dataTo" value="<%= dataTo %>">
<input type="hidden" id="checkBirthdayFrom" value="<%= checkBirthdayFrom %>">
<input type="hidden" id="checkBirthdayTo" value="<%= checkBirthdayTo %>">
<input type="hidden" id="messageErrorTo" value="<%= messageErrorTo %>">
<input type="hidden" id="messageErrorFrom" value="<%= messageErrorFrom %>">
<input type="hidden" id="messageErrorFromBiggerTo" value="<%= checkerrFromTo %>">
<script>
	<%@include file="/WEB-INF/js/T002.js"%>
</script>
</body>
</html>

