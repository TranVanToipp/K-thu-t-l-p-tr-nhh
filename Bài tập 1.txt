<%
	if (request.getAttribute("ListData") != null) {
	int endP = (Integer) request.getAttribute("endP"); 
	%>
	<c:if test="${tag >= endP}">			
	<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
	<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
	</c:if>
	<c:if test="${tag < endP}">			
	<button id = "btnNext" ><a href="/CustomerSystem/T002?index=${tag+1}">></a></button>
	<button id="btnPrevious"><a href="/CustomerSystem/T002?index=<%= endP %>">>></a></button>
	</c:if>		
	<%
	}
	%>





<c:if test="${tag == 1}">				
<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
</c:if>







Bean: Thành phần Bean trong Struts 1 được sử dụng để đóng gói dữ liệu từ form và truyền dữ liệu này đến các thành phần xử lý của ứng dụng. Để sử dụng Bean, bạn cần định nghĩa các lớp Bean và đăng ký chúng trong file struts-config.xml. Sau đó, bạn có thể sử dụng các thuộc tính của Bean trong file JSP bằng cách sử dụng đối tượng bean:write.

HTML: Thành phần HTML trong Struts 1 được sử dụng để tạo các trang HTML của ứng dụng web. Struts 1 hỗ trợ các thẻ HTML thông thường như <html>, <head>, <body>, <form>, <input>, <textarea>, vv. để tạo các trang web. Bạn có thể sử dụng các thẻ HTML này trong file JSP bằng cách sử dụng các thẻ struts-html.

Logic: Thành phần Logic trong Struts 1 được sử dụng để xử lý các yêu cầu từ người dùng và chuyển hướng các yêu cầu này đến các thành phần xử lý tương ứng của ứng dụng. Logic được định nghĩa trong file struts-config.xml và sử dụng trong các trang JSP bằng cách sử dụng các thẻ struts-logic.









<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.1//EN" "http://java.sun.com/j2ee/dtds/web-jsptaglibrary_1_1.dtd">
<taglib>
<tlibversion>1.2</tlibversion>
<jspversion>1.1</jspversion>
<shortname>logic</shortname>
<uri>http://struts.apache.org/tags-logic</uri>
<tag>
<name>empty</name>
<tagclass>org.apache.struts.taglib.logic.EmptyTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>equal</name>
<tagclass>org.apache.struts.taglib.logic.EqualTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>cookie</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>parameter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>forward</name>
<tagclass>org.apache.struts.taglib.logic.ForwardTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>name</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>greaterEqual</name>
<tagclass>org.apache.struts.taglib.logic.GreaterEqualTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>cookie</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>parameter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>greaterThan</name>
<tagclass>org.apache.struts.taglib.logic.GreaterThanTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>cookie</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>parameter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>iterate</name>
<tagclass>org.apache.struts.taglib.logic.IterateTag</tagclass>
<teiclass>org.apache.struts.taglib.logic.IterateTei</teiclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>collection</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>indexId</name>
<required>false</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>length</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>offset</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>type</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>lessEqual</name>
<tagclass>org.apache.struts.taglib.logic.LessEqualTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>cookie</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>parameter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>lessThan</name>
<tagclass>org.apache.struts.taglib.logic.LessThanTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>cookie</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>parameter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>match</name>
<tagclass>org.apache.struts.taglib.logic.MatchTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>cookie</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>location</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>parameter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>messagesNotPresent</name>
<tagclass>org.apache.struts.taglib.logic.MessagesNotPresentTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>message</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>messagesPresent</name>
<tagclass>org.apache.struts.taglib.logic.MessagesPresentTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>message</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>notEmpty</name>
<tagclass>org.apache.struts.taglib.logic.NotEmptyTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>notEqual</name>
<tagclass>org.apache.struts.taglib.logic.NotEqualTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>cookie</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>parameter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>notMatch</name>
<tagclass>org.apache.struts.taglib.logic.NotMatchTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>cookie</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>location</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>parameter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>notPresent</name>
<tagclass>org.apache.struts.taglib.logic.NotPresentTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>cookie</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>parameter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>role</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>user</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>present</name>
<tagclass>org.apache.struts.taglib.logic.PresentTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>cookie</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>parameter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>role</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>user</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>redirect</name>
<tagclass>org.apache.struts.taglib.logic.RedirectTag</tagclass>
<attribute>
<name>action</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>anchor</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>forward</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>href</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>page</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramProperty</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramScope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>transaction</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>useLocalEncoding</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
</taglib>






















<?xml version="1.0" encoding="UTF-8"?>







<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.1//EN" "http://java.sun.com/j2ee/dtds/web-jsptaglibrary_1_1.dtd">
<taglib>
<tlibversion>1.2</tlibversion>
<jspversion>1.1</jspversion>
<shortname>html</shortname>
<uri>http://struts.apache.org/tags-html</uri>
<tag>
<name>base</name>
<tagclass>org.apache.struts.taglib.html.BaseTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>target</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>server</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>button</name>
<tagclass>org.apache.struts.taglib.html.ButtonTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>cancel</name>
<tagclass>org.apache.struts.taglib.html.CancelTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>checkbox</name>
<tagclass>org.apache.struts.taglib.html.CheckboxTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>errors</name>
<tagclass>org.apache.struts.taglib.html.ErrorsTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>bundle</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>locale</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>file</name>
<tagclass>org.apache.struts.taglib.html.FileTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>accept</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>maxlength</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>size</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>form</name>
<tagclass>org.apache.struts.taglib.html.FormTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>action</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>acceptCharset</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>enctype</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>focus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>focusIndex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>method</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onreset</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onsubmit</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scriptLanguage</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>target</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>frame</name>
<tagclass>org.apache.struts.taglib.html.FrameTag</tagclass>
<attribute>
<name>action</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>module</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>anchor</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>forward</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>frameborder</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>frameName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>href</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>longdesc</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>marginheight</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>marginwidth</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>noresize</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>page</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramProperty</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramScope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scrolling</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>transaction</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>hidden</name>
<tagclass>org.apache.struts.taglib.html.HiddenTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>write</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>html</name>
<tagclass>org.apache.struts.taglib.html.HtmlTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>lang</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>locale</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>xhtml</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>image</name>
<tagclass>org.apache.struts.taglib.html.ImageTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>align</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>border</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>bundle</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>locale</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>page</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>pageKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>src</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>srcKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>img</name>
<tagclass>org.apache.struts.taglib.html.ImgTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>align</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>border</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>bundle</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>contextRelative</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>height</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>hspace</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>imageName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ismap</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>locale</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>lowsrc</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>page</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>pageKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>action</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>module</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramProperty</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramScope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>src</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>srcKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>useLocalEncoding</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>usemap</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>vspace</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>width</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>javascript</name>
<tagclass>org.apache.struts.taglib.html.JavascriptValidatorTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>cdata</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>dynamicJavascript</name>
<required>false</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>formName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>method</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>page</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scriptLanguage</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>src</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>staticJavascript</name>
<required>false</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>htmlComment</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>link</name>
<tagclass>org.apache.struts.taglib.html.LinkTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>action</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>module</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>anchor</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>forward</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>href</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>linkName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>page</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramProperty</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramScope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>target</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>transaction</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>useLocalEncoding</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>messages</name>
<tagclass>org.apache.struts.taglib.html.MessagesTag</tagclass>
<teiclass>org.apache.struts.taglib.html.MessagesTei</teiclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>bundle</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>locale</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>header</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>footer</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>message</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>multibox</name>
<tagclass>org.apache.struts.taglib.html.MultiboxTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>option</name>
<tagclass>org.apache.struts.taglib.html.OptionTag</tagclass>
<attribute>
<name>bundle</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>key</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>locale</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>options</name>
<tagclass>org.apache.struts.taglib.html.OptionsTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>collection</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>filter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>labelName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>labelProperty</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>optionsCollection</name>
<tagclass>org.apache.struts.taglib.html.OptionsCollectionTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>filter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>label</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>password</name>
<tagclass>org.apache.struts.taglib.html.PasswordTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>maxlength</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>readonly</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>redisplay</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>size</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>radio</name>
<tagclass>org.apache.struts.taglib.html.RadioTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>idName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>reset</name>
<tagclass>org.apache.struts.taglib.html.ResetTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>rewrite</name>
<tagclass>org.apache.struts.taglib.html.RewriteTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>action</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>module</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>anchor</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>forward</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>href</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>page</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramName</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramProperty</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>paramScope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>transaction</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>useLocalEncoding</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>select</name>
<tagclass>org.apache.struts.taglib.html.SelectTag</tagclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>multiple</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>size</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>submit</name>
<tagclass>org.apache.struts.taglib.html.SubmitTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>text</name>
<tagclass>org.apache.struts.taglib.html.TextTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>maxlength</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>readonly</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>size</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>textarea</name>
<tagclass>org.apache.struts.taglib.html.TextareaTag</tagclass>
<attribute>
<name>accesskey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>alt</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>altKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>cols</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>disabled</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>indexed</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onblur</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onchange</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ondblclick</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onfocus</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeydown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeypress</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onkeyup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousedown</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmousemove</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseout</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseover</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>onmouseup</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>readonly</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>rows</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>style</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleClass</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>styleId</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>tabindex</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>title</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>titleKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>xhtml</name>
<tagclass>org.apache.struts.taglib.html.XhtmlTag</tagclass>
<bodycontent>empty</bodycontent>
</tag>
</taglib>









<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE struts-config PUBLIC
          "-//Apache Software Foundation//DTD Struts Configuration 1.2//EN"
          "http://jakarta.apache.org/struts/dtds/struts-config_1_2.dtd">

<!--
     This is a blank Struts configuration file with an example
     welcome action/page and other commented sample elements.

     Tiles and the Struts Validator are configured using the factory defaults
     and are ready-to-use.

     NOTE: If you have a generator tool to create the corresponding Java classes
     for you, you could include the details in the "form-bean" declarations.
     Otherwise, you would only define the "form-bean" element itself, with the
     corresponding "name" and "type" attributes, as shown here.
-->


<struts-config>

<!-- ============================================ Data Source Configuration -->
<!--
<data-sources>
<data-source type="org.apache.commons.dbcp.BasicDataSource">
    <set-property
      property="driverClassName"
      value="org.postgresql.Driver" />
    <set-property
      property="url"
      value="jdbc:postgresql://localhost/mydatabase" />
    <set-property
      property="username"
      value="me" />
    <set-property
      property="password"
      value="test" />
    <set-property
      property="maxActive"
      value="10" />
    <set-property
      property="maxWait"
      value="5000" />
    <set-property
      property="defaultAutoCommit"
      value="false" />
    <set-property
      property="defaultReadOnly"
      value="false" />
    <set-property
      property="validationQuery"
      value="SELECT COUNT(*) FROM market" />
</data-source>
</data-sources>
-->

<!-- ================================================ Form Bean Definitions -->

    <form-beans>
    <!-- sample form bean descriptor for an ActionForm
        <form-bean
            name="inputForm"
            type="app.InputForm"/>
    end sample -->
    

    <!-- sample form bean descriptor for a DynaActionForm
        <form-bean
            name="logonForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property
                name="username"
                type="java.lang.String"/>
            <form-property
                name="password"
                type="java.lang.String"/>
       </form-bean>
    end sample -->
    </form-beans>


<!-- ========================================= Global Exception Definitions -->

    <global-exceptions>
        <!-- sample exception handler
        <exception
            key="expired.password"
            type="app.ExpiredPasswordException"
            path="/changePassword.jsp"/>
        end sample -->
    </global-exceptions>


<!-- =========================================== Global Forward Definitions -->
	
    
<!-- =========================================== Action Mapping Definitions -->
	<form-beans>
		<form-bean
            name="loginBean"
            type="fjs.cs.bean.LoginBean"/>
        <form-bean
        	name="searchBean"
        	type="fjs.cs.bean.SearchBean"/>
	</form-beans>
	<form-beans>
		<form-bean
            name="loginBean"
            type="fjs.cs.bean.LoginBean"/>
        <form-bean
        	name="searchBean"
        	type="fjs.cs.bean.SearchBean"/>
	</form-beans>
	<global-forwards>
        <forward
        	name="T001"
        	path="/pages/T001.jsp"/>
    </global-forwards>
    <action-mappings>
            <!-- Default "Welcome" action -->
            <!-- Forwards to Welcome.jsp -->
        <action
        	input="/pages/T001.jsp"
           	path="/T001"
            type="fjs.cs.action.T001"
            validate="true"
            name="loginBean"
			scope="request">
            <forward name="success" path="/T002.do">
				
			</forward>
            <forward name="fail" path="/pages/T001.jsp"/>
        </action>
        
        <action
        	path="/T002"
        	type="fjs.cs.action.T002"
        	name="searchBean"
        	scope="request">
        	<forward name="T002" path="/pages/T002.jsp"/>
        	<forward name="T003" path="/pages/T003.jsp"/>
        </action>
     
      
    <!-- sample input and input submit actions

        <action
            path="/Input"
            type="org.apache.struts.actions.ForwardAction"
            parameter="/pages/Input.jsp"/>

        <action
            path="/InputSubmit"
            type="app.InputAction"
            name="inputForm"
            scope="request"
            validate="true"
            input="/pages/Input.jsp"/>

            <action
                path="/edit*"
                type="app.Edit{1}Action"
                name="inputForm"
                scope="request"
                validate="true"
                input="/pages/Edit{1}.jsp"/>

    end samples -->
    </action-mappings>
<!-- ============================================= Controller Configuration -->

    <controller
       processorClass="org.apache.struts.tiles.TilesRequestProcessor"/>


<!-- ======================================== Message Resources Definitions -->

    <message-resources parameter="MessageResources" null="false"/>


<!-- =============================================== Plug Ins Configuration -->

  <!-- ======================================================= Tiles plugin -->
  <!--
     This plugin initialize Tiles definition factory. This later can takes some
	 parameters explained here after. The plugin first read parameters from
	 web.xml, thenoverload them with parameters defined here. All parameters
	 are optional.
     The plugin should be declared in each struts-config file.
       - definitions-config: (optional)
            Specify configuration file names. There can be several comma
		    separated file names (default: ?? )
       - moduleAware: (optional - struts1.1)
            Specify if the Tiles definition factory is module aware. If true
            (default), there will be one factory for each Struts module.
			If false, there will be one common factory for all module. In this
            later case, it is still needed to declare one plugin per module.
            The factory will be initialized with parameters found in the first
            initialized plugin (generally the one associated with the default
            module).
			  true : One factory per module. (default)
			  false : one single shared factory for all modules
	   - definitions-parser-validate: (optional)
	        Specify if xml parser should validate the Tiles configuration file.
			  true : validate. DTD should be specified in file header (default)
			  false : no validation

	  Paths found in Tiles definitions are relative to the main context.
  -->

    <plug-in className="org.apache.struts.tiles.TilesPlugin" >

      <!-- Path to XML definition file -->
      <set-property property="definitions-config"
                       value="/WEB-INF/tiles-defs.xml" />
      <!-- Set Module-awareness to true -->
      <set-property property="moduleAware" value="true" />
    </plug-in>
  <!-- =================================================== Validator plugin -->
  <plug-in className="org.apache.struts.validator.ValidatorPlugIn">
    <set-property
        property="pathnames"
        value="/WEB-INF/validator-rules.xml,/WEB-INF/validation.xml"/>
  </plug-in> 
</struts-config>












<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE taglib PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.1//EN" "http://java.sun.com/j2ee/dtds/web-jsptaglibrary_1_1.dtd">
<taglib>
<tlibversion>1.2</tlibversion>
<jspversion>1.1</jspversion>
<shortname>bean</shortname>
<uri>http://struts.apache.org/tags-bean</uri>
<tag>
<name>cookie</name>
<tagclass>org.apache.struts.taglib.bean.CookieTag</tagclass>
<teiclass>org.apache.struts.taglib.bean.CookieTei</teiclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>multiple</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>define</name>
<tagclass>org.apache.struts.taglib.bean.DefineTag</tagclass>
<teiclass>org.apache.struts.taglib.bean.DefineTei</teiclass>
<bodycontent>JSP</bodycontent>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>toScope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>type</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>header</name>
<tagclass>org.apache.struts.taglib.bean.HeaderTag</tagclass>
<teiclass>org.apache.struts.taglib.bean.HeaderTei</teiclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>multiple</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>include</name>
<tagclass>org.apache.struts.taglib.bean.IncludeTag</tagclass>
<teiclass>org.apache.struts.taglib.bean.IncludeTei</teiclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>anchor</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>forward</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>href</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>page</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>transaction</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>message</name>
<tagclass>org.apache.struts.taglib.bean.MessageTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>arg0</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>arg1</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>arg2</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>arg3</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>arg4</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>bundle</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>key</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>locale</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>page</name>
<tagclass>org.apache.struts.taglib.bean.PageTag</tagclass>
<teiclass>org.apache.struts.taglib.bean.PageTei</teiclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>parameter</name>
<tagclass>org.apache.struts.taglib.bean.ParameterTag</tagclass>
<teiclass>org.apache.struts.taglib.bean.ParameterTei</teiclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>multiple</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>value</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>resource</name>
<tagclass>org.apache.struts.taglib.bean.ResourceTag</tagclass>
<teiclass>org.apache.struts.taglib.bean.ResourceTei</teiclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>input</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>size</name>
<tagclass>org.apache.struts.taglib.bean.SizeTag</tagclass>
<teiclass>org.apache.struts.taglib.bean.SizeTei</teiclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>collection</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>struts</name>
<tagclass>org.apache.struts.taglib.bean.StrutsTag</tagclass>
<teiclass>org.apache.struts.taglib.bean.StrutsTei</teiclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>id</name>
<required>true</required>
<rtexprvalue>false</rtexprvalue>
</attribute>
<attribute>
<name>formBean</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>forward</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>mapping</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
<tag>
<name>write</name>
<tagclass>org.apache.struts.taglib.bean.WriteTag</tagclass>
<bodycontent>empty</bodycontent>
<attribute>
<name>bundle</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>filter</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>format</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>formatKey</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>ignore</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>locale</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>name</name>
<required>true</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>property</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
<attribute>
<name>scope</name>
<required>false</required>
<rtexprvalue>true</rtexprvalue>
</attribute>
</tag>
</taglib>























/**
 * @(#)T002.java 16-00 2023/02/22
 *
 * Copyright(C) 2023 by TranVanToi  LTV
 *
 * Last_Update 2023/02/22.
 * Version 1.00.
 */

package fjs.cs.action;


import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * T002
 * 
 * @version 1.00
 * @since 1.00
 * @author toi_tv_ttv
 * 
 */
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.sun.org.apache.bcel.internal.generic.RETURN;

import fjs.cs.common.Constants;
import fjs.cs.dao.T001Dao;
import fjs.cs.dao.T002Dao;
import fjs.cs.dto.T001Dto;
import fjs.cs.dto.T002Dto;


public class T002 extends HttpServlet {
	private static final long serialVersionUID = 1L;
	/**
	 * Init man hinh
	 * 
	 * @param HttpServletRequest  req
	 * @param HttpServletResponse resp
	 * @return RequestDispatcher
	 * @throws ServletException, IOException
	 * @since 1.00
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String indexPage = request.getParameter("index");
		if (indexPage == null) {
			indexPage = "1";
		}
		
		String pages = request.getParameter("page");
		if (pages == null) {
			pages= "1";
		}
		
		int page = Integer.parseInt(pages);
		HttpSession session = request.getSession();
		session.setAttribute("indexsession", page);
		
		int index = Integer.parseInt(indexPage);
		request.setAttribute("tag", index);
		T002Dao dao = new T002Dao();
		
		//get data
		List<T002Dto> list = null;
		int count;
		try {
			count = dao.getDataPage();
			int endpage = count/15;
			if (count % 15 != 0) {
				endpage++;
			}
			List<T002Dto> listPage = dao.pagingData(index);
			request.setAttribute("ListA", listPage);
			request.setAttribute("endP", endpage);
			request.getRequestDispatcher(Constants.T002_SEARCH);
			RequestDispatcher myRD = null;
			// Hien thi man hinh Search
			myRD = request.getRequestDispatcher(Constants.T002_SEARCH);
			myRD.forward(request, response);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * Event man hinh
	 * 
	 * @param HttpServletRequest  request
	 * @param HttpServletResponse response
	 * @return RequestDispatcher
	 * @throws ServletException, IOException
	 * @since 1.00
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html");
		try {
			String name = request.getParameter("txtCustomerName");
			String sex = request.getParameter("browser");
			String birthdayFrom = request.getParameter("txtBirthdayFromName");
			String birthdayTo = request.getParameter("txtBirthdayToName");
			validateDates(request, response, birthdayFrom, birthdayTo);
			deleteData(request, response);
			
			String page = request.getParameter("pagepage");
	        HttpSession session = request.getSession();

	        if (page != null && !page.isEmpty()) {
	            String sex1 = (String) session.getAttribute("sex");
	            String birthdayFrom1 = (String) session.getAttribute("birthdayFrom");
	            String birthdayTo1 = (String) session.getAttribute("birthdayTo");
	            processSearch(request, response, name, sex1, birthdayFrom1, birthdayTo1, page);
	            return;
	        } else {
	            page = "1";
	            request.setAttribute("nameSearch", name);
	            request.setAttribute("sexSearch", sex);
	            request.setAttribute("birthdayFromSearch", birthdayFrom);
	            request.setAttribute("birthdayToSearch", birthdayTo);
	            processSearch(request, response, name, sex, birthdayFrom, birthdayTo, page);
	            session.setAttribute("sex", sex);
	            session.setAttribute("birthdayFrom", birthdayFrom);
	            session.setAttribute("birthdayTo", birthdayTo);
	            return;
	        }
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private void processSearch(HttpServletRequest request, HttpServletResponse response, String name, String sex, String birthdayFrom, String birthdayTo, String page) throws ServletException, IOException {
	    T002Dao daoSearch = new T002Dao();
	    List<T002Dto> resultSearch = daoSearch.getDataSearch(name, sex, birthdayFrom, birthdayTo);
	    int recordsPerPage = 15;
	    int startIndex = (Integer.parseInt(page) - 1) * recordsPerPage;
	    int endIndex = startIndex + recordsPerPage;
	    int totalRecords = resultSearch.size();
	    int totalPages = (int) Math.ceil((double) totalRecords / recordsPerPage);
	    List<T002Dto> resultPaginated = resultSearch.subList(startIndex, Math.min(endIndex, totalRecords));
	    if (resultPaginated.size() == 0) {
	    	request.setAttribute("buttonDelete", resultPaginated);
	    }
	    request.setAttribute("listDataSearch", resultPaginated);
	    request.setAttribute("currentPage", page);
	    request.setAttribute("recordsPerPage", recordsPerPage);
	    request.setAttribute("totalRecords", totalRecords);
	    request.setAttribute("totalPages", totalPages);
	    RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
	    rd.forward(request, response);
	}
	
	private void deleteData(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
	    T002Dao daoSearch = new T002Dao();
	    String[] ids = request.getParameterValues("selectedValues");
	    if (ids == null) {
	    	return;
	    }
	    if (ids != null && ids.length > 0) {
	        String idList = String.join(",", ids);
	        idList = idList.replace("[\"", "").replace("\"]", "");
	        String result = idList.replaceAll("[^\\d,]", "").replace("\"", "");
	        String[] result2 = result.split(",");
	        daoSearch.deleteData(result2);
            return; 
	    }
	}
	
	private void validateDates(HttpServletRequest request, HttpServletResponse response, String birthdayFrom, String birthdayTo) throws ServletException, IOException {
	    if (birthdayFrom != null && !birthdayFrom.isEmpty() && !isValidDate(birthdayFrom)) {
	        String messagebirthdayfrom = Constants.MESSAGE_ERROR_FROM;
	        request.setAttribute("dataFrom", birthdayFrom);
	        request.setAttribute("messageFrom", messagebirthdayfrom);
	        RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
	        rd.forward(request, response);
	        return;
	    }
	    if (birthdayTo != null && !birthdayTo.isEmpty() && !isValidDate(birthdayTo)) {
	        String messagebirthTo = Constants.MESSAGE_ERROR_TO;
	        request.setAttribute("dataTo", birthdayTo);
	        request.setAttribute("messageTo", messagebirthTo);
	        RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
	        rd.forward(request, response);
	        return;
	    }
	    if (birthdayFrom != null && birthdayTo != null && !birthdayFrom.isEmpty() && !birthdayTo.isEmpty()) {
	        request.setAttribute("birthDayFromFrom", birthdayFrom);
	        request.setAttribute("birthDayToTo", birthdayTo);
	        if (isValidDate(birthdayFrom) && isValidDate(birthdayTo)) {
	            String dayFrom = birthdayFrom.replaceAll("/", "");
	            String dayTo = birthdayTo.replaceAll("/", "");
	            if (Integer.parseInt(dayTo) < Integer.parseInt(dayFrom)) {
	                String messageFromTo = Constants.MESSAGE_ERROR_FROM_BIGGER_TO;
	                request.setAttribute("errorFromTo", messageFromTo);
	                RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
	                rd.forward(request, response);
	                return;
	            }
	        }
	    }
	}
	
	private boolean isValidDate(String txtDate) {
	    String rxDatePattern = "^(\\d{4})(\\/|-)(\\d{1,2})(\\/|-)(\\d{1,2})$";
	    Pattern pattern = Pattern.compile(rxDatePattern);
	    Matcher matcher = pattern.matcher(txtDate);
	    if (!matcher.matches()) {
	        return false;
	    }
	    int dtMonth = Integer.parseInt(matcher.group(3));
	    int dtDay = Integer.parseInt(matcher.group(5));
	    int dtYear = Integer.parseInt(matcher.group(1));
	    if (dtMonth < 1 || dtMonth > 12) {
	        return false;
	    } else if (dtDay < 1 || dtDay > 31) {
	        return false;
	    } else if ((dtMonth == 4 || dtMonth == 6 || dtMonth == 9 || dtMonth == 11) && dtDay == 31) {
	        return false;
	    } else if (dtMonth == 2) {
	        boolean isLeap = (dtYear % 4 == 0 && (dtYear % 100 != 0 || dtYear % 400 == 0));
	        if (dtDay > 29 || (dtDay == 29 && !isLeap)) {
	            return false;
	        }
	    }
	    return true;
	}
}













<%@ taglib uri="/tags/struts-bean" prefix="bean" %>
<%@ taglib uri="/tags/struts-html" prefix="html" %>
<%@ taglib uri="/tags/struts-logic" prefix="logic" %>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<%@ page import="javax.servlet.http.HttpServletResponse" %>

<title>Search - Training</title>
</head>
<style type="text/css">
  <%@include file="/WEB-INF/css/common.css"%>
</style>
<style type="text/css">
  <%@include file="/WEB-INF/css/T002.css"%>
</style>
<body>
<style type="text/jsp">
  <%@include file="/WEB-INF/include/header.jsp"%>
</style>

<div class = "search-container">
	<div class = "search-container__dan">
		<div class = "search-container__text search-container__text_text">
			Login > Search Customer
		</div>
	<div class = "search-container__context">
				<div class = "search-container__logo">
				Welcome
				<% if (session.getAttribute("namenamewellcom") != null) {
				     String name = (String) session.getAttribute("namenamewellcom");
				%>
				     <div class= "search-container__logo--wellcomname"><%= " " + name %></div>
				<% } %>
				</div>
		
			<a href = "/CustomerSystem/T001" class = "search-container__logout search-container__text_text" onclick = "Logout() ">
    			Log Out
			</a>
	</div>
	
	<div class = "search-container__line"></div>
	
	
<form id = "form-Search" action ="/CustomerSystem/T002" method = "POST" >
	<div class = "search-container__handalSearch">
		<div class = "search-container__handalSearch--margin handalSearch-customerName">
			<div class = "handalSearch-customercommon handalSearch-customerName__text search-container__text_text">Customer Name</div>
			<%if (request.getAttribute("nameSearch") != null){ %>
				<input id = "txtCustomerName" name = "txtCustomerName" value ="<%=request.getAttribute("nameSearch")%>" maxLength = "50"/>
			<%} %>
			<%if (request.getAttribute("nameSearch") == null){ %>
				<input id = "txtCustomerName" name = "txtCustomerName" maxLength = "50"/>
			<%} %>
		</div>
		
		<%if (request.getAttribute("sexSearch") == null) { %>
		<div class = "search-container__handalSearch--margin handalSearch-customerSex">
			<div class = "handalSearch-customercommon handalSearch-customerSex__text search-container__text_text">Sex</div>
			<select name="browser" value = "1" id = "cboSex">
				<option value=""></option>
		      	<option value="0">Male</option>
		     	 <option value="1">Female</option>
			</select>
		</div>
		<%} %>
		<%if (request.getAttribute("sexSearch") != null) { %>
			<div class="search-container__handalSearch--margin handalSearch-customerSex">
			  <div class="handalSearch-customercommon handalSearch-customerSex__text search-container__text_text">Sex</div>
			  <select name="browser" id="cboSex">
			    <option value=""></option>
			    <option value="0" <% if(request.getAttribute("sexSearch")!=null && request.getAttribute("sexSearch").equals("0")){ %>selected<% } %>>Male</option>
			    <option value="1" <% if(request.getAttribute("sexSearch")!=null && request.getAttribute("sexSearch").equals("1")){ %>selected<% } %>>Female</option>
			  </select>
			</div>
		<%} %>
		
		<div class = "search-container__handalSearch--margin handalSearch-BirthdayFrom">
			<div class = "handalSearch-customercommon handalSearch-BirthdayFrom__text search-container__text_text">Birthday</div>
			
			
			<%if (request.getAttribute("dataFrom") != null) {%>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" value="<%=request.getAttribute("dataFrom")%>" name = "txtBirthdayFromName"  maxLength = "10"/>
			<%} %>
			
			<%if (request.getAttribute("birthdayFromSearch") != null && request.getAttribute("birthDayFromFrom") == null){%>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" value="<%=request.getAttribute("birthdayFromSearch")%>" name = "txtBirthdayFromName"  maxLength = "10"/>
			<%} %>
			
			<%if (request.getAttribute("dataFrom") == null && request.getAttribute("birthDayFromFrom") == null && request.getAttribute("birthdayFromSearch") == null){%>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" name = "txtBirthdayFromName"  maxLength = "10"/>
			<%} %>
			
			<%if (request.getAttribute("birthDayFromFrom") != null){%>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" value="<%=request.getAttribute("birthDayFromFrom")%>" name = "txtBirthdayFromName"  maxLength = "10"/>
			<%} %>
			
			
			
			<lable class = "handalSearch-BirthdayFrom__ngangcach">～</lable>
			
			<%if (request.getAttribute("dataTo") != null) {%>
				<input id = "txtBirthdayTo" class = "txtCustomerValidateTO" value="<%=request.getAttribute("dataTo")%>" name = "txtBirthdayToName" maxLength = "10"/>
			<%} %>
			
			<%if (request.getAttribute("dataTo") == null && request.getAttribute("birthDayToTo") == null){%>
				<input id = "txtBirthdayTo" class = "txtCustomerValidateTO" name = "txtBirthdayToName" maxLength = "10"/>
			<%} %>
			
			<%if (request.getAttribute("birthDayToTo") != null){%>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" value="<%=request.getAttribute("birthDayToTo")%>" name = "txtBirthdayFromName"  maxLength = "10"/>
			<%} %>
		</div>
		
		<div class = "handalSearch-btnSearch">
			<button type = "submit" id = "btnSearch">Search</button>
		</div>
	</div>

	
	<div class = "search-container__btnContext--chuyenhuong">
		<div class = "search-container__btnContext--start">
		

<c:if test="${empty requestScope.listDataSearch}">
<c:if test="${empty requestScope.ListData}">
<button id="btnFirst" disabled="true" style="pointer-events: none;">
<<
</button>
<button id="btnPrevious" disabled="true" style="pointer-events: none;">
<
</button>
</c:if>
</c:if>

<c:if test="${not empty requestScope.ListData}">
<c:choose>
<c:when test="${tag eq 1}">
<button id="btnFirst" disabled="true" style="pointer-events: none;">
<<
</button>
<button id="btnPrevious" disabled="true" style="pointer-events: none;">
<
</button>
</c:when>
<c:otherwise>
<button id="btnFirst">
<html:link page="/CustomerSystem/T002">
<<

</html:link>
</button>
<button id="btnPrevious">
<html:link page="/CustomerSystem/T002">
<

</html:link>
</button>
</c:otherwise>
</c:choose>

<c:choose>
<c:when test="${tag ge endP}">
<button id="btnNext" disabled="true" style="pointer-events: none;">
>
</button>
<button id="btnPrevious" disabled="true" style="pointer-events: none;">
>>
</button>
</c:when>
<c:otherwise>
<button id="btnNext">
<html:link page="/CustomerSystem/T002">
>

</html:link>
</button>
<button id="btnPrevious">
<html:link page="/CustomerSystem/T002">
>>

</html:link>
</button>
</c:otherwise>
</c:choose>
</c:if>

<c:if test="${not empty requestScope.listDataSearch}">
<label class="search-container__btnContext--textstart search-container__text_text">Previous</label>
</c:if>

<c:if test="${empty requestScope.listDataSearch}">
<c:if test="${empty requestScope.ListData}">
<button id="btnNext" disabled="true" style="pointer-events: none;">
>
</button>
<button id="btnPrevious" disabled="true" style="pointer-events: none;">
>>
</button>
</c:if>
<label class="search-container__btnContext--textstart search-container__text_text">Previous</label>
</c:if>

			
		
		</div>
	</div>
	<table class = "search-container__table">
        <tr class = "search-container__table--tieude">
        	<th class = "searchtable-trcheck"><input type="checkbox" id = "checkAll" name="checkboxAll" value="" onclick = "checkBox(this)"></th>
            <th class = "searchtable-trid">Customer ID</th>
            <th class = "searchtable-trname">Customer Name</th>
            <th class = "searchtable-trsex">Sex</th>
            <th class = "searchtable-trbirthday">Birthday</th>
            <th class = "searchtable-traddress">Address</th>
        </tr>
	
	<logic:notEmpty name="ListData">
	    <logic:iterate name="ListData" id="dept">
	        <tr>
	            <td class="searchtable-check"></td>
	            <td><a href="/CustomerSystem/T003?id=<bean:write name='dept' property='CUSTOMER_ID' />" class="searchtable-id"><bean:write name='dept' property='CUSTOMER_ID' /></a></td>
	            <td class="searchtable-name"><bean:write name='dept' property='CUSTOMER_NAME' /></td>
	            <td class="searchtable-sex"><bean:write name='dept' property='SEX' /></td>
	            <td class="searchtable-birthday"><bean:write name='dept' property='BIRTHDAY' /></td>
	            <td class="searchtable-address"><bean:write name='dept' property='ADDRESS' /></td>
	        </tr>
	    </logic:iterate>
	</logic:notEmpty>
    </table>
    <div class = "search-btn__form">
		<button class = "search-container__nav-btnAddNew">
			<a href="/CustomerSystem/T003" >Add new</a>
		</button>
		<%
		    Object listDataSearch = request.getAttribute("listDataSearch");
		    Object ListA = request.getAttribute("ListA");
		%>
		<%if (request.getAttribute("listDataSearch") == null && request.getAttribute("ListA") == null){ %>
			<button type="button" disabled style="pointer-events: none;" class="search-container__delete" onclick="deleteRows()">Delete</button>
		
		
		<% }else if (request.getAttribute("buttonDelete") != null) { %>
			<button type="button" disabled style="pointer-events: none;" class="search-container__delete" onclick="deleteRows()">Delete</button>
		
		<% } else {%>
			<button type="button" class="search-container__delete" onclick="deleteRows()">Delete</button>
		<%} %>
		
    </div>
	</form>
	</div>
	<footer class="footer">
		<div class="header-br"></div>
		<div class="footer-text__copyright">Copyright (c) 2000-2008
			FUJINET, All Rights Reserved.</div>
	</footer>
</div>
</div>
<script>
	<%@include file="/WEB-INF/js/T002.js"%>
</script>
</body>
</html>








































<c:if test="${empty requestScope.listDataSearch}">
<c:if test="${empty requestScope.ListData}">
<button id="btnFirst" disabled="true" style="pointer-events: none;">
<<
</button>
<button id="btnPrevious" disabled="true" style="pointer-events: none;">
<
</button>
</c:if>
</c:if>

<c:if test="${not empty requestScope.ListData}">
<c:choose>
<c:when test="${tag eq 1}">
<button id="btnFirst" disabled="true" style="pointer-events: none;">
<<
</button>
<button id="btnPrevious" disabled="true" style="pointer-events: none;">
<
</button>
</c:when>
<c:otherwise>
<button id="btnFirst">
<html:link page="/CustomerSystem/T002">
<<
<html:param name="index" value="1" />
</html:link>
</button>
<button id="btnPrevious">
<html:link page="/CustomerSystem/T002">
<
<html:param name="index" value="${tag - 1}" />
</html:link>
</button>
</c:otherwise>
</c:choose>

<c:choose>
<c:when test="${tag ge endP}">
<button id="btnNext" disabled="true" style="pointer-events: none;">
>
</button>
<button id="btnPrevious" disabled="true" style="pointer-events: none;">
>>
</button>
</c:when>
<c:otherwise>
<button id="btnNext">
<html:link page="/CustomerSystem/T002">
>
<html:param name="index" value="${tag + 1}" />
</html:link>
</button>
<button id="btnPrevious">
<html:link page="/CustomerSystem/T002">
>>
<html:param name="index" value="${endP}" />
</html:link>
</button>
</c:otherwise>
</c:choose>
</c:if>

<c:if test="${not empty requestScope.listDataSearch}">
<label class="search-container__btnContext--textstart search-container__text_text">Previous</label>
</c:if>

<c:if test="${empty requestScope.listDataSearch}">
<c:if test="${empty requestScope.ListData}">
<button id="btnNext" disabled="true" style="pointer-events: none;">
>
</button>
<button id="btnPrevious" disabled="true" style="pointer-events: none;">
>>
</button>
</c:if>
<label class="search-container__btnContext--textstart search-container__text_text">Previous</label>
</c:if>





There is no tag [if] in the tag library imported by the prefix [HTML].





<html:if condition="${empty requestScope.listDataSearch}">
<html:if condition="${empty requestScope.ListData}">
<button id="btnFirst" disabled="true" style="pointer-events: none;">
<<
</button>
<button id="btnPrevious" disabled="true" style="pointer-events: none;">
<
</button>
</html:if>

php
Copy code
<html:if condition="${not empty requestScope.ListData}">
  <logic:equal name="tag" value="1">
    <button id="btnFirst" disabled="true" style="pointer-events: none;">
      &lt;&lt;
    </button>
    <button id="btnPrevious" disabled="true" style="pointer-events: none;">
      &lt;
    </button>
  </logic:equal>
  
  <logic:notEqual name="tag" value="1">
    <button id="btnFirst">
      <html:link page="/CustomerSystem/T002">
        &lt;&lt;
        <html:param name="index" value="1" />
      </html:link>
    </button>
    <button id="btnPrevious">
      <html:link page="/CustomerSystem/T002">
        &lt;
        <html:param name="index" value="${tag - 1}" />
      </html:link>
    </button>
  </logic:notEqual>
</html:if>
</html:if>

<html:if condition="${not empty requestScope.listDataSearch}">
<lable class="search-container__btnContext--textstart search-container__text_text">Previous</lable>
</html:if>

<html:if condition="${empty requestScope.listDataSearch}">
<lable class="search-container__btnContext--textstart search-container__text_text">Previous</lable>
<html:if condition="${empty requestScope.ListData}">
<button id="btnNext" disabled="true" style="pointer-events: none;">
>
</button>
<button id="btnPrevious" disabled="true" style="pointer-events: none;">
>>
</button>
</html:if>

php
Copy code
<html:if condition="${not empty requestScope.ListData}">
  <logic:greaterEqual name="tag" value="${endP}">
    <button id="btnNext" disabled="true" style="pointer-events: none;">
      &gt;
    </button>
    <button id="btnPrevious" disabled="true" style="pointer-events: none;">
      &gt;&gt;
    </button>
  </logic:greaterEqual>
  
  <logic:less name="tag" value="${endP}">
    <button id="btnNext">
      <html:link page="/CustomerSystem/T002">
        &gt;
        <html:param name="index" value="${tag + 1}" />
      </html:link>
    </button>
    <button id="btnPrevious">
      <html:link page="/CustomerSystem/T002">
        &gt;&gt;
        <html:param name="index" value="${endP}" />
      </html:link>
    </button>
  </logic:less>
</html:if>
















<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<c:choose>
<c:when test="${empty requestScope.listDataSearch}">
<c:choose>
<c:when test="${empty requestScope.ListData}">
<button id="btnFirst" disabled="disabled" style="pointer-events: none;"><a href="#"><<</a></button>
<button id="btnPrevious" disabled="disabled" style="pointer-events: none;"><a href="#"><</a></button>
</c:when>
<c:otherwise>
<c:choose>
<c:when test="${tag == 1}">
<button id="btnFirst" disabled="disabled" style="pointer-events: none;"><a href="#"><<</a></button>
<button id="btnPrevious" disabled="disabled" style="pointer-events: none;"><a href="#"><</a></button>
</c:when>
<c:when test="${tag > 1}">
<button id="btnFirst"><a href="<%=request.getContextPath()%>/T002.do?index=1"><<</a></button>
<button id="btnPrevious"><a href="<%=request.getContextPath()%>/T002.do?index=${tag-1}"><</a></button>
</c:when>
</c:choose>
</c:otherwise>
</c:choose>
<label class="search-container__btnContext--textstart search-container__text_text">Previous</label>
</c:when>
<c:otherwise>
<c:choose>
<c:when test="${empty requestScope.ListData}">
<button id="btnNext" disabled="disabled" style="pointer-events: none;"><a href="#">></a></button>
<button id="btnPrevious" disabled="disabled" style="pointer-events: none;"><a href="#">>></a></button>
</c:when>
<c:otherwise>
<c:set var="endP" value="${requestScope.endP}" />
<c:choose>
<c:when test="${tag >= endP}">
<button id="btnNext" disabled="disabled" style="pointer-events: none;"><a href="#">></a></button>
<button id="btnPrevious" disabled="disabled" style="pointer-events: none;"><a href="#">>></a></button>
</c:when>
<c:when test="${tag < endP}">
<button id="btnNext"><a href="<%=request.getContextPath()%>/T002.do?index=${tag+1}">></a></button>
<button id="btnPrevious"><a href="<%=request.getContextPath()%>/T002.do?index=${endP}">>></a></button>
</c:when>
</c:choose>
</c:otherwise>
</c:choose>
<label class="search-container__btnContext--textend search-container__text_text">Next</label>
</c:otherwise>
</c:choose>



















<%if (request.getAttribute("listDataSearch") == null) {%>
			<%
				if (request.getAttribute("ListData") == null) {
			%>
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
			<%
				}
			%>
			<%
				if (request.getAttribute("ListData") != null) {
			%>
				<c:if test="${tag == 1}">				
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
				</c:if>
				<c:if test="${tag > 1 }">	
					<button id = "btnFirst"><a href="/CustomerSystem/T002?index=<%=1 %>"><<</a></button>			
					<button id = "btnPrevious"><a href="/CustomerSystem/T002?index=${tag-1}"><</a></button>
				</c:if>
			<%
				}
			%>
			
			
			<lable class = "search-container__btnContext--textstart search-container__text_text">Previous</lable>
		</div>
		
		<div class = "search-container__btnContext--end">
			<lable class = "search-container__btnContext--textend search-container__text_text">Next</lable>
			<%
				if (request.getAttribute("ListData") == null) {
			%>
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			<%
				}
			%>
			<%
				if (request.getAttribute("ListData") != null) {
				int endP = (Integer) request.getAttribute("endP"); 
			%>
			<c:if test="${tag >= endP}">			
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			</c:if>
			<c:if test="${tag < endP}">			
				<button id = "btnNext" ><a href="/CustomerSystem/T002?index=${tag+1}">></a></button>
				<button id="btnPrevious"><a href="/CustomerSystem/T002?index=<%= endP %>">>></a></button>
			</c:if>		
			<%
				}
			%>
		<%} %>






<%@ taglib uri="http://jakarta.apache.org/struts/tags-html" prefix="html" %>
<%@ taglib uri="http://jakarta.apache.org/struts/tags-bean" prefix="bean" %>
<%@ taglib uri="http://jakarta.apache.org/struts/tags-logic" prefix="logic" %>

<logic:empty name="ListData">
    <tr>
        <td colspan="6" class="searchtable-noresult">No data found</td>
    </tr>
</logic:empty>
<logic:notEmpty name="ListData">
    <logic:iterate name="ListData" id="dept">
        <tr>
            <td class="searchtable-check"><html:checkbox property="checkboxAll" value="<bean:write name='dept' property='CUSTOMER_ID' />" /></td>
            <td><a href="/CustomerSystem/T003?id=<bean:write name='dept' property='CUSTOMER_ID' />" class="searchtable-id"><bean:write name='dept' property='CUSTOMER_ID' /></a></td>
            <td class="searchtable-name"><bean:write name='dept' property='CUSTOMER_NAME' /></td>
            <td class="searchtable-sex"><bean:write name='dept' property='SEX' /></td>
            <td class="searchtable-birthday"><bean:write name='dept' property='BIRTHDAY' /></td>
            <td class="searchtable-address"><bean:write name='dept' property='ADDRESS' /></td>
        </tr>
    </logic:iterate>
</logic:notEmpty>


<%@ taglib prefix="s" uri="/struts-tags" %>


<%@ taglib prefix="s" uri="/struts-tags" %>

<s:if test="%{empty ListData}">
    <tr>
        <td colspan="6" class="searchtable-noresult">No data found</td>
    </tr>
</s:if>
<s:else>
    <s:iterator value="ListData" var="dept">
        <tr>
            <td class="searchtable-check"><input type="checkbox" name="checkboxAll" value="%{dept.CUSTOMER_ID}"></td>
            <td><a href="/CustomerSystem/T003?id=%{dept.CUSTOMER_ID}" class="searchtable-id">%{dept.CUSTOMER_ID}</a></td>
            <td class="searchtable-name">%{dept.CUSTOMER_NAME}</td>
            <td class="searchtable-sex">%{dept.SEX}</td>
            <td class="searchtable-birthday">%{dept.BIRTHDAY}</td>
            <td class="searchtable-address">%{dept.ADDRESS}</td>
        </tr>
    </s:iterator>
</s:else>



<c:choose>
        <c:when test="${empty ListData}">
            <tr>
                <td colspan="6" class="searchtable-noresult">No data found</td>
            </tr>
        </c:when>
        <c:otherwise>
            <c:forEach items="${ListData}" var="dept">
                <tr>
                    <td class="searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                    <td><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class="searchtable-id">${dept.CUSTOMER_ID}</a></td>
                    <td class="searchtable-name">${dept.CUSTOMER_NAME}</td>
                    <td class="searchtable-sex">${dept.SEX}</td>
                    <td class="searchtable-birthday">${dept.BIRTHDAY}</td>
                    <td class="searchtable-address">${dept.ADDRESS}</td>
                </tr>
            </c:forEach>
        </c:otherwise>
    </c:choose>



The type List is not generic; it cannot be parameterized with arguments <ListData>


<c:forEach items="${ListData" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>



<%
    List<ListData> dataList = (List<ListData>) request.getAttribute("ListData");
    for (ListData dept : dataList) {
%>
    <tr>
        <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="<%=dept.getCUSTOMER_ID()%>"></td>
        <td ><a href="/CustomerSystem/T003?id=<%=dept.getCUSTOMER_ID()%>" class = "searchtable-id"> <%=dept.getCUSTOMER_ID()%> </a></td>
        <td class = "searchtable-name"><%=dept.getCUSTOMER_NAME()%></td>
        <td class = "searchtable-sex"><%=dept.getSEX()%></td>
        <td class = "searchtable-birthday"><%=dept.getBIRTHDAY()%></td>
        <td class = "searchtable-address"><%=dept.getADDRESS()%></td>
    </tr>
<%
    }
%>










<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE struts-config PUBLIC
          "-//Apache Software Foundation//DTD Struts Configuration 1.2//EN"
          "http://jakarta.apache.org/struts/dtds/struts-config_1_2.dtd">

<!--
     This is a blank Struts configuration file with an example
     welcome action/page and other commented sample elements.

     Tiles and the Struts Validator are configured using the factory defaults
     and are ready-to-use.

     NOTE: If you have a generator tool to create the corresponding Java classes
     for you, you could include the details in the "form-bean" declarations.
     Otherwise, you would only define the "form-bean" element itself, with the
     corresponding "name" and "type" attributes, as shown here.
-->


<struts-config>

<!-- ============================================ Data Source Configuration -->
<!--
<data-sources>
<data-source type="org.apache.commons.dbcp.BasicDataSource">
    <set-property
      property="driverClassName"
      value="org.postgresql.Driver" />
    <set-property
      property="url"
      value="jdbc:postgresql://localhost/mydatabase" />
    <set-property
      property="username"
      value="me" />
    <set-property
      property="password"
      value="test" />
    <set-property
      property="maxActive"
      value="10" />
    <set-property
      property="maxWait"
      value="5000" />
    <set-property
      property="defaultAutoCommit"
      value="false" />
    <set-property
      property="defaultReadOnly"
      value="false" />
    <set-property
      property="validationQuery"
      value="SELECT COUNT(*) FROM market" />
</data-source>
</data-sources>
-->

<!-- ================================================ Form Bean Definitions -->

    <form-beans>
    <!-- sample form bean descriptor for an ActionForm
        <form-bean
            name="inputForm"
            type="app.InputForm"/>
    end sample -->
    

    <!-- sample form bean descriptor for a DynaActionForm
        <form-bean
            name="logonForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property
                name="username"
                type="java.lang.String"/>
            <form-property
                name="password"
                type="java.lang.String"/>
       </form-bean>
    end sample -->
    </form-beans>


<!-- ========================================= Global Exception Definitions -->

    <global-exceptions>
        <!-- sample exception handler
        <exception
            key="expired.password"
            type="app.ExpiredPasswordException"
            path="/changePassword.jsp"/>
        end sample -->
    </global-exceptions>


<!-- =========================================== Global Forward Definitions -->
	
    
<!-- =========================================== Action Mapping Definitions -->
	<form-beans>
		<form-bean
            name="loginBean"
            type="fjs.cs.bean.LoginBean"/>
        <form-bean
        	name="searchBean"
        	type="fjs.cs.bean.SearchBean"/>
	</form-beans>
	<global-forwards>
        <forward
        	name="T001"
        	path="/pages/T001.jsp"/>
        
    </global-forwards>
    <action-mappings>
            <!-- Default "Welcome" action -->
            <!-- Forwards to Welcome.jsp -->
        <action
        	input="/pages/T001.jsp"
           	path="/T001"
            type="fjs.cs.action.T001"
            validate="true"
            name="loginBean"
			scope="request">
            <forward name="success" path="/T002.do">
				
			</forward>
            <forward name="fail" path="/pages/T001.jsp"/>
        </action>
        
        <action
        	path="/T002"
        	type="fjs.cs.action.T002"
        	scope="request"
        	name="searchBean">
        	<forward name="T002" path="/pages/T002.jsp"/>
        	<forward name="T003" path="/pages/T003.jsp"/>
        </action>
     
      
    <!-- sample input and input submit actions

        <action
            path="/Input"
            type="org.apache.struts.actions.ForwardAction"
            parameter="/pages/Input.jsp"/>

        <action
            path="/InputSubmit"
            type="app.InputAction"
            name="inputForm"
            scope="request"
            validate="true"
            input="/pages/Input.jsp"/>

            <action
                path="/edit*"
                type="app.Edit{1}Action"
                name="inputForm"
                scope="request"
                validate="true"
                input="/pages/Edit{1}.jsp"/>

    end samples -->
    </action-mappings>
<!-- ============================================= Controller Configuration -->

    <controller
       processorClass="org.apache.struts.tiles.TilesRequestProcessor"/>


<!-- ======================================== Message Resources Definitions -->

    <message-resources parameter="MessageResources" null="false"/>


<!-- =============================================== Plug Ins Configuration -->

  <!-- ======================================================= Tiles plugin -->
  <!--
     This plugin initialize Tiles definition factory. This later can takes some
	 parameters explained here after. The plugin first read parameters from
	 web.xml, thenoverload them with parameters defined here. All parameters
	 are optional.
     The plugin should be declared in each struts-config file.
       - definitions-config: (optional)
            Specify configuration file names. There can be several comma
		    separated file names (default: ?? )
       - moduleAware: (optional - struts1.1)
            Specify if the Tiles definition factory is module aware. If true
            (default), there will be one factory for each Struts module.
			If false, there will be one common factory for all module. In this
            later case, it is still needed to declare one plugin per module.
            The factory will be initialized with parameters found in the first
            initialized plugin (generally the one associated with the default
            module).
			  true : One factory per module. (default)
			  false : one single shared factory for all modules
	   - definitions-parser-validate: (optional)
	        Specify if xml parser should validate the Tiles configuration file.
			  true : validate. DTD should be specified in file header (default)
			  false : no validation

	  Paths found in Tiles definitions are relative to the main context.
  -->

    <plug-in className="org.apache.struts.tiles.TilesPlugin" >

      <!-- Path to XML definition file -->
      <set-property property="definitions-config"
                       value="/WEB-INF/tiles-defs.xml" />
      <!-- Set Module-awareness to true -->
      <set-property property="moduleAware" value="true" />
    </plug-in>


  <!-- =================================================== Validator plugin -->

  <plug-in className="org.apache.struts.validator.ValidatorPlugIn">
    <set-property
        property="pathnames"
        value="/WEB-INF/validator-rules.xml,/WEB-INF/validation.xml"/>
  </plug-in>
</struts-config>





<form-beans>
		<form-bean
            name="loginBean"
            type="fjs.cs.bean.LoginBean"/>
        <form-bean
        	name="searchBean"
        	type="fjs.cs.bean.SearchBean"/>
	</form-beans>
	<global-forwards>
        <forward
        	name="T001"
        	path="/pages/T001.jsp"/>
        
    </global-forwards>
    <action-mappings>
            <!-- Default "Welcome" action -->
            <!-- Forwards to Welcome.jsp -->
        <action
        	input="/pages/T001.jsp"
           	path="/T001"
            type="fjs.cs.action.T001"
            validate="true"
            name="loginBean"
			scope="request">
            <forward name="success" path="/T002.do">
				
			</forward>
            <forward name="fail" path="/pages/T001.jsp"/>
        </action>
        
        <action
        	path="/T002"
        	type="fjs.cs.action.T002"
        	scope="request"
        	name="searchBean">
        	<forward name="T002" path="/pages/T002.jsp"/>
        	<forward name="T003" path="/pages/T003.jsp"/>
        </action>




public class T002 extends Action {
	@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		T002Dao dao = new T002Dao();
		try {
			//SearchBean searchBean = (SearchBean)form;
			List<SearchBean> listPage = dao.getData();
			request.setAttribute("ListA", listPage);
			return (mapping.findForward("T002"));
		}catch(Exception e) {
			e.printStackTrace();
			return (mapping.findForward("T002"));
		}
		
	}
}



<table class = "search-container__table">
        <tr class = "search-container__table--tieude">
        	<th class = "searchtable-trcheck"><input type="checkbox" id = "checkAll" name="checkboxAll" value="" onclick = "checkBox(this)"></th>
            <th class = "searchtable-trid">Customer ID</th>
            <th class = "searchtable-trname">Customer Name</th>
            <th class = "searchtable-trsex">Sex</th>
            <th class = "searchtable-trbirthday">Birthday</th>
            <th class = "searchtable-traddress">Address</th>
        </tr>
<c:choose>
    <c:when test="${not empty listDataSearch}">
        <c:forEach items="${listDataSearch}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:when>
    <c:when test="${not empty ListA}">
        <c:forEach items="${ListA}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:when>
    <c:otherwise>
        <c:forEach items="${ListA}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:otherwise>
</c:choose>
    </table>




































Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Jakarta Struts:
Automatically 
Validating Input
Struts 1.2 Version
Core Servlets & JSP book: www.coreservlets.com
More Servlets & JSP book: www.moreservlets.com
Servlet/JSP/Struts/JSF Training: courses.coreservlets.com
Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
For live Struts training, please see 
JSP/servlet/Struts/JSF training courses at 
http://courses.coreservlets.com/.
Taught by the author of Core Servlets and JSP, More 
Servlets and JSP, and this tutorial. Available at public 
venues, or customized versions can be held on-site at 
your organization.5 Apache Struts: Validating User Input Automatically www.coreservlets.com
Overview
• Distinguishing manual validation from 
automatic validation
• Distinguishing client-side validation from 
server-side validation
• Using automatic validation
– Declare application-wide properties file
– Add messages to properties file
– Turn on the automatic validator
– Put validation rules in validation.xml
– Put <html:errors/> in input page
– Enable JavaScript validation
6 Apache Struts: Validating User Input Automatically www.coreservlets.com
Options for Form Field 
Validation
• Do validation in the Action
– Most powerful; has access to business logic, DB, etc.
– May require repetition in multiple Actions
– Must manually map conditions back to input page
– Must write validation rules yourself
• Do validation in the form bean
– In individual setter methods
• Not really validation, but can be used to modify values
– Using the validate method
• Not quite as powerful
• Does not require repetition in multiple Actions
• Will automatically redisplay input page
• Still requires you to write validation rules yourself
• Use automatic validator
– Handles many common cases; includes JavaScript
– You can combine approaches in the same application7 Apache Struts: Validating User Input Automatically www.coreservlets.com
Manual Validation
(See Previous Section for Details and Examples)
• Option 1: Put validation code in the Action
– Return custom conditions from Action
– Map certain conditions back to the input form
– Embed the messages in the form bean
• Option 2: Put validation code in bean
– Insert <html:errors/> in input form
– Use validate method in ActionForm class
public ActionErrors validate(ActionMapping mapping, 
HttpServletRequest request) { 
ActionErrors errors = new ActionErrors(); 
if (somethingWrongWith(someField)){ 
errors.add("someField", 
new ActionMessage("errors.someField")); 
} 
return errors; 
} 
8 Apache Struts: Validating User Input Automatically www.coreservlets.com
Manual vs. Automatic 
Validation
• Manual validation
– Most flexible
– Has full access to bean and to business logic and database
– Repeats same logic many times
– Runs only on server if you use existing framework
• Client-side validation requires writing lots of JavaScript
– Tedious
– Embedded in Java code
• Which violates Struts strategy of having as much as possible in editable XML files
• Automatic validation
– Consolidates validation code
– Lets you use standard validation rules
– Runs on server; can optionally also run on client
– Described by XML files9 Apache Struts: Validating User Input Automatically www.coreservlets.com
Client-Side vs. Server-Side 
Validation
• Client-side validation
– JavaScript code verifies format of fields
– Dialog box warns users of illegal values
– Submission blocked if invalid
– Pro:
• Fast
– Cons:
• Can be deliberately or accidentally bypassed
• Cannot do validation that requires much application logic
• Server-side validation
– Java code on server verifies format of fields
– Form is redisplayed (with warnings) if illegal values
– You must do this regardless of whether or not you do 
client-side validation!
10 Apache Struts: Validating User Input Automatically www.coreservlets.com
Struts Flow of Control
JSP
Form
Determine
Action
Action
Choose
JSP
Page
JSP
request .../SomeForm.jsp
submit form
request .../blah.do
invoke
execute
method
return condition
forward to return final result
struts-config.xml Populate bean. Call validate. 
Inherited version checks 
entries in validator.xml. If nonempty result, interrupt process 
and forward to input page. 
Otherwise pass to execute 
method.
Use bean:write.
Use html:form 
to build form.
forward 
to11 Apache Struts: Validating User Input Automatically www.coreservlets.com
Steps in Using Automatic 
Validation (General)
1. Configure struts-config.xml
• List the address of the input form
• List the properties file (resource bundle)
• Turn on the automatic validator
2. Edit the properties file
• Put errors.footer, errors.header for html:errors as before
• Edit standard validator messages (errors.invalid, etc)
• Create names to replace {0}, {1} in standard messages
3. Put validation rules in validation.xml
• For each field, specify one or more validation rules 
• Find the name of the corresponding error message
• Look in properties file to see how many args needed
• Supply arg0 ... argN as necessary
4. Have form bean extend ValidatorForm
• Instead of ActionForm
5. Use <html:errors> as before
12 Apache Struts: Validating User Input Automatically www.coreservlets.com
Steps in Using Automatic 
Validation (Details on Third Step)
1. For each field, specify one or more validation 
rules from the list of builtin choices
• required, mask, email, intRange, maxLength, etc.
2. Find the name of the error message that will 
be generated if the rule fails
• Usually errors.ruleName, but given in validatorrules.xml.
3. Look in properties file to see what {} 
arguments the error message needs
• errors.invalid={0} is invalid.
• errors.maxlength={0} cannot be greater than {1}
characters.
4. Supply arg0-argN for each placeholder13 Apache Struts: Validating User Input Automatically www.coreservlets.com
Using Automatic Validation
1. Configure struts-config.xml
1. List the address of the input form
<action path="..." type="..." name="..." scope="request" 
input="...inputFormAddress.jsp">
2. List properties file (resource bundle). 
• <message-resources parameter="MessageResources"/>
– Refers to WEB-INF/classes/MessageResources.properties
3. Turn on the automatic validator
• Don't enter by hand: uncomment the entry from struts-blank
<plug-in
className="org.apache.struts.validator.ValidatorPlugIn">
<set-property property="pathnames"
value="/WEB-INF/validator-rules.xml,
/WEB-INF/validation.xml"/>
</plug-in>
14 Apache Struts: Validating User Input Automatically www.coreservlets.com
Using Automatic Validation
2. Edit properties file
– Edit "error" entries for formatting error messages
• Same as in manual validation
errors.header=<UL>
errors.prefix=<LI><B><FONT COLOR="RED">
errors.suffix=</FONT></B></LI>
errors.footer=</UL>
– Edit standard "validator" error messages if desired
• struts-blank has several typos you will want to fix
– "an" long, "an" byte, "can not", etc.
errors.invalid={0} is invalid.
errors.maxlength={0} cannot be greater than {1} characters.
– Add prompts/messages that will be substituted into error 
messages for {0}, {1}. etc
inputForm.firstName=First name
inputForm.lastName=Last name
inputForm.zipCode=5-digit ZIP Code15 Apache Struts: Validating User Input Automatically www.coreservlets.com
Using Automatic Validation 
(Continued)
3. Put validation rules in validation.xml
– Use <form name="..."> to identify the bean
• <form name="beanNameFromStrutsConfig">
– Use <field property="..." depends="..."> to identify the 
bean property to check and the rule to use to check it
• <field property="propName" depends="ruleName">
• See http://struts.apache.org/userGuide/dev_validator.html
for all available rules and specifics on each
– Use <argN...> to give values for error messages.
• <field property="propName" depends="ruleName">
• <arg0 key="key.Name"/>
• </field>
– Look in properties file to see what args needed
– The name of the error message is usually 
errors.ruleName, but see validator-rules.xml to be sure
16 Apache Struts: Validating User Input Automatically www.coreservlets.com
validation.xml: Structure
• <form-validation> and <formset>
– Main enclosing elements
• <form name="beanName"> – Matches form-bean name from struts-config.xml
• <field property="firstName"
– Matches HTML form parameter (ie, bean property) name
• depends="required"> – Matches name of predefined validator rule
• required: must be non-empty
• mask: must match a given regular expression
• email: must be an email address
• creditCard: must be a legal credit card number – (Use 4111111111111111 for testing)
• <arg0 key="property.subname"/> – Replaces {0} in error message from properties file17 Apache Struts: Validating User Input Automatically www.coreservlets.com
Using Automatic Validation 
(Continued)
3. Put validation rules in validation.xml: example
– Bean is named orderFormBean in the form-beans 
section of struts-config.xml
– Bean has property called firstName
– One of the standard rules is "required"
– In the properties file, errors.required is ... {0} ...
– There is a custom message called inputForm.firstName
<formset>
<form name="orderFormBean">
<field property="firstName"
depends="required">
<arg0 key="inputForm.firstName"/> 
</field>
</form>
…
</formset>
18 Apache Struts: Validating User Input Automatically www.coreservlets.com
Using Automatic Validation 
(Continued)
4. Have your form bean extend ValidatorForm, 
not ActionForm directly
import org.apache.struts.validator.*;
public class OrderFormBean
extends ValidatorForm { … }
5. Put <html:errors/> in input page
– Edit properties file to customize form of error message
6. (Optional) Enable JavaScript validation
– Add <html:javascript formName="beanName"/> 
anywhere
– Add onsubmit="return validateBeanName(this);" to 
html:form19 Apache Struts: Validating User Input Automatically www.coreservlets.com
Using Automatic Validation: 
Example (Goal)
20 Apache Struts: Validating User Input Automatically www.coreservlets.com
Using Automatic Validation: 
Example (Goal)
• JavaScript 
validation 
enabled21 Apache Struts: Validating User Input Automatically www.coreservlets.com
Using Automatic Validation: 
Example (Goal)
• JavaScript 
validation 
disabled
22 Apache Struts: Validating User Input Automatically www.coreservlets.com
Using Automatic Validation: 
Example (Goal)23 Apache Struts: Validating User Input Automatically www.coreservlets.com
Implementing the Example 
(Background)
package coreservlets;
import javax.servlet.http.*;
import org.apache.struts.action.*;
public class Order extends Action {
public ActionForward execute(ActionMapping mapping,
ActionForm form,
HttpServletRequest request,
HttpServletResponse response)
throws Exception {
return(mapping.findForward("success"));
}
}
24 Apache Struts: Validating User Input Automatically www.coreservlets.com
Step 1: Configure strutsconfig.xml
<form-beans>
<form-bean name="orderFormBean"
type="coreservlets.OrderFormBean"/>
</form-beans>
<action-mappings>
<action path="/actions/order" 
type="coreservlets.Order"
name="orderFormBean"
scope="request" 
input="/forms/order-form.jsp">
<forward name="success" 
path="/WEB-INF/results/order-confirmation.jsp"/>
</action>
</action-mappings>
<message-resources parameter="MessageResources"/>
<plug-in className="org.apache.struts.validator.ValidatorPlugIn">
<set-property
property="pathnames"
value="/WEB-INF/validator-rules.xml, /WEB-INF/validation.xml"/>
</plug-in>25 Apache Struts: Validating User Input Automatically www.coreservlets.com
Step 2: Edit Properties File
(MessageResources.properties)
# -- Custom messages for this application --
inputForm.firstName=First name
inputForm.lastName=Last name
inputForm.address=Postal address
inputForm.zipCode=5-digit ZIP Code
inputForm.creditCardNumber=Credit card number
inputForm.email=Email address
# -- Standard errors --
errors.header=<UL>
errors.prefix=<LI><B><FONT COLOR="RED">
errors.suffix=</FONT></B></LI>
errors.footer=</UL>
# -- validator --
errors.invalid={0} is invalid.
errors.maxlength={0} cannot be greater than {1} characters.
errors.minlength={0} cannot be less than {1} characters.
errors.range={0} is not in the range {1} through {2}.
errors.required={0} is required.
...
26 Apache Struts: Validating User Input Automatically www.coreservlets.com
Step 3: Put Validation Rules in 
validation.xml
<formset>
<form name="orderFormBean">
<field property="firstName"
depends="required">
<arg0 key="inputForm.firstName"/> 
</field>
…
<field property="zipCode"
depends="required,mask">
<arg0 key="inputForm.zipCode"/> 
<var>
<var-name>mask</var-name>
<var-value>^\d{5}$</var-value>
</var>
</field>
<field property="creditCardNumber"
depends="required,creditCard">
<arg0 key="inputForm.creditCardNumber"/> 
</field>
… </form></formset>27 Apache Struts: Validating User Input Automatically www.coreservlets.com
Step 4: Have Form Bean Extend 
ValidatorForm
package coreservlets;
import org.apache.struts.validator.*;
public class OrderFormBean extends ValidatorForm {
private String firstName = "";
…
public String getFirstName() {
return(firstName);
}
public void setFirstName(String firstName) {
this.firstName = firstName;
}
…
}
28 Apache Struts: Validating User Input Automatically www.coreservlets.com
Steps 5 & 6: Output <html:errors/> 
and Enable JavaScript validation
…
<%@ taglib uri="http://struts.apache.org/tags-html" 
prefix="html" %>
<html:errors/>
<html:form action="/actions/order"
onsubmit="return validateOrderFormBean(this);">
First name: <html:text property="firstName"/><BR>
Last name: <html:text property="lastName"/><BR>
Mailing address: <html:text property="address"/><BR>
ZIP Code: <html:text property="zipCode"/><BR>
Credit Card Number: 
<html:text property="creditCardNumber"/><BR>
Email address for confirmation: 
<html:text property="email"/><BR>
<html:submit value="Order Now!"/>
</html:form>
<html:javascript formName="orderFormBean"/>
…29 Apache Struts: Validating User Input Automatically www.coreservlets.com
Other Validator Capabilities
• More predefined validators
– required
– mask
• Note that the associated message property name is errors.invalid, 
not errors.mask. See the "msg" entry in validator-rules.xml
– intRange, floatRange, doubleRange (note uppercase "R")
• Note that associated error message is "range"
– maxlength, minlength (note lowercase "l")
– integer, float, double, long, short, byte
– date
– creditCard
– email
– url
• Specific guidance on using these
– http://struts.apache.org/userGuide/dev_validator.html
30 Apache Struts: Validating User Input Automatically www.coreservlets.com
Combining Manual and 
Automatic Validation
• Automatic validators do generic checks
– Email address, URL, credit card, missing, etc.
• The validate method does application-specific 
checks
– That selected health plan was one of available options, etc
• The validate method must call super.validate
for this to work
public ActionErrors validate
(ActionMapping mapping,
HttpServletRequest request) {
ActionErrors errors = 
super.validate(mapping, request);
...
return(errors);
}31 Apache Struts: Validating User Input Automatically www.coreservlets.com
Rolling Your own Pluggable 
Validators
• Builtin rules not sufficient
– For example, one field may depend on another
• You can assign both server-side and client-side 
code
• Declare validators in validator-rules.xml
• Very powerful
– Can be easily reused throughout your application
• Not easy!
– Complicated 
– Poorly documented
32 Apache Struts: Validating User Input Automatically www.coreservlets.com
Summary
• Modify struts-config.xml
– List the input form
– Load the properties file (resource bundle)
– Enable validator
• Update the properties file
– Edit standard error messages
– List formatting rules for error messages
– Add custom messages for substitution into error messages
• Put validation rules in validation.xml
• Extend ValidatorForm instead of ActionForm
• Put <html:errors/> in input page
• Enable JavaScript validation if desired
– <html:javascript formName="beanName"/>Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Questions?
Core Servlets & JSP book: www.coreservlets.com
More Servlets & JSP book: www.moreservlets.com
Servlet and JSP Training Courses: courses.coreservlets.co




Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Jakarta Struts:
Manually
Validating Input
Struts 1.2 Version
Core Servlets & JSP book: www.coreservlets.com
More Servlets & JSP book: www.moreservlets.com
Servlet/JSP/Struts/JSF Training: courses.coreservlets.com
Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
For live Struts training, please see 
JSP/servlet/Struts/JSF training courses at 
http://courses.coreservlets.com/.
Taught by the author of Core Servlets and JSP, More 
Servlets and JSP, and this tutorial. Available at public 
venues, or customized versions can be held on-site at 
your organization.5 Apache Struts: Validating User Input Manually www.coreservlets.com
Overview
• Distinguishing manual validation from 
automatic validation
• Performing validation in the Action
– Error messages in beans
• Performing validation in the ActionForm
– Fixed error messages
– Error messages with substitution
– Separate error messages
6 Apache Struts: Validating User Input Manually www.coreservlets.com
Options for Form Field 
Validation
• Do validation in the Action
– Most powerful; has access to business logic, DB, etc.
– May require repetition in multiple Actions
– Must manually map conditions back to input page
– Must write validation rules yourself
• Do validation in the form bean
– In individual setter methods
• Not really validation, but can be used to modify values
– Using the validate method
• Not quite as powerful
• Does not require repetition in multiple Actions
• Will automatically redisplay input page
• Still requires you to write validation rules yourself
• Use automatic validator
– Handles many common cases; includes JavaScript
– See next lectureSlides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Performing Validation in 
the Action's 
execute Method
8 Apache Struts: Validating User Input Manually www.coreservlets.com
Struts Flow of Control
JSP
Form
Determine
Action
Action
Choose
JSP
Page
JSP
request .../SomeForm.jsp
submit form
request .../blah.do
invoke
execute
method
return condition
forward to return final result
struts-config.xml
Populate bean and pass 
to execute method.
Use bean:write.
Use html:form 
to build form.
forward to9 Apache Struts: Validating User Input Manually www.coreservlets.com
Performing Validation in the Action
• Start normally
– Cast ActionForm to specific type
– Call getter methods to retrieve field values
• For each missing or incorrect value
– Add an error message to a bean
• Using the ActionForm bean is easiest
– Use mapping.findForward to return error code
• Use struts-config.xml to map the error code 
back to the input form
• Use bean:write to output error messages in 
input form
– Use filter="false" if error messages contain HTML tags
10 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: Choosing Colors and 
Font Sizes for Resume
• Input form
– Collects three font sizes (title, heading, body)
– Collects two colors (foreground, background)
– Uses bean:write to print out error messages
• Error messages are empty strings by default
• Remember the taglib entry for the "bean" library
• ActionForm
– Represents form data
– No error checking
– Contains extra field for storing error messages
• Action
– execute method checks if any params are missing. If so:
• Returns error code
• Puts warning message in form bean
• struts-config.xml
– Maps error code back to input form11 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: Input Form
<CENTER>
<%@ taglib uri="http://struts.apache.org/tags-html"
prefix="html" %>
<%@ taglib uri="http://struts.apache.org/tags-bean"
prefix="bean" %>
<html:form action="/actions/showSample">
<bean:write name="formatFormBean" 
property="warning" filter="false"/><BR>
Title size: <html:text property="titleSize"/><BR>
Heading size: <html:text property="headingSize"/><BR>
Body text size: <html:text property="bodySize"/><BR>
Background color: <html:text property="bgColor"/><BR>
Foreground color: <html:text property="fgColor"/><BR>
<html:submit value="Show Sample"/>
</html:form>
</CENTER>
12 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: ActionForm
package coreservlets;
import org.apache.struts.action.*;
public class FormatFormBean extends ActionForm {
private String titleSize = "";
private String headingSize = "";
private String bodySize = "";
private String bgColor = "";
private String fgColor = "";
private String warning = "";
public String getTitleSize() {
return(titleSize);
}
public void setTitleSize(String titleSize) {
this.titleSize = titleSize;
}
...13 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: ActionForm (Continued)
public String getStyleSheet() {
return(
"<STYLE TYPE=\"text/css\">\n" +
"<!--\n" +
"H1 { font-size: " + titleSize + "px; }\n" +
"H2 { font-size: " + headingSize + "px; }\n" +
"BODY { font-size: " + bodySize + "px;\n" +
" background-color: " + bgColor + ";\n" +
" color: " + fgColor + "; }\n" +
"-->\n" +
"</STYLE>");
}
14 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: ActionForm (Continued)
public String getWarning() {
return(warning);
}
public void addWarning(String warning) {
this.warning =
this.warning + "<B><FONT COLOR=RED>" +
warning + "!</FONT></B><BR>";
}
public boolean isMissing(String value) {
return((value == null)||(value.trim().equals("")));
}15 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: Action
public class ShowSampleAction extends Action {
public ActionForward execute(ActionMapping mapping,
ActionForm form,
HttpServletRequest request,
HttpServletResponse response)
throws Exception {
FormatFormBean formatBean = (FormatFormBean)form;
ActionForward forward = mapping.findForward("success");
if (formatBean.isMissing(formatBean.getTitleSize())) {
formatBean.addWarning("Missing Title Size");
forward = mapping.findForward("missing-data");
}
if (formatBean.isMissing(formatBean.getHeadingSize())) {
formatBean.addWarning("Missing Heading Size");
forward = mapping.findForward("missing-data");
}
…
return(forward);
}
}
16 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: struts-config.xml
<struts-config> 
<form-beans>
<form-bean name="formatFormBean"
type="coreservlets.FormatFormBean"/>
</form-beans>
<action-mappings>
<action path="/actions/showSample" 
type="coreservlets.ShowSampleAction"
name="formatFormBean"
scope="request">
<forward name="success" 
path="/WEB-INF/results/sample.jsp"/>
<forward name="missing-data" 
path="/forms/form1.jsp"/>
</action>
</action-mappings>
</struts-config>17 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Initial Form
18 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Incomplete Data19 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Rentering Data
20 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Complete Data21 Apache Struts: Validating User Input Manually www.coreservlets.com
Variation: Redirecting Instead of 
Forwarding
• In the usual scenario, the address listed by <forward ... 
path="..."/> is accessed by RequestDispatcher.forward
<action path="..." type="..." name="..."
scope="request">
<forward name="..." path="..."/>
– User sees URL of Action, not of JSP page
– Data can be request-scoped
• By specifying redirect="true", you can tell the system 
to use response.sendRedirect instead
<action path="..." type="..." name="..."
scope="session">
<forward name="..." path="..." redirect="true"/>
– User sees URL of JSP page
– Data must be session-scoped
– You must clear out error messages each time
22 Apache Struts: Validating User Input Manually www.coreservlets.com
Redirecting to Input Page
• Advantages
– User sees a familiar URL
• The one that was entered when the form was originally accessed
– Bookmarks work normally
• Can bookmark before or after the form is redisplayed. With forwarding, you cannot bookmark the input form once it is 
redisplayed (since the URL is the .do address of the Action).
– User can hit reload on input form
• Disadvantages
– Requires your data to be session-scoped
• Per-request data like error messages must be reset each time!
• Session data is expensive in clustered servers
– Requires you to add entries to struts-config.xml
– Does not directly correspond to other validation schemes
• Using the validate method of the ActionForm
• Using the automatic validation framework23 Apache Struts: Validating User Input Manually www.coreservlets.com
Redirecting to Input Page: Example
• Input form
– Unchanged except for action address
• Action
– Unchanged
• ActionForm
– Added code to reset error messages each time
public class FormatFormBean extends ActionForm {
...
public void resetWarning() {
warning = "";
}
public void reset(ActionMapping mapping,
HttpServletRequest request) {
resetWarning();
}
}
24 Apache Struts: Validating User Input Manually www.coreservlets.com
Redirecting to Input Page: Example 
(Continued)
• struts-config.xml
<action path="/actions/showSample2" 
type="coreservlets.ShowSampleAction"
name="formatFormBean"
scope="session">
<forward name="success" 
path="/WEB-INF/results/sample.jsp"/>
<forward name="missing-data" 
path="/forms/form2.jsp"
redirect="true"/>
</action>25 Apache Struts: Validating User Input Manually www.coreservlets.com
Redirecting to Input Page: Example 
(Results)
Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Performing Validation in 
the ActionForm's
validate Method27 Apache Struts: Validating User Input Manually www.coreservlets.com
Struts Flow of Control
JSP
Form
Determine
Action
Action
Choose
JSP
Page
JSP
request .../SomeForm.jsp
submit form
request .../blah.do
invoke
execute
method
return condition
forward to return final result
struts-config.xml Populate bean. Call 
validate. If non-empty 
result, interrupt process 
and forward to input 
page. Otherwise pass to 
execute method.
Use bean:write.
Use html:form 
to build form.
forward 
to
28 Apache Struts: Validating User Input Manually www.coreservlets.com
Performing Validation in the 
ActionForm
• Create an ActionForm method called validate
– If no errors, return null or an empty ActionErrors object
– For each error, add ActionMessage entries to ActionErrors
• ActionErrors.add takes a name and an ActionMessage
• ActionMessage constructor takes key
– Key corresponds to entry in a property file
– Or, supply extra value of false to supply error message directly
– If you return a non-empty ActionErrors object, the system will 
automatically forward user to the input form
• Page listed by input attribute of action in struts-config.xml
• Create a property file with error messages
– Property names should match keys used in ActionMessage
– Also define how multiple error messages are output
– Use struts-config to declare properties file
• Use <html:errors/> in input form
– Prints list of all error messages. Empty if no errors.
• No validation logic needed in Action29 Apache Struts: Validating User Input Manually www.coreservlets.com
The validate Method
public ActionErrors validate(ActionMapping mapping,
HttpServletRequest request) {
ActionErrors errors = new ActionErrors();
if (isSomeProblem(getSomeProperty())) {
errors.add("someName",
new ActionMessage("some.key"));
errors.add("someOtherName",
new ActionMessage("actual message", false));
}
...
return(errors);
}
30 Apache Struts: Validating User Input Manually www.coreservlets.com
Specifying Input Page in 
struts-config.xml
<action path="/somePath/someActionName" 
type="somePackage.SomeClass"
name="someFormBean"
scope="request" 
input="/somePath/original-form.jsp">31 Apache Struts: Validating User Input Manually www.coreservlets.com
Preventing Validation
• The same bean might be used with multiple actions
• What if some actions want validation to occur, and 
others do not?
• Solution: specify validate="false" (in struts-config.xml) 
for actions that do not want validation
– true is the default
<action path="..." 
type="somePackage.SomeClass"
name="someFormBean"
scope="request" 
input="/somePath/original-form.jsp"
validate="false">
<forward name="..." path"..."/>
</action>
32 Apache Struts: Validating User Input Manually www.coreservlets.com
Properties File
# -- Standard errors --
errors.header=<UL>
errors.prefix=<LI><B><FONT COLOR="RED">
errors.suffix=</FONT></B></LI>
errors.footer=</UL>
# -- Custom validation messages --
some.key=Some Message
some.other.key=Some Other Message33 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: Choosing Colors and 
Font Sizes for Resume (Take 2)
• Input form
– Collects three font sizes (title, heading, body) – Collects two colors (foreground, background) – Uses <html:errors/> to print out error messages
• Error message list is empty by default
• ActionForm
– Represents form data – The validate method checks if any params are missing. If so:
• Creates ActionMessage keyed to name from properties file
• Adds ActionMessage to the ActionErrors that is returned
• Action
– No validation code
• struts-config.xml
– Lists path to input form
34 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: ActionForm
package coreservlets;
import javax.servlet.http.*;
import org.apache.struts.action.*;
public class FormatFormBean extends ActionForm {
private String titleSize = "";
private String headingSize = "";
private String bodySize = "";
private String bgColor = "";
private String fgColor = "";
public String getTitleSize() {
return(titleSize);
}
public void setTitleSize(String titleSize) {
this.titleSize = titleSize;
}
...35 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: ActionForm 
(Continued: validate method)
public ActionErrors validate(ActionMapping mapping,
HttpServletRequest request) {
ActionErrors errors = new ActionErrors();
if (isMissing(getTitleSize())) {
errors.add("title",
new ActionMessage("titleSize.required"));
}
if (isMissing(getHeadingSize())) {
errors.add("heading",
new ActionMessage("headingSize.required"));
}
...
if (isMissing(getFgColor())) {
errors.add("fg",
new ActionMessage("fgColor.required"));
} else if (getFgColor().equals(getBgColor())) {
errors.add("fg",
new ActionMessage("colors.notMatch"));
}
return(errors);
}
36 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: Properties File
(WEB-INF/classes/MessageResources.properties)
# -- Standard errors --
errors.header=<UL>
errors.prefix=<LI><B><FONT COLOR="RED">
errors.suffix=</FONT></B></LI>
errors.footer=</UL>
# -- Custom validation messages --
titleSize.required=Title size required.
headingSize.required=Heading size required.
bodySize.required=Body text size required.
bgColor.required=Background color required.
fgColor.required=Foreground color required.
colors.notMatch=Foreground and background 
colors must be different.37 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: struts-config.xml
<struts-config>
<form-beans>
<form-bean name="formatFormBean"
type="coreservlets.FormatFormBean"/>
</form-beans>
<action-mappings>
<action path="/actions/showSample" 
type="coreservlets.ShowSampleAction"
name="formatFormBean"
scope="request" 
input="/forms/index.jsp">
<forward name="success" 
path="/WEB-INF/results/sample.jsp"/>
</action>
</action-mappings>
<message-resources parameter="MessageResources"
null="false"/>
</struts-config>
38 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: Input Form
...
<CENTER>
<%@ taglib uri="http://struts.apache.org/tags-html"
prefix="html" %>
<html:errors/>
<html:form action="/actions/showSample">
Title size: <html:text property="titleSize"/><BR>
Heading size: <html:text property="headingSize"/><BR>
Body text size: <html:text property="bodySize"/><BR>
Background color: <html:text property="bgColor"/><BR>
Foreground color: <html:text property="fgColor"/><BR>
<html:submit value="Show Sample"/>
</html:form>
</CENTER>
...39 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: Action
package coreservlets;
import javax.servlet.http.*;
import org.apache.struts.action.*;
public class ShowSampleAction extends Action {
public ActionForward execute(ActionMapping mapping,
ActionForm form,
HttpServletRequest request,
HttpServletResponse response)
throws Exception {
return(mapping.findForward("success"));
}
}
40 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Initial Form41 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Incomplete Data
42 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Rentering Data43 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Complete Data
44 Apache Struts: Validating User Input Manually www.coreservlets.com
Using Parameterized Error 
Messages
• Benefits
– Error messages reflect runtime values
– Less repetition of error messages
– More meaningful error messages for situations other than 
missing-data
• Properties file
– Insert placeholders for values with {0}, {1}, etc.
– E.g.: value.required={0} is required.
• ActionForm
– Add extra arguments to ActionMessage constructor
• One argument for each placeholder
• Up to four separate arguments allowed
– If more arguments needed, supply an array
– Perform more complex validation (types of arguments, 
relationship among values, etc.)45 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: ActionForm 
(FormatFormBean)
...public ActionErrors validate(ActionMapping mapping,
HttpServletRequest request) {
ActionErrors errors = new ActionErrors();
if (isMissing(getTitleSize())) {
errors.add("titleSizeMissing",
new ActionMessage("value.required",
"Title size"));
} else if (!isInt(getTitleSize())) {
errors.add("titleNotInt",
new ActionMessage("value.int",
"title size",
getTitleSize()));
}
...
if (isMissing(getFgColor())) {
errors.add("fgColorMissing",
new ActionMessage("value.required",
"Foreground color"));
} else if (getBgColor().equals(getFgColor())) {
errors.add("colorsIdentical",
new ActionMessage("colors.match",
getBgColor()));
}
return(errors);
}
46 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: ActionForm (Continued)
private boolean isMissing(String value) {
return((value == null) || (value.trim().equals("")));
}
private boolean isInt(String potentialInt) {
boolean isInt = true;
try {
int x = Integer.parseInt(potentialInt);
} catch(NumberFormatException nfe) {
isInt = false;
}
return(isInt);
}47 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: Properties File
(WEB-INF/classes/MessageResources.properties)
# -- Standard errors --
errors.header=<UL>
errors.prefix=<LI><B><FONT COLOR="RED">
errors.suffix=</FONT></B></LI>
errors.footer=</UL>
# -- Custom validation messages --
value.required={0} is required.
value.int=Whole number required for {0}; "{1}" 
is not an integer.
colors.match=The foreground and background color 
are both "{0}".
48 Apache Struts: Validating User Input Manually www.coreservlets.com
Unchanged Elements
• Identical to previous example:
– Input form
• Still simply uses <html:errors/>
– Action
• Still does not need validation logic or a special return value to 
indicate redisplaying the input form
– struts-config.xml
• Still lists the original form as the value of the input 
attribute of action49 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Initial Form
50 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Incomplete Data51 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Rentering Data
52 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Complete Data53 Apache Struts: Validating User Input Manually www.coreservlets.com
Displaying Separate Error 
Messages
• Instead of a list of errors, you can display 
separate error messages for each field
• Use <html:errors property="name"/>
• The name should match the name given when 
ActionMessage was created
• Deficiency
– Not all warnings can be easily done with optional text
• Turning the background color of table cells to red
• Changing the text of a prompt
54 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: Properties File 
(Shorter Messages)
# -- Standard errors --
errors.header=
errors.prefix=<B><FONT COLOR="RED">
errors.suffix=</FONT></B>
errors.footer=
# -- Custom validation messages --
value.required={0} required.
value.int=Need int for {0}; "{1}" invalid.
colors.match=FG and BG are both "{0}".55 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: ActionForm 
(FormatFormBean Unchanged)
...
public ActionErrors validate(ActionMapping mapping,
HttpServletRequest request) {
ActionErrors errors = new ActionErrors();
if (isMissing(getTitleSize())) {
errors.add("titleSizeMissing",
new ActionMessage("value.required",
"Title size"));
} else if (!isInt(getTitleSize())) {
errors.add("titleNotInt",
new ActionMessage("value.int",
"title size",
getTitleSize()));
}
...
} else if (getBgColor().equals(getFgColor())) {
errors.add("colorsIdentical",
new ActionMessage("colors.match",
getBgColor()));
}
return(errors);
}
56 Apache Struts: Validating User Input Manually www.coreservlets.com
Example: Input Form
<html:form action="/actions/showSample">
<TABLE ALIGN="CENTER">
<TR><TH ALIGN="RIGHT">
<html:errors property="titleSizeMissing"/>
<html:errors property="titleNotInt"/>
<TH>Title size: <html:text property="titleSize"/>
<TR><TH ALIGN="RIGHT">
<html:errors property="headingSizeMissing"/>
<html:errors property="headingNotInt"/>
<TH>Heading size: <html:text property="headingSize"/>
<TR><TH ALIGN="RIGHT">
<html:errors property="bodySizeMissing"/>
<html:errors property="bodyNotInt"/>
<TH>Body text size: <html:text property="bodySize"/>
<TR><TH ALIGN="RIGHT">
<html:errors property="bgColorMissing"/>
<html:errors property="colorsIdentical"/>
<TH>Background color: <html:text property="bgColor"/>
<TR><TH ALIGN="RIGHT">
<html:errors property="fgColorMissing"/>
<TH>Foreground color: <html:text property="fgColor"/>
<TR><TH><TH><html:submit value="Show Sample"/>
</TABLE>
</html:form>57 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Initial Form
58 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Incomplete Data59 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Rentering Data
60 Apache Struts: Validating User Input Manually www.coreservlets.com
Result: Complete Data61 Apache Struts: Validating User Input Manually www.coreservlets.com
Summary
• Perform app-specific validation in the Action
• Put more reusable validation in ActionForm
– Return non-empty ActionErrors from validate to trigger 
redisplay of input form
• Error messages are given as keys
• Keys match entries in properties file
– Possibly with parameterized substitution
• <html:errors/> prints out error messages
– Usually in a list; sometimes separately
– Empty string output if no error messages
• Preview: automatic validation framework
– Writing code to check for standard cases is tedious
– What about JavaScript?
Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Questions?
Core Servlets & JSP book: www.coreservlets.com
More Servlets & JSP book: www.moreservlets.com
Servlet and JSP Training Courses: courses.coreservlets.co
















Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Jakarta Struts:
Declarative Exception 
Handling
Struts 1.2 Version
Core Servlets & JSP book: www.coreservlets.com
More Servlets & JSP book: www.moreservlets.com
Servlet, JSP, Struts, JSF, and Java Training Courses: 
courses.coreservlets.com
Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
For live Struts training, please see 
JSP/servlet/Struts/JSF training courses at 
http://courses.coreservlets.com/.
Taught by the author of Core Servlets and JSP, More 
Servlets and JSP, and this tutorial. Available at public 
venues, or customized versions can be held on-site at 
your organization.4 Apache Struts: Declarative Exception Handling www.coreservlets.com
Agenda
• Transferring to custom error pages when 
various exception types are thrown
– Global exceptions
– Per-Action exceptions
– Standard web.xml approach
• Using custom exception handlers
– Declaring
– Defining
5 Apache Struts: Declarative Exception Handling www.coreservlets.com
Idea
• Programmatic exception handling
– Explicit try/catch blocks in any code that can throw 
exception
– Works well when custom value (i.e., of variable) needed 
when error occurs
• Declarative exception handling
– Entries in struts-config.xml (or web.xml) indicate what 
pages should be displayed when various errors occur
<exception key="some.key" 
type="package.SomeException" 
path="/WEB-INF/somepage.jsp"/>
– Works well when custom page needed when error occurs
– The Struts approach applies only to exceptions thrown by 
Actions6 Apache Struts: Declarative Exception Handling www.coreservlets.com
Entries in struts-config.xml
• exception element with 4 possible attributes
– key: entry in a resource bundle (properties file) used to 
build an ActionMessage and that can be output with 
html:errors. Ignored now: see validation section
– type: the fully qualified class of the exception. The most 
specific match is used. Applies only to Actions.
– path: the address (relative to the Web app) of the error 
page. Should normally be in WEB-INF.
– handler: the class that will handle the error. Usually 
omitted, and default handler used.
<exception key="errors.null" 
type="java.lang.NullPointerException" 
path="/WEB-INF/errors/null.jsp"/>
• Used within global-exceptions or action
7 Apache Struts: Declarative Exception Handling www.coreservlets.com
Three Basic Approaches
• Give page for specific type of exception
– Use exception entry in global-exceptions or 
action
• Give page for generic Exception
– Use exception entry in global-exceptions, or
– Use exception-type entry in web.xml, or use 
error-page attribute of page directive
• Advantage of page directive: the exception object is bound, 
so you can print a backtrace
• Give custom handler for specific type of 
exception
– Use exception entry in global-exceptions or 
action, and
– Define subclass of ExceptionHandlerSlides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Handling Specific 
Exceptions
9 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 1: Page for 
NullPointerException
• struts-config.xml
<global-exceptions>
<exception key="some.key" 
type="java.lang.NullPointerException" 
path="/WEB-INF/errors/null.jsp"/>
</global-exceptions>
• null.jsp
<!DOCTYPE ...>
<HTML>
<HEAD><TITLE>NullPointerException</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<H1>NullPointerException</H1>
Blah, blah, blah, blah.
</BODY></HTML>10 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 1: Page for 
NullPointerException (Bean)
package coreservlets;
import org.apache.struts.action.*;
public class ColorBean extends ActionForm {
private String foregroundColor, backgroundColor;
public String getForegroundColor() {
return(foregroundColor);
}
public void setForegroundColor(String fgColor) {
if (!fgColor.equals("")) {
foregroundColor = fgColor;
}
}
...
}
11 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 1: Page for 
NullPointerException (Action)
public class ShowColorsAction extends Action {
public ActionForward execute(ActionMapping mapping,
ActionForm form,
HttpServletRequest request,
HttpServletResponse response)
throws Exception {
ColorBean colorBean = (ColorBean)form;
String fg = colorBean.getForegroundColor();
String bg = colorBean.getBackgroundColor();
if (fg.equals(bg)) {
colorBean.setForegroundColor("BLACK");
colorBean.setBackgroundColor("WHITE");
}
...
return(mapping.findForward("success"));
}
}12 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 1: Page for 
NullPointerException (Results)
13 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 1: Page for 
NullPointerException (Results)Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Handling Generic 
Exceptions 
(Struts-Specific Approach)
15 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 2: Page for Generic 
Exception
• struts-config.xml
<global-exceptions>
<exception key="some.key" 
type="java.lang.NullPointerException" 
path="/WEB-INF/errors/null.jsp"/>
<exception key="some.key" 
type="java.lang.Exception" 
path="/WEB-INF/errors/error.jsp"/>
</global-exceptions>
• null.jsp
<!DOCTYPE ...>
<HTML>
<HEAD><TITLE>Error</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<H1>Error</H1>
Blah, blah, blah, blah.
</BODY></HTML>16 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 2: Page for Generic 
Exception (Action)
public class ShowColorsAction extends Action {
public ActionForward execute(ActionMapping mapping,
ActionForm form,
HttpServletRequest request,
HttpServletResponse response)
throws Exception {
ColorBean colorBean = (ColorBean)form;
String fg = colorBean.getForegroundColor();
String bg = colorBean.getBackgroundColor();
if (fg.equals(bg)) {
colorBean.setForegroundColor("BLACK");
colorBean.setBackgroundColor("WHITE");
}
if (bg.equalsIgnoreCase("papayawhip")) {
throw(new Exception("Bogus background color!"));
}
...
return(mapping.findForward("success"));
}
}
17 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 2: Page for Generic 
Exception (Result)Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Handling Generic 
Exceptions 
(Standard Approaches)
19 Apache Struts: Declarative Exception Handling www.coreservlets.com
Alternatives Using Standard 
Servlet/JSP Elements
• Pages to use for specific HTTP status codes
– Use the error-code element
• Within error-page
• Pages to use when specific uncaught 
exceptions are thrown
– Use the exception-type element
• Within error-page
• Page-specific error pages
– Use <%@ page errorPage="Relative URL" %>
• In individual JSP page, not in web.xml20 Apache Struts: Declarative Exception Handling www.coreservlets.com
Error Pages and Status Codes
<web-app...>
<error-page>
<error-code>404</error-code>
<location>/WEB-INF/NotFound.jsp</location>
</error-page>
...
</web-app>
21 Apache Struts: Declarative Exception Handling www.coreservlets.com
Error Pages and Status Codes: 
Result22 Apache Struts: Declarative Exception Handling www.coreservlets.com
Error Pages and Exceptions: A 
Dangerous Computation
package moreservlets;
/** Exception used to flag particularly onerous
programmer blunders. Used to illustrate the
exception-type web.xml element.
*/
public class DumbDeveloperException extends Exception {
public DumbDeveloperException() {
super("Duh. What was I *thinking*?");
}
public static int dangerousComputation(int n)
throws DumbDeveloperException {
if (n < 5) {
return(n + 10);
} else {
throw(new DumbDeveloperException());
}
}
}
23 Apache Struts: Declarative Exception Handling www.coreservlets.com
Error Pages and Exceptions: A 
Risky Page
<!DOCTYPE HTML PUBLIC 
"-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD><TITLE>Risky JSP Page</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<H2>Risky Calculations</H2>
<%@ page import="moreservlets.*" %>
<% int n = ((int)(10 * Math.random())); %>
<UL>
<LI>n: <%= n %>
<LI>dangerousComputation(n): 
<%= DumbDeveloperException.dangerousComputation(n) %>
</UL>
</BODY></HTML>24 Apache Struts: Declarative Exception Handling www.coreservlets.com
Error Pages and Exceptions: 
Declaring Error Page for DDE
<web-app...>
<error-page>
<exception-type>
moreservlets.DumbDeveloperException
</exception-type>
<location>/WEB-INF/DDE.jsp</location>
</error-page>
...
</web-app>
25 Apache Struts: Declarative Exception Handling www.coreservlets.com
Error Pages and Exceptions: 
WEB-INF/DDE.jsp
<!DOCTYPE HTML PUBLIC 
"-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD><TITLE>Dumb</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<H2>Dumb Developer</H2>
We're brain dead. Consider using our competitors.
</BODY></HTML>26 Apache Struts: Declarative Exception Handling www.coreservlets.com
Error Pages and Exceptions: 
Results
27 Apache Struts: Declarative Exception Handling www.coreservlets.com
Page-Specific Error Pages: 
Example
…<BODY>
<%@ page errorPage="/WEB-INF/SpeedErrors.jsp" %>
<TABLE BORDER=5 ALIGN="CENTER">
<TR><TH CLASS="TITLE">Computing Speed</TABLE>
<%! 
private double toDouble(String value) {
return(Double.parseDouble(value));
}
%>
<% 
double furlongs = toDouble(request.getParameter("furlongs")); 
double fortnights = 
toDouble(request.getParameter("fortnights"));
double speed = furlongs/fortnights;
%>
<UL>
<LI>Distance: <%= furlongs %> furlongs.
<LI>Time: <%= fortnights %> fortnights.
<LI>Speed: <%= speed %> furlongs per fortnight.
</UL>
</BODY></HTML>28 Apache Struts: Declarative Exception Handling www.coreservlets.com
Page-Specific Error Pages: 
Example (Continued)
…<BODY>
<%@ page isErrorPage="true" %>
<TABLE BORDER=5 ALIGN="CENTER">
<TR><TH CLASS="TITLE">
Error Computing Speed</TABLE>
<P>
ComputeSpeed.jsp reported the following error:
<I><%= exception %></I>. This problem occurred in the
following place:
<PRE>
<%@ page import="java.io.*" %>
<% exception.printStackTrace(new PrintWriter(out)); %>
</PRE>
</BODY></HTML>
29 Apache Struts: Declarative Exception Handling www.coreservlets.com
Page-Specific Error Pages: ResultsSlides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Custom Exception 
Handlers
31 Apache Struts: Declarative Exception Handling www.coreservlets.com
Using Custom Handlers
• Extend ExceptionHandler
– Use execute method, but with two extra arguments 
(Exception and ExceptionConfig)
– Give custom behavior (recording error in database, 
sending email, etc.)
– Return super.execute in most cases
• Declare handler in struts-config.xml
<exception key="some.key" 
type="pkg.SomeException" 
handler="pkg.SomeExceptionHandler"
path="/WEB-INF/somefile.jsp"/>32 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 3: Custom Handler 
(struts-config.xml)
<global-exceptions>
<exception key="some.key" 
type="java.lang.NullPointerException" 
path="/WEB-INF/errors/null.jsp"/>
<exception key="some.key" 
type="coreservlets.CriticalProblem" 
handler=
"coreservlets.CustomExceptionHandler"
path="/WEB-INF/errors/error.jsp"/>
<exception key="some.key" 
type="java.lang.Exception" 
path="/WEB-INF/errors/error.jsp"/>
</global-exceptions>
33 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 3: Custom Handler 
(Custom Handler)
package coreservlets;
import javax.servlet.http.*;
import org.apache.struts.action.*;
import org.apache.struts.config.*;
import javax.mail.*;
import javax.mail.internet.*;
import java.util.*;
import javax.servlet.*;
public class CustomExceptionHandler extends ExceptionHandler{
public ActionForward execute(Exception exception,
ExceptionConfig config,
ActionMapping mapping,
ActionForm form,
HttpServletRequest request,
HttpServletResponse response)
throws ServletException {34 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 3: Custom Handler 
(Custom Handler, Continued)
try {
Properties properties = new Properties();
properties.put("mail.host", "coreservlets.com");
Session mailSession =
Session.getDefaultInstance(properties, null);
MimeMessage mailMessage = new MimeMessage(mailSession);
mailMessage.setFrom
(new InternetAddress("errors@some-company.com"));
mailMessage.setFrom
(new InternetAddress("hall@coreservlets.com"));
mailMessage.setSubject("Error in Struts application");
mailMessage.setText
("The struts-errors app had a critical problem:\n" +
" " + exception + "\n\n" +
"Get your butt out to the office and fix it NOW.");
Transport.send(mailMessage);
System.out.println("Sent emergency email.");
} catch(Exception e) {}
return(super.execute(exception, config, mapping,
form, request, response));
}}
35 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 3: Custom Handler 
(Custom Exception Class)
package coreservlets;
public class CriticalProblem extends Exception {
public CriticalProblem(String message) {
super(message);
}
}36 Apache Struts: Declarative Exception Handling www.coreservlets.com
Example 3: Custom Handler 
(Action)
public class ShowColorsAction extends Action {
public ActionForward execute(ActionMapping mapping,
ActionForm form,
HttpServletRequest request,
HttpServletResponse response)
throws Exception {
ColorBean colorBean = (ColorBean)form;
String fg = colorBean.getForegroundColor();
String bg = colorBean.getBackgroundColor();
if (fg.equals(bg)) {
colorBean.setForegroundColor("BLACK");
colorBean.setBackgroundColor("WHITE");
}
if (bg.equalsIgnoreCase("papayawhip")) {
throw(new Exception("Bogus background color!"));
}
if (Math.random() < 0.1) {
String message =
"Database server exploded. Building is burning!";
throw(new CriticalProblem(message));
}
return(mapping.findForward("success"));
}
}
37 Apache Struts: Declarative Exception Handling www.coreservlets.com
Summary
• Give page for specific type of exception
– Use exception entry in global-exceptions or 
action
• Give page for generic Exception
– Use exception entry in global-exceptions, or
– Use exception-type entry in web.xml, or use 
error-page attribute of page directive
• Give custom handler for specific type of 
exception
– Use exception entry in global-exceptions or 
action, and
– Define subclass of ExceptionHandlerSlides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Questions?
Core Servlets & JSP book: www.coreservlets.com
More Servlets & JSP book: www.moreservlets.com
Servlet, JSP, Struts, JSF, and Java Training Courses: 
courses.coreservlets.co



















Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Jakarta Struts:
DispatchAction and Other 
Advanced Action Classes
Struts 1.2 Version
Core Servlets & JSP book: www.coreservlets.com
More Servlets & JSP book: www.moreservlets.com
Servlet, JSP, Struts, JSF, and Java Training Courses: 
courses.coreservlets.com
Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
For live Struts training, please see 
JSP/servlet/Struts/JSF training courses at 
http://courses.coreservlets.com/.
Taught by the author of Core Servlets and JSP, More 
Servlets and JSP, and this tutorial. Available at public 
venues, or customized versions can be held on-site at 
your organization.5 Apache Struts: Advanced Actions www.coreservlets.com
Agenda
• Performing different logic based on a radio 
button, hidden field, or push button value
– But not repeatedly checking parameter names in the 
execute method
– Using DispatchAction
• Using Struts form-bean capabilities in nonStruts applications
– Without redoing code in Struts
– Using ForwardAction
• Other advanced Action subclasses
Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
DispatchAction
Grouping Related Operations7 Apache Struts: Advanced Actions www.coreservlets.com
DispatchAction
• Scenario
– The same form should result in substantially different 
logic depending on whether certain radio buttons were 
chosen, or depending on which submit button was 
pressed
• But, in HTML, one form has one ACTION
– Several actions share similar or identical helper methods
• Problems
– Tedious and repetitive checking of parameters just to 
know what real method to invoke
• Form bean must have getter/setters for the radio button
• Goal 
– Automate the dispatch logic (decision re which method 
applies), based on struts-config.xml
8 Apache Struts: Advanced Actions www.coreservlets.com
Example 
(Radio button named "operation")
public ActionForward execute (ActionMapping mapping,
ActionForm form,
HttpServletRequest request,
HttpServletResponse response)
throws Exception {
UserFormBean formBean = (UserFormBean)form;
if (radioButtonMatches(formBean, "createAccount")) {
return(createAccount(mapping, formBean, request, response));
} else if (radioButtonMatches(formBean, "changePassword")) {
return(changePassword(mapping, formBean, request, 
response));
} else if (radioButtonMatches(formBean, "deleteAccount")) {
return(deleteAccount(mapping, formBean, request, response));
} else {
return(makeErrorMessage());
}
}
private boolean radioButtonMatches(UserFormBean formBean,
String value) {
String operation = formBean.getOperation();
return((operation != null) && operation.equals(value));
}9 Apache Struts: Advanced Actions www.coreservlets.com
Using DispatchAction
• Use struts-config.xml to list the parameter 
used to determine which method will be called
– Use the parameter attribute of action
<action path="..." type="..." parameter="operation">
• Extend DispatchAction instead of Action
– Directly implement desired methods
• Omit the execute method entirely
• Custom methods have same signature as execute
– Note package is ...struts.actions, not ...struts.action
• In form, supply parameter with given name
– Value should be the name of the method that applies
<INPUT TYPE="RADIO" NAME="operation" 
VALUE="createAccount">
• Form bean needs no setters for button
10 Apache Struts: Advanced Actions www.coreservlets.com
Example: Outline
• Perform different operations depending on 
which radio button is selected
• Use same basic Action class in all cases11 Apache Struts: Advanced Actions www.coreservlets.com
Struts Flow of Control
JSP
Form
Determine
Action
Action
Choose
JSP
Page
JSP
request .../SomeForm.jsp
submit form
request .../blah.do
invoke
method
designated 
by special 
parameter
return condition
forward to return final result
struts-config.xml Populate bean based 
on request parameters. 
Supply as second 
argument to methods.
Use bean:write 
to output bean 
properties.
12 Apache Struts: Advanced Actions www.coreservlets.com
Struts Flow of Control
• The user requests a form
– The form has radio button, push button, or hidden field with a special 
name, and whose values correspond to method names
• The form is submitted to a URL of the form blah.do. 
– That address is mapped by struts-config.xml to an Action class
• The designated method of the Action object is invoked 
– The method is selected based on the special form parameter
– One of the arguments to execute is a form bean that is automatically 
created and whose properties are automatically populated based on 
incoming request parameters of the same name
– The Action object then invokes business logic and data-access logic, 
placing the results in normal beans stored in request, session, or application 
scope. 
– The Action uses mapping.findForward to return a condition, and the 
conditions are mapped by struts-config.xml to various JSP pages. 
• Struts forwards request to the appropriate JSP page
– The page can use bean:write or the JSP 2.0 EL to output bean properties
– The page can use bean:message to output fixed strings 13 Apache Struts: Advanced Actions www.coreservlets.com
New Capabilities
• The form has a special parameter
– The possible values correspond to method names
• The parameter is declared in struts-config.xml
– With a parameter entry in the action element 
• The form bean needs no setter method for the 
special parameter
– For html:radio and most other html: tags, getter is needed
– Otherwise, form bean defined and declared normally
• Extend DispatchAction instead of Action
– No execute method
– One method for each possible value of the special 
parameter
• These methods have same signature as execute
14 Apache Struts: Advanced Actions www.coreservlets.com
The Six Basic Steps in Using 
Struts: Updates for Bean Use
1. Modify struts-config.xml. 
Use WEB-INF/struts-config.xml to: 
– Map incoming .do addresses to Action classes 
– Map return conditions to JSP pages 
– Declare any form beans that are being used
– List special param via parameter entry in action
– Restart server after modifying struts-config.xml
2. Define a form bean.
– This bean extends ActionForm and represents the data 
submitted by the user. It is automatically populated 
when the input form is submitted. 
• The getter needed for this special parameter determines which 
radio button is initially selected
• No setter needed for this special parameter15 Apache Struts: Advanced Actions www.coreservlets.com
The Six Basic Steps in Using 
Struts: Updates for Bean Use
3. Create results beans.
– These are normal beans of the sort used in MVC when 
implemented directly with RequestDispatcher. That is, 
they represent the results of the business logic and data 
access code. These beans are stored in request, session, 
or application scope. 
4. Define a DispatchAction class to handle 
requests.
– Omit the execute method
– Define a method named for each possible method of the 
special parameter
• Same signature as the execute method
– The system will call that method automatically
16 Apache Struts: Advanced Actions www.coreservlets.com
The Six Basic Steps in Using 
Struts: Updates for Bean Use
5. Create form that invokes blah.do.
– Use html:form to associate bean properties with input 
elements
• Keeps textfield names in synch with bean property names
• Allows form prepopulation
• Allows form redisplay
– Optionally use bean:message to output standard 
prompts 
6. Display results in JSP.
– The JSP page uses the bean:write tag to output 
properties of the form and result beans. 
– The page may also use bean:message. 17 Apache Struts: Advanced Actions www.coreservlets.com
Step 1 
(Modify struts-config.xml)
<struts-config>
<action-mappings>
<form-beans>
<form-bean name="userFormBean"
type="coreservlets.UserFormBean"/>
</form-beans>
<action path="/accountMod" 
type="coreservlets.ModifyAccountAction"
parameter="operation">
<forward name="create-failed" 
path="/WEB-INF/results/create-failed.jsp"/>
<forward name="create-success" 
path="/WEB-INF/results/create-confirm.jsp"/>
<forward name="change-failed" 
path="/WEB-INF/results/change-failed.jsp"/>
<forward name="change-success" 
path="/WEB-INF/results/change-confirm.jsp"/>
<forward name="delete-failed" 
path="/WEB-INF/results/delete-failed.jsp"/>
<forward name="delete-success" 
path="/WEB-INF/results/delete-confirm.jsp"/>
</action>
</action-mappings>
</struts-config>
18 Apache Struts: Advanced Actions www.coreservlets.com
Step 2 (Define a Form Bean)
package coreservlets;
import org.apache.struts.action.*;
public class UserFormBean extends ActionForm {
private String email = "";
private String password = "";
private String operation="createAccount";
public String getEmail() { return(email); }
public void setEmail(String email) {
this.email = email;
}
...
public String getOperation() {
return(operation);
}
}19 Apache Struts: Advanced Actions www.coreservlets.com
Step 3 (Define Results Beans)
• Omitted in this simple example
20 Apache Struts: Advanced Actions www.coreservlets.com
Step 4 (Define a DispatchAction 
Class to Handle Requests)
package coreservlets;
import javax.servlet.http.*;
import org.apache.struts.action.*; 
import org.apache.struts.actions.*;
public class ModifyAccountAction 
extends DispatchAction {21 Apache Struts: Advanced Actions www.coreservlets.com
Example: DispatchAction Code
(Continued)
public ActionForward createAccount
(ActionMapping mapping,
ActionForm form,
HttpServletRequest request,
HttpServletResponse response)
throws Exception {
if (isComplexBusinessLogicSuccessful("create")) {
return(mapping.findForward("create-success"));
} else {
return(mapping.findForward("create-failed"));
}
}
public ActionForward changePassword(...) {...}
public ActionForward deleteAccount(...) {...}
private boolean isComplexBusinessLogicSuccessful
(String type) {
return(Math.random() > 0.5);
}
}
22 Apache Struts: Advanced Actions www.coreservlets.com
Step 5 (Create Form that Invokes 
blah.do)
<%@ taglib uri="http://struts.apache.org/tags-html"
prefix="html" %>
<html:form action="/accountMod">
Email address: <html:text property="email"/><BR>
Password: <html:password property="password"/><BR>
<TABLE CELLSPACING="10">
<TR>
<TD><html:radio property="operation"
value="createAccount"/>
Create Account</TD>
<TD><html:radio property="operation"
value="changePassword"/>
Change Password</TD>
<TD><html:radio property="operation"
value="deleteAccount"/>
Delete Account</TD>
</TR>
</TABLE>
<html:submit value="Perform Selected Operation"/>
</html:form>23 Apache Struts: Advanced Actions www.coreservlets.com
Step 6 (Display Results in JSP)
• WEB-INF/results/create-confirm.jsp
<%@ taglib uri="http://struts.apache.org/tags-bean" 
prefix="bean" %>
<!DOCTYPE ...>
<HTML>
<HEAD><TITLE>Account Created</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<CENTER>
<H1>Account successfully created for
<bean:write name="userFormBean" property="email"/>.</H1>
Congratulations.
</CENTER>
</BODY></HTML>
24 Apache Struts: Advanced Actions www.coreservlets.com
Results (Initial Form)25 Apache Struts: Advanced Actions www.coreservlets.com
Results (Account Creation)
26 Apache Struts: Advanced Actions www.coreservlets.com
Results (Password Change)27 Apache Struts: Advanced Actions www.coreservlets.com
Results (Account Deletion)
28 Apache Struts: Advanced Actions www.coreservlets.com
More Details on DispatchAction
• Using DispatchAction for different forms
– Motivation: different forms with similar actions
• Have the different forms use hidden fields whose name matches 
the specified parameter and whose value designates the method 
• Using push buttons instead of radio buttons
– Conceptually, it seems the same. Problem: push button 
values are displayed to the user as the button labels
• You don't want the labels to have to match the method names
– Solution: override getMethodName.
• This method maps parameter values to method names
• But fails in I18N apps where button labels come from properties 
file, so LookupDispatchAction needed in this complex case
• Handling unmatched values
– E.g., users might submit without selecting a radio button
• This automatically invokes a method named unspecifiedSlides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
ForwardAction
Using Form Beans with
Non-Struts MVC Apps
30 Apache Struts: Advanced Actions www.coreservlets.com
ForwardAction
• Scenario
– You already have MVC-based servlet/JSP combo that 
uses beans
• Repeated calls to request.getParameter in servlet
– You already have standalone JSP page that uses beans
• Scripting elements or jsp:setProperty
• Problems
– Tedious and repetitive reading of request parameters and 
setting of bean properties
– Not yet ready to redo code in Struts
• Goal 
– Use Struts form beans facility, but keep basic servlet/JSP 
structure in place31 Apache Struts: Advanced Actions www.coreservlets.com
Steps in Using ForwardAction
• Change bean
– Need to extend ActionForm
– Do not need to implement Serializable
– Do not need to check for null and empty strings
• Change servlet
– Do not need to create bean or check 
Request/Session/Application for null
– Do not need to call request.getParameter
• Change form
– ACTION should refer to blah.do
32 Apache Struts: Advanced Actions www.coreservlets.com
Steps in Using ForwardAction
(Continued)
• Declare bean in struts-config.xml
– Same as with a normal form bean
• Declare action in struts-config.xml
<action path="/blah" 
type="org.apache.struts.actions.ForwardAction"
name="bean-name"
scope="request-session-or-application"
parameter="/path-to-servlet"/>33 Apache Struts: Advanced Actions www.coreservlets.com
Example: Preferred Colors
(Session Scoped)
• User can specify preferred foreground and 
background colors
– If no color specified, previous choice used
– If no colors given previously, defaults are used
• Uses MVC 
– Servlet uses RequestDispatcher
– Result page uses JSP 2.0 expression language
34 Apache Struts: Advanced Actions www.coreservlets.com
Non-Struts Version: Bean
package coreservlets;
import java.io.Serializable;
public class ColorBean1 implements Serializable {
private String foregroundColor = "BLACK";
private String backgroundColor = "WHITE";
public String getForegroundColor() {
return(foregroundColor);
}
public void setForegroundColor(String fgColor) {
if (!isEmpty(fgColor)) {
foregroundColor = fgColor;
}
}
...
private boolean isEmpty(String value) {
return((value == null) || (value.trim().equals("")));
}
}35 Apache Struts: Advanced Actions www.coreservlets.com
Non-Struts Version: Servlet
public class ShowColors1 extends HttpServlet {
public void doGet(HttpServletRequest request,
HttpServletResponse response)
throws ServletException, IOException {
HttpSession session = request.getSession();
ColorBean1 colorBean =
(ColorBean1)session.getAttribute("colorBean1");
if (colorBean == null) {
colorBean = new ColorBean1();
session.setAttribute("colorBean1", colorBean);
}
colorBean.setForegroundColor
(request.getParameter("foregroundColor"));
colorBean.setBackgroundColor
(request.getParameter("backgroundColor"));
if (colorBean.getForegroundColor().equals
(colorBean.getBackgroundColor())) {
colorBean = new ColorBean1();
session.setAttribute("colorBean1", colorBean);
}
String address = "/WEB-INF/results/show-colors1.jsp";
RequestDispatcher dispatcher =
request.getRequestDispatcher(address);
dispatcher.forward(request, response);
}}
36 Apache Struts: Advanced Actions www.coreservlets.com
Non-Struts Version: Form
<!DOCTYPE ...>
<HTML>
<HEAD><TITLE>Choose Preferred Colors</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<CENTER>
<H1>Choose Preferred Colors</H1>
<FORM ACTION="ShowColors1">
Foreground: <INPUT TYPE="TEXT" NAME="foregroundColor"><BR>
Background: <INPUT TYPE="TEXT" NAME="backgroundColor"><BR>
<INPUT TYPE="SUBMIT" VALUE="Set Colors">
</FORM>
</CENTER>
</BODY></HTML>37 Apache Struts: Advanced Actions www.coreservlets.com
Non-Struts Version: Form
38 Apache Struts: Advanced Actions www.coreservlets.com
Non-Struts Version: Results Page
<!DOCTYPE ...>
<HTML>
<HEAD><TITLE>Show Colors</TITLE></HEAD>
<BODY BGCOLOR="${colorBean1.backgroundColor}"
TEXT="${colorBean1.foregroundColor}">
<H1>Show Colors</H1>
Blah, blah, blah, blah.
</BODY></HTML>39 Apache Struts: Advanced Actions www.coreservlets.com
Non-Struts Version: Results
40 Apache Struts: Advanced Actions www.coreservlets.com
ForwardAction Version: Bean
package coreservlets;
import org.apache.struts.action.*;
public class ColorBean2 extends ActionForm {
private String foregroundColor = "BLACK";
private String backgroundColor = "WHITE";
public String getForegroundColor() {
return(foregroundColor);
}
public void setForegroundColor(String fgColor) {
foregroundColor = fgColor;
}
...
}41 Apache Struts: Advanced Actions www.coreservlets.com
ForwardAction Version: Servlet
public class ShowColors2 extends HttpServlet {
public void doGet(HttpServletRequest request,
HttpServletResponse response)
throws ServletException, IOException {
HttpSession session = request.getSession();
ColorBean2 colorBean =
(ColorBean2)session.getAttribute("colorBean2");
if (colorBean.getForegroundColor().equals
(colorBean.getBackgroundColor())) {
colorBean = new ColorBean2();
session.setAttribute("colorBean2", colorBean);
}
String address = "/WEB-INF/results/show-colors2.jsp";
RequestDispatcher dispatcher =
request.getRequestDispatcher(address);
dispatcher.forward(request, response);
}
}
42 Apache Struts: Advanced Actions www.coreservlets.com
ForwardAction Version: 
struts-config.xml
<struts-config>
<form-beans>
...
<form-bean name="colorBean2"
type="coreservlets.ColorBean2"/>
</form-beans>
<action-mappings>
...
<action path="/showColors2" 
type="org.apache.struts.actions.ForwardAction"
name="colorBean2"
scope="session"
parameter="/ShowColors2"/>
</action-mappings>
</struts-config>43 Apache Struts: Advanced Actions www.coreservlets.com
ForwardAction Version: Form
<!DOCTYPE ...>
<HTML>
<HEAD><TITLE>Choose Preferred Colors</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<CENTER>
<H1>Choose Preferred Colors</H1>
<FORM ACTION="showColors2.do">
Foreground: <INPUT TYPE="TEXT" NAME="foregroundColor"><BR>
Background: <INPUT TYPE="TEXT" NAME="backgroundColor"><BR>
<INPUT TYPE="SUBMIT" VALUE="Set Colors">
</FORM>
</CENTER>
</BODY></HTML>
44 Apache Struts: Advanced Actions www.coreservlets.com
ForwardAction: Form45 Apache Struts: Advanced Actions www.coreservlets.com
ForwardAction Version: 
Results Page
<!DOCTYPE ...>
<HTML>
<HEAD><TITLE>Show Colors</TITLE></HEAD>
<BODY BGCOLOR="${colorBean2.backgroundColor}"
TEXT="${colorBean2.foregroundColor}">
<H1>Show Colors</H1>
Blah, blah, blah, blah.
</BODY></HTML>
46 Apache Struts: Advanced Actions www.coreservlets.com
ForwardAction: Results47 Apache Struts: Advanced Actions www.coreservlets.com
Other Specialized 
Action Subclasses
• DefinitionDispatchAction
– Associates a URL with a Tiles definition name
• DownloadAction
– Used for actions that handle forms with file uploads
• IncludeAction
– Similar to ForwardAction, but includes instead of forwards
• Populates form beans first
• Useful for normal MVC-style servlet that wants to use the Struts formbean capability
• LocaleAction
– Uses request params to decide which Locale to use
• SwitchAction
– Invokes resource from a specific Struts Module
• TilesAction
– Accepts one extra parameter: the tiles context
48 Apache Struts: Advanced Actions www.coreservlets.com
Summary
• DispatchAction
– Use struts-config.xml to list the parameter used to 
determine which method will be called
• <action path="..." type="..." parameter="operation">
– Extend DispatchAction instead of Action
• Directly implement desired methods
– In form, supply parameter with given name
– Form bean needs no accessors for special parameter
• ForwardAction
– Use struts-config.xml to declare the bean and give 
address of servlet that will use it
• <action path="/blah" 
type="org.apache.struts.actions.ForwardAction"
name="bean-name"
scope="request-session-or-application"
parameter="/path-to-servlet"/>Slides © Marty Hall, http://www.coreservlets.com, books © Sun Microsystems Press 
Questions?
Core Servlets & JSP book: www.coreservlets.com
More Servlets & JSP book: www.moreservlets.com
Servlet, JSP, Struts, JSF, and Java Training Courses: 
courses.coreservlets.co


















































@Override
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		String indexPage = request.getParameter("index");
		if (indexPage == null) {
			indexPage = "1";
		}
		String pages = request.getParameter("page");
		if (pages == null) {
			pages= "1";
		}
		int page = Integer.parseInt(pages);
		
		int index = Integer.parseInt(indexPage);
		request.setAttribute("tag", index);
		T002Dao dao = new T002Dao();
		try {
			List<SearchBean> listPage = dao.getData();
			request.setAttribute("ListA", listPage);
			return (mapping.findForward("T002"));
		}catch(Exception e) {
			e.printStackTrace();
			return (mapping.findForward("T002"));
		}
		
	}




<%@ taglib uri="/tags/struts-bean" prefix="bean" %>
<%@ taglib uri="/tags/struts-html" prefix="html" %>
<%@ taglib uri="/tags/struts-logic" prefix="logic" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>



























<form-beans>
		<form-bean
            name="loginBean"
            type="fjs.cs.bean.LoginBean"/>
	</form-beans>
	<global-forwards>
        <forward
        	name="T001"
        	path="/pages/T001.jsp"/>
        
    </global-forwards>
    <action-mappings>
            <!-- Default "Welcome" action -->
            <!-- Forwards to Welcome.jsp -->
        <action
        	input="/pages/T001.jsp"
           	path="/T001"
            type="fjs.cs.action.T001"
            validate="true"
            name="loginBean"
			scope="request">
            <forward name="success" path="/pages/T002.jsp">
				<param name="action">fjs.cs.action.T002</param>
				<param name="parameterName">t002Bean</param>
				<param name="parameter">value</param>
			</forward>
            <forward name="fail" path="/pages/T001.jsp"/>
        </action>
        
        <action
        	path="/T002"
        	type="fjs.cs.action.T002"
        	scope="request"
        	name="t002Bean">
        	<forward name="success" path="/T002.do"/>
        </action>
</action-mappings>  




<form-beans>
		<form-bean
            name="loginBean"
            type="fjs.cs.bean.LoginBean"/>
	</form-beans>
	<global-forwards>
        <forward
        	name="T001"
        	path="/pages/T001.jsp"/>
        
    </global-forwards>
    <action-mappings>
            <!-- Default "Welcome" action -->
            <!-- Forwards to Welcome.jsp -->
        <action
        	input="/pages/T001.jsp"
           	path="/T001"
            type="fjs.cs.action.T001"
            validate="true"
            name="loginBean"
			scope="request">
            <forward name="success" path="/pages/T002.jsp"/>
            <forward name="fail" path="/pages/T001.jsp"/>
        </action>
        
        <action
        	path="/T002"
        	type="fjs.cs.action.T002"
        	scope="request"
        	name="t002Bean">
        	<forward name="success" path="/T002.do"/>
        </action>
      </action-mappings>  
      








@Override
	public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {
		ActionErrors error = new ActionErrors();
	    String userID = request.getParameter("USERID"); 
	    String password = request.getParameter("PASSWORD");
	    if (userID == "") {
	    	userID = null;
	    }
	    if (password == "") {
	    	password = null;
	    }
	    if (userID == null && password != null) {
	        error.add("loginError", new ActionMessage("LoginBean.username.required"));
	    }
	    if (password == null && userID != null) {
	        error.add("loginError", new ActionMessage("LoginBean.password.required"));
	    }
	    return error;
	}






public class T001 extends Action {
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request,
			HttpServletResponse response) throws Exception {
		try {
			LoginBean loginBean = (LoginBean) form;
			String user = loginBean.getUSERID();
			String pass = loginBean.getPASSWORD();
			T001Dao loginDao = new T001Dao();
			LoginBean result = loginDao.checkLogin(user, pass);
			if (result != null) {
				return (mapping.findForward("success"));
			}else {
				String messageError = Constants.MESSAGE_ERROR_USER_NOT_EXIST;
				request.setAttribute("messageErrorLogin", messageError);
				return (mapping.findForward("fail"));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return (mapping.findForward("fail"));

	}
}





<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts-config PUBLIC 
"-//Apache Software Foundation//DTD Struts Configuration 1.3//EN" 
"http://jakarta.apache.org/struts/dtds/struts-config_1_3.dtd">

<struts-config>

	<form-beans>
		<form-bean
            name="loginBean"
            type="fjs.com.Dto.T001Dto"/>
			
	</form-beans>
	 <global-forwards>
        <!-- Default forward to "Welcome" action -->
        <!-- Demonstrates using index.jsp to forward -->
         <forward name="T001" path="/pages/T001.jsp"/>
       
    </global-forwards>
	<action-mappings>
		<action 
			input="/pages/T001.jsp"
			path="/T001"
			type="com.mkyong.common.action.T001"
			 name="loginBean"
			scope="request"
			validate = "true">
			 <forward name="success" path="/pages/T002.jsp"/>
            <forward name="fail" path="/pages/T001.jsp"/>
			
		</action>
	</action-mappings>

</struts-config>









<global-forwards>
        <!-- Default forward to "Welcome" action -->
        <!-- Demonstrates using index.jsp to forward -->
        <forward
        	name="T001"
        	path="/pages/T001.jsp"/>
        <forward
        	name="T001"
        	path="/T001.do"/>
    </global-forwards>

	
<!-- =========================================== Action Mapping Definitions -->
	<form-beans>
		<form-bean
            name="loginBean"
            type="fjs.cs.bean.LoginBean"/>
	</form-beans>
    <action-mappings>
            <!-- Default "Welcome" action -->
            <!-- Forwards to Welcome.jsp -->
        <action
        	input="/pages/T001.jsp"
            path="/T001"
            type="fjs.cs.action.T001"
            validate="true"
            name="loginBean"
			scope="request">
            <forward name="success" path="/pages/T002.jsp"/>
            <forward name="fail" path="/pages/T001.jsp"/>
        </action>
  </action-mappings>





<%@ taglib uri="/tags/struts-bean" prefix="bean" %>
<%@ taglib uri="/tags/struts-html" prefix="html" %>
<%@ taglib uri="/tags/struts-logic" prefix="logic" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<style type="text/css">
  <%@include file="/WEB-INF/css/T001.css"%>
</style>
<style type="text/css">
  <%@include file="/WEB-INF/css/common.css"%>
</style>
<title><bean:message key="login.title"/></title>
</head>
<body>
	<div id="main">
		<div class="header">
			<h3 class="header-text"><bean:message key="header.customerstruts"/></h3>
			<div class="header-br"></div>
		</div>
		<div class="content">
			<div class="content-text"><bean:message key="header2.cusomerstruts"/></div>
		
			<div class="content-login">
				<form action="./T001.do" name="frmLogin" method="POST" >
					<div class="content-login__header">
						<h3><bean:message key="login.screen"/></h3>
						<label id="lblErrorMessage">
							<html:errors/>
						</label>
					</div>
					<div class="content-login__container">
						<div class="form-group">
							<label for="fullname" class="form-label form-label__userID"><bean:message key="username.text"/></label>
							 <input id="txtUserID" name="USERID" maxlength="8"
								type="text" class="form-control">
						</div>
						<div class="form-group__password">
							<label for="password" class="form-label"><bean:message key="password.text"/> </label> <input
								id="txtPassword" name="PASSWORD" type="password" maxlength="8"
								class="form-control">
						</div>
						<div class="form-group__btn">
							<button type="submit" id="btnLogin" class="form-submit"><bean:message key="login.button.Login"/></button>
							<button type="button" id="btnClear" class="form-submit"><bean:message key="login.button.clear"/></button>
						</div>
					</div>
				</form>
			</div>
		
		</div>
		<footer class="footer">
			<div class="header-br"></div>
			<div class="footer-text__copyright"><bean:message key="login.footer"/></div>
		</footer>
	</div>
</body>
<script>
	<%@include file="/WEB-INF/js/T001.js"%>
</script>
</html>






@Override
	public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {
		ActionErrors error = new ActionErrors();
	    String userID = request.getParameter("USERID"); 
	    String password = request.getParameter("PASSWORD");
	    if (userID == "") {
	    	userID = null;
	    }
	    if (password == "") {
	    	password = null;
	    }
	    if (userID == null && password == null) {
	    	error.add("loginError", new ActionMessage("LoginBean.username.required"));
	        return error;
	    }
	    if (userID == null && password != null) {
	        error.add("loginError", new ActionMessage("LoginBean.username.required"));
	        return error;
	    }
	    if (password == null && userID != null) {
	        error.add("loginError", new ActionMessage("LoginBean.password.required"));
	       
	        return error;
	    }
	    return error;
	}
	
	
public class T001 extends Action {
	public ActionForward execute(ActionMapping mapping, ActionForm form, 
		HttpServletRequest request, HttpServletResponse response) throws Exception {
		try {
			LoginBean loginBean = (LoginBean)form;
			String user = loginBean.getUSERID();
			String pass = loginBean.getPASSWORD();
			T001Dao loginDao = new T001Dao();
			LoginBean result = loginDao.checkLogin(user, pass);
			if (result != null) {
				return(mapping.findForward("success"));
			}else {
				String messageError = Constants.MESSAGE_ERROR_USER_NOT_EXIST;
				request.setAttribute("messageErrorLogin", messageError);
				return(mapping.findForward("fail"));
			}
			
		}catch(Exception e) {
			e.printStackTrace();
		}
		return(mapping.findForward("fail"));
		
	}
}





<%@ taglib uri="/tags/struts-bean" prefix="bean" %>
<%@ taglib uri="/tags/struts-html" prefix="html" %>
<%@ taglib uri="/tags/struts-logic" prefix="logic" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<style type="text/css">
  <%@include file="/WEB-INF/css/T001.css"%>
</style>
<style type="text/css">
  <%@include file="/WEB-INF/css/common.css"%>
</style>
<title><bean:message key="login.title"/></title>
</head>
<body>
	<div id="main">
		<div class="header">
			<h3 class="header-text"><bean:message key="header.customerstruts"/></h3>
			<div class="header-br"></div>
		</div>
		<div class="content">
			<div class="content-text"><bean:message key="header2.cusomerstruts"/></div>
		
			<div class="content-login">
				<form action="./T001.do" name="frmLogin" method="POST" >
					<div class="content-login__header">
						<h3><bean:message key="login.screen"/></h3>
						<label id="lblErrorMessage">
							
						</label>
					</div>
					<div class="content-login__container">
						<div class="form-group">
							<label for="fullname" class="form-label form-label__userID"><bean:message key="username.text"/></label>
							 <input id="txtUserID" name="USERID" maxlength="8"
								type="text" class="form-control">
						</div>
						<div class="form-group__password">
							<label for="password" class="form-label"><bean:message key="password.text"/> </label> <input
								id="txtPassword" name="PASSWORD" type="password" maxlength="8"
								class="form-control">
						</div>
						<div class="form-group__btn">
							<button type="submit" id="btnLogin" class="form-submit"><bean:message key="login.button.Login"/></button>
							<button type="button" id="btnClear" class="form-submit"><bean:message key="login.button.clear"/></button>
						</div>
					</div>
				</form>
			</div>
		
		</div>
		<footer class="footer">
			<div class="header-br"></div>
			<div class="footer-text__copyright"><bean:message key="login.footer"/></div>
		</footer>
	</div>
</body>
<script>
	<%@include file="/WEB-INF/js/T001.js"%>
</script>
</html>



@Override
	public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {
		ActionErrors error = new ActionErrors();
	    String userID = request.getParameter("USERID"); // lấy giá trị của ô input có tên là "userID"
	    String password = request.getParameter("PASSWORD"); // lấy giá trị của ô input có tên là "password"
	    if (userID == "") {
	    	userID = null;
	    }
	    if (password == "") {
	    	password = null;
	    }
	    if (userID == null && password == null) {
	        return error;
	    }
	    if (userID == null && password != null) {
	        error.add("username", new ActionMessage("LoginBean.username.required"));
	        return error;
	    }
	    if (password == null && userID != null) {
	        error.add("password", new ActionMessage("LoginBean.password.required"));
	        return error;
	    }
	    return error;
	}





public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {
    ActionErrors error = new ActionErrors();
    String userID = request.getParameter("userID"); // lấy giá trị của ô input có tên là "userID"
    String password = request.getParameter("password"); // lấy giá trị của ô input có tên là "password"
    if (userID == null && password == null) {
        return error;
    }
    if (userID == null || userID.trim().isEmpty() && !password.isEmpty()) {
        error.add("username", new ActionMessage("LoginBean.username.required"));
        return error;
    }
    if (password == null || userID.trim().isEmpty() && userID.isEmpty()) {
        error.add("password", new ActionMessage("LoginBean.password.required"));
        return error;
    }
    return error;
}




<fmt:message key="LoginBean.username.required" var="usernameError" />
<c:if test="${not empty usernameError}">
    <div id="username_error">${usernameError}</div>
</c:if>



<bean:message key="LoginBean.username.required" var="usernameError"/>
<c:if test="${not empty usernameError}">
    <div id="username_error">${usernameError}</div>
</c:if>

<bean:message key="LoginBean.paddword.required" var="passwordError"/>
<c:if test="${not empty passwordError}">
    <div id="password_error">${passwordError}</div>
</c:if>

							
							
							
							
							
							public ActionErrors validate(ActionMapping mapping, HttpServletRequest request) {
		ActionErrors error = new ActionErrors();
		if (getUSERID() == null && getUSERID() == null) {
			return error;
		}
		if (getUSERID() == null || getUSERID().trim().isEmpty() && !getPASSWORD().isEmpty()) {
			error.add("username", new ActionMessage("LoginBean.username.required"));
			return error;
		}
		if (getPASSWORD() == null || getUSERID().trim().isEmpty() && getUSERID().isEmpty()) {
			error.add("paddword", new ActionMessage("LoginBean.paddword.required"));
			return error;
		}
		return error;
		
	}








The Six Basic Steps in Using 
Struts: Updates for Bean Use
1. Modify struts-config.xml. 
Use WEB-INF/struts-config.xml to: 
– Map incoming .do addresses to Action classes 
– Map return conditions to JSP pages 
– Declare any form beans that are being used.
– Restart server after modifying struts-config.xml. 
2. Define a form bean.
– This bean extends ActionForm and represents the data 
submitted by the user. It is automatically populated 
when the input form is submitted. More precisely:
1. The reset method is called (useful for session-scoped beans)
2. For each incoming request parameter, the corresponding setter 
method is called
3. The validate method is called (possibly preventing the Action)



The Six Basic Steps in Using 
Struts: Updates for Bean Use
3. Create results beans.
– These are normal beans of the sort used in MVC when 
implemented directly with RequestDispatcher. That is, 
they represent the results of the business logic and data 
access code. These beans are stored in request, session, 
or application scope with the setAttribute method of 
HttpServletRequest, HttpSession, or ServletContext, 
just as in normal non-Struts applications. 
4. Define an Action class to handle requests.
– Rather than calling request.getParameter explicitly as in 
the previous example, the execute method casts the 
ActionForm argument to the specific form bean class, 
then uses getter methods to access the properties of the 
object



The Six Basic Steps in Using 
Struts: Updates for Bean Use
5. Create form that invokes blah.do.
– For now, we will use static HTML 
• Later, we will use the html:form tag to guarantee that the 
textfield names correspond to the bean property names, and to 
make it easy to fill in the form based on values in the app
• Later, we will also use bean:message to output fixed strings 
from a properties file
6. Display results in JSP.
– The JSP page uses the bean:write tag to output 
properties of the form and result beans. 
– It may also use the bean:message tag to output standard 
messages and text labels that are defined in a properties 
file (resource bundle). 


























Step 6 (Display Results in JSP) 
Alternatives for Beans
• Use the JSP 2.0 expression language. 
– This is perhaps the best option if the server supports JSP 2.0. In 
these examples, we will assume that the application needs to run on 
multiple servers, some of which support only JSP 1.2. 
• Use the Struts bean:write tag. 
– This is by far the most common approach when using Struts. Note 
that, unlike c:out and the JSP 2.0 expression language, bean:write 
automatically filters special HTML characters, replacing < with &lt; 
and > with &gt;. You can disable this behavior by specifying
<bean:write name="beanName" 
property="beanProperty"
filter="false">
– So, in this example we use bean:write. Before we do so, however,
we have to import the "bean" tag library as follows. 
<%@ taglib uri="http://struts.apache.org/tags-bean" 
prefix="bean" %>








Step 6 (Display Results in JSP) 
First Possible Page
<!DOCTYPE ...>
<HTML>
<HEAD><TITLE>Illegal Email Address</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<CENTER>
<H1>Illegal Email Address</H1>
<%@ taglib uri="http://struts.apache.org/tags-bean"
prefix="bean" %>
The address
"<bean:write name="userFormBean" property="email"/>"
is not of the form username@hostname (e.g.,
<bean:write name="suggestionBean" property="email"/>).
<P>
Please <A HREF="register1.jsp">try again</A>.
</CENTER>
</BODY></HTML>





Step 6 (Display Results in JSP) 
Second Possible Page
<!DOCTYPE ...>
<HTML>
<HEAD><TITLE>Illegal Password</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<CENTER>
<H1>Illegal Password</H1>
<%@ taglib uri="http://struts.apache.org/tags-bean"
prefix="bean" %>
The password
"<bean:write name="userFormBean" property="password"/>"
is too short; it must contain at least six characters.
Here is a possible password:
<bean:write name="suggestionBean" property="password"/>.
<P>
Please <A HREF="register1.jsp">try again</A>.
</CENTER>
</BODY></HTML>





Step 6 (Display Results in JSP) 
Third Possible Page
<!DOCTYPE ...>
<HTML>
<HEAD><TITLE>Success</TITLE></HEAD>
<BODY BGCOLOR="#FDF5E6">
<CENTER>
<H1>You have registered successfully.</H1>
<%@ taglib uri="http://struts.apache.org/tags-bean" 
prefix="bean" %>
<UL>
<LI>Email Address: 
<bean:write name="userFormBean" property="email"/>
<LI>Password: 
<bean:write name="userFormBean" property="password"/>
</UL>
Congratulations
</CENTER>
</BODY></HTML>


<global-forwards>
        <!-- Default forward to "Welcome" action -->
        <!-- Demonstrates using index.jsp to forward -->
         <forward
        	name="success"
        	path="/pages/T002.jsp"/>
        	
        <forward
        	name="T001"
        	path="/T001.do"/>
        	
       	<forward
        	name="T003"
        	path="/pages/T001.jsp"/>
    </global-forwards>
    
    
    
    
    
    
    <action-mappings>
            <!-- Default "Welcome" action -->
            <!-- Forwards to Welcome.jsp -->
        <action
            path="/T001"
            type="fjs.cs.action.T001">
    
        </action>
       
      
    <!-- sample input and input submit actions

        <action
            path="/Input"
            type="org.apache.struts.actions.ForwardAction"
            parameter="/pages/Input.jsp"/>

        <action
            path="/InputSubmit"
            type="app.InputAction"
            name="inputForm"
            scope="request"
            validate="true"
            input="/pages/Input.jsp"/>

            <action
                path="/edit*"
                type="app.Edit{1}Action"
                name="inputForm"
                scope="request"
                validate="true"
                input="/pages/Edit{1}.jsp"/>

    end samples -->
    </action-mappings>
    
    
    
    
    <form action="/T001.do" name="frmLogin" method="POST" >
					<div class="content-login__header">
						<h3>LOGIN</h3>
						<label id="lblErrorMessage">
						</label>
					</div>
					<div class="content-login__container">

						<div class="form-group">
							<label for="fullname" class="form-label form-label__userID">User
								Id: </label> <input id="txtUserID" name="userName" maxlength="8"
								type="text" class="form-control">
						</div>
						<div class="form-group__password">
							<label for="password" class="form-label">Password: </label> <input
								id="txtPassword" name="password" type="password" maxlength="8"
								class="form-control">
						</div>
						<div class="form-group__btn">
							<button type="submit" id="btnLogin" class="form-submit">Login</button>
							<button type="button" id="btnClear" class="form-submit">Clear</button>
						</div>
					</div>s
				</form>
				
				
				
				
				
public class T001 extends Action {
	public ActionForward execute(ActionMapping mapping, ActionForm form, 
		HttpServletRequest request, HttpServletResponse response) throws Exception {
		try {
			String user = request.getParameter("userName");
			String pass = request.getParameter("password");
//			String message = "";
//			T001Dao loginDao = new T001Dao();
//			T001Dto result = loginDao.checkLogin(user, pass);
//			
//			if (result != null) {
//				message = "success";
//				return(mapping.findForward("success"));
//			}else {
//				message = "error";
//			}
			if (Integer.parseInt(user) == 123){
				return(mapping.findForward("success"));
			}
			
		}catch(Exception e) {
			e.printStackTrace();
		}
		return(mapping.findForward("T003"));
		
	}d






<?xml version="1.0" encoding="ISO-8859-1" ?>

<!DOCTYPE struts-config PUBLIC
          "-//Apache Software Foundation//DTD Struts Configuration 1.2//EN"
          "http://jakarta.apache.org/struts/dtds/struts-config_1_2.dtd">

<!--
     This is a blank Struts configuration file with an example
     welcome action/page and other commented sample elements.

     Tiles and the Struts Validator are configured using the factory defaults
     and are ready-to-use.

     NOTE: If you have a generator tool to create the corresponding Java classes
     for you, you could include the details in the "form-bean" declarations.
     Otherwise, you would only define the "form-bean" element itself, with the
     corresponding "name" and "type" attributes, as shown here.
-->


<struts-config>

<!-- ============================================ Data Source Configuration -->
<!--
<data-sources>
<data-source type="org.apache.commons.dbcp.BasicDataSource">
    <set-property
      property="driverClassName"
      value="org.postgresql.Driver" />
    <set-property
      property="url"
      value="jdbc:postgresql://localhost/mydatabase" />
    <set-property
      property="username"
      value="me" />
    <set-property
      property="password"
      value="test" />
    <set-property
      property="maxActive"
      value="10" />
    <set-property
      property="maxWait"
      value="5000" />
    <set-property
      property="defaultAutoCommit"
      value="false" />
    <set-property
      property="defaultReadOnly"
      value="false" />
    <set-property
      property="validationQuery"
      value="SELECT COUNT(*) FROM market" />
</data-source>
</data-sources>
-->

<!-- ================================================ Form Bean Definitions -->

    <form-beans>
    <!-- sample form bean descriptor for an ActionForm
        <form-bean
            name="inputForm"
            type="app.InputForm"/>
    end sample -->

    <!-- sample form bean descriptor for a DynaActionForm
        <form-bean
            name="logonForm"
            type="org.apache.struts.action.DynaActionForm">
            <form-property
                name="username"
                type="java.lang.String"/>
            <form-property
                name="password"
                type="java.lang.String"/>
       </form-bean>
    end sample -->
    </form-beans>


<!-- ========================================= Global Exception Definitions -->

    <global-exceptions>
        <!-- sample exception handler
        <exception
            key="expired.password"
            type="app.ExpiredPasswordException"
            path="/changePassword.jsp"/>
        end sample -->
    </global-exceptions>


<!-- =========================================== Global Forward Definitions -->
	
    <global-forwards>
        <!-- Default forward to "Welcome" action -->
        <!-- Demonstrates using index.jsp to forward -->
        <forward
            name="wellcome"
            path="/pages/T001.jsp"/>
       
    </global-forwards>
    
    <global-forwards>
        <!-- Default forward to "Welcome" action -->
        <!-- Demonstrates using index.jsp to forward -->
         <forward
        	name="successs"
        	path="/pages/T002.jsp"/>
        	
        <forward
        	name="T001"
        	path="/pages/T001.jsp"/>
    </global-forwards>

	
<!-- =========================================== Action Mapping Definitions -->

    <action-mappings>
            <!-- Default "Welcome" action -->
            <!-- Forwards to Welcome.jsp -->
        <action
            path="/InputSubmit"
            type="fjs.cs.coreservlets.T001"
            parameter="/pages/T001.jsp">
        </action>
       
        <action
            path="/T002"
            forward="/pages/T002.jsp">
            
        </action>
    <!-- sample input and input submit actions

        <action
            path="/Input"
            type="org.apache.struts.actions.ForwardAction"
            parameter="/pages/Input.jsp"/>

        <action
            path="/InputSubmit"
            type="app.InputAction"
            name="inputForm"
            scope="request"
            validate="true"
            input="/pages/Input.jsp"/>

            <action
                path="/edit*"
                type="app.Edit{1}Action"
                name="inputForm"
                scope="request"
                validate="true"
                input="/pages/Edit{1}.jsp"/>

    end samples -->
    </action-mappings>
<!-- ============================================= Controller Configuration -->

    <controller
       processorClass="org.apache.struts.tiles.TilesRequestProcessor"/>


<!-- ======================================== Message Resources Definitions -->

    <message-resources parameter="MessageResources" />


<!-- =============================================== Plug Ins Configuration -->

  <!-- ======================================================= Tiles plugin -->
  <!--
     This plugin initialize Tiles definition factory. This later can takes some
	 parameters explained here after. The plugin first read parameters from
	 web.xml, thenoverload them with parameters defined here. All parameters
	 are optional.
     The plugin should be declared in each struts-config file.
       - definitions-config: (optional)
            Specify configuration file names. There can be several comma
		    separated file names (default: ?? )
       - moduleAware: (optional - struts1.1)
            Specify if the Tiles definition factory is module aware. If true
            (default), there will be one factory for each Struts module.
			If false, there will be one common factory for all module. In this
            later case, it is still needed to declare one plugin per module.
            The factory will be initialized with parameters found in the first
            initialized plugin (generally the one associated with the default
            module).
			  true : One factory per module. (default)
			  false : one single shared factory for all modules
	   - definitions-parser-validate: (optional)
	        Specify if xml parser should validate the Tiles configuration file.
			  true : validate. DTD should be specified in file header (default)
			  false : no validation

	  Paths found in Tiles definitions are relative to the main context.
  -->

    <plug-in className="org.apache.struts.tiles.TilesPlugin" >

      <!-- Path to XML definition file -->
      <set-property property="definitions-config"
                       value="/WEB-INF/tiles-defs.xml" />
      <!-- Set Module-awareness to true -->
      <set-property property="moduleAware" value="true" />
    </plug-in>


  <!-- =================================================== Validator plugin -->

  <plug-in className="org.apache.struts.validator.ValidatorPlugIn">
    <set-property
        property="pathnames"
        value="/WEB-INF/validator-rules.xml,/WEB-INF/validation.xml"/>
  </plug-in>
</struts-config>








































<form action="/InputSubmit" name="frmLogin" method="POST" >


<action-mappings>
            <!-- Default "Welcome" action -->
            <!-- Forwards to Welcome.jsp -->
        <action
            path="/InputSubmit"
            type="fjs.cs.coreservlets.T001">
        </action>
       
       </action-mappings> 





create database baitap
create table KHACHHANG (
	MAKH char(4),
	HOTEN varchar(40),
	DCHI varchar(50),
	SODT varchar(50),
	NGSINH smalldatetime,
	NGDK smalldatetime,
	DOANHSO money
)
select * from KHACHHANG
INSERT INTO KHACHHANG(MAKH, HOTEN, DCHI, SODT, NGSINH, NGDK, DOANHSO) 
VALUES
('KH01', 'Nguyen Van A', '731 Tran Hung Dao, Q5 HCM', '08823451', '1960-10-22', '2006-07-22', 13060000),
('KH02', 'Tran Ngoc Han', '23/05 Nguyen Trai Q5 HCM', '0908256478', '1974-04-03', '2006-07-30', 280000);

('KH01','Nguyen Van A','731 Tran Hung Dao, Q5 HCM','08823451','22/10/1960','22/07/2006','13.060.000'),
('KH01','Nguyen Van A','731 Tran Hung Dao, Q5 HCM','08823451','22/10/1960','22/07/2006','13.060.000'),
('KH01','Nguyen Van A','731 Tran Hung Dao, Q5 HCM','08823451','22/10/1960','22/07/2006','13.060.000'),

create table NHANVIEN (
	MANV char(4),
	HOTEN varchar(40),
	SODT varchar(20),
	NGVL smalldatetime,
)
select * from NHANVIEN

INSERT INTO NHANVIEN(MANV, HOTEN, SODT, NGVL) 
VALUES ('NV01', 'Nguyen Nhu Nhut', '0927345678','2006-04-03'),
('NV02', 'Le Thi Phi Yen', '0927345678','2006-04-21'),
('NV03', 'Nguyen Van B', '0927345678','2006-04-27'),
('NV04', 'Ngo Thanh Tuan', '0927345678','2006-04-24'),
('NV05', 'Nguyen Thi Truc Thanh', '0927345678','2006-07-20');


create table SANPHAM (
	MASP char(4),
	TENSP varchar(40),
	DVT varchar(20),
	NUOCSX varchar(40),
	GIA money
)
select * from SANPHAM


INSERT INTO SANPHAM(MASP, TENSP, DVT, NUOCSX, GIA) 
VALUES ('BC01', 'But Chi', 'Cay','SingGaPore', 3000),
('BC02', 'But Chi', 'Cay','SingGaPore', 5000),
('BC03', 'But Chi', 'Cay','SingGaPore', 5000),
('BC04', 'But Chi', 'Cay','SingGaPore', 6000),
('TV01', 'Tap 100  giay mong', 'Quyen','Trung Quoc', 7000);



create table HOADON(
	SOHD int,
	NGHD smalldatetime,
	MAKH char(4),
	MANV char(4),
	TRIGIA money
)

INSERT INTO HOADON(SOHD, NGHD, MAKH, MANV, TRIGIA) 
VALUES ('1001', '2006-03-23', 'KH01','NV01', 32000),
('1002', '2006-03-12', 'KH01','NV02', 52000),
('1003', '2006-03-21', 'KH02','NV01', 52000),
('1004', '2006-03-22', 'KH01','NV01', 16000),
('1005', '2006-03-24', 'KH01','NV01', 73000);

create table CTHD(
	SOHD int,
	MASP char(4),
	SL int
)

INSERT INTO CTHD(SOHD, MASP, SL) 
VALUES ('1001', 'TV02', 10),
('1001', 'TV02', 10),
('1002', 'ST01', 3),
('1003', 'TV02', 4),
('1004', 'TV02', 5);

alter table SANPHAM add GHICHU varchar(20)
alter table KHACHHANG  add LOAIKH  tinyint
alter table SANPHAM alter column GHICHU varchar(100)
-- 1.5
alter table SANPHAM drop column GHICHU
