<%
    Object listDataSearch = request.getAttribute("listDataSearch");
    Object ListA = request.getAttribute("ListA");
%>

<%-- Nếu không có dữ liệu ở cả hai list --%>
<% if (listDataSearch == null && ListA == null) { %>
    <button type="button" class="search-container__delete" onclick="deleteRows()">Delete</button>
<% } %>

<%-- Nếu chỉ có ListA có dữ liệu --%>
<% if (ListA != null && listDataSearch == null) { %>
    <button type="button" class="search-container__delete" onclick="deleteRows()">Delete</button>
<% } %>

<%-- Nếu chỉ có listDataSearch có dữ liệu --%>
<% if (listDataSearch != null) { %>
    <%-- Nếu ListA không có dữ liệu --%>
    <% if (ListA == null) { %>
        <button type="submit" disabled style="pointer-events: none;" onclick="deleteRows(e)" class="search-container__delete">Delete</button>
    <% } %>
    <%-- Nếu ListA có dữ liệu --%>
    <% if (ListA != null) { %>
        <button type="button" class="search-container__delete" onclick="deleteRows()">Delete</button>
    <% } %>
<% } %>

<%-- Nếu chỉ có ListA có dữ liệu và không có listDataSearch --%>
<% if (ListA != null && listDataSearch == null) { %>
    <button type="button" class="search-container__delete" onclick="deleteRows()">Delete</button>
<% } %>







localStorage cannot be resolved


Cookie[] cookies = request.getCookies();
String name = null;
if (cookies != null) {
    for (Cookie cookie : cookies) {
        if (cookie.getName().equals("namewellcom")) {
            name = cookie.getValue();
            break;
        }
    }
}
if (name != null) {
%>
    <div class="search-container__logo--wellcomname"><%= " " + name %></div>
<%
}





if (result != null) {
    Cookie cookie = new Cookie("namewellcom", getSession.getUSERNAME());
    cookie.setMaxAge(3600); //số giây cookie tồn tại trên trình duyệt
    resp.addCookie(cookie);
    resp.sendRedirect("/CustomerSystem/T002");
}




if (result != null) {
    localStorage.setItem("psnCd", result.getPSN_CD());
    localStorage.setItem("namewellcom", getSession.getUSERNAME());  
    resp.sendRedirect("/CustomerSystem/T002");
}




if (result != null) {
				HttpSession session=req.getSession(true); 
				session.setAttribute("psnCd", result.getPSN_CD());
		        session.setAttribute("namewellcom",getSession.getUSERNAME());  
		        resp.sendRedirect("/CustomerSystem/T002");
			}
			
			
			
			<% if (session.getAttribute("namewellcom") != null) {
				     String name = (String) session.getAttribute("namewellcom");
				%>
				     <div class= "search-container__logo--wellcomname"><%= " " + name %></div>
				<% } %>


public List<T002Dto> getDataSearch(String name, String sex, String birthdayFrom, String birthdayTo) {
	    List<T002Dto> listSearch = new ArrayList<T002Dto>();
	    Connection conn = null;
	    try {
	        String query = "SELECT CUSTOMER_ID, CUSTOMER_NAME, CASE WHEN SEX = 0 THEN 'Male' else 'Female' end as SEX, BIRTHDAY, ADDRESS \r\n"
	                + "FROM MSTCUSTOMER"
	                + "WHERE DELETE_YMD IS NULL AND 1=1";
	        if (name != null && !name.isEmpty()) {
	            query += "AND CUSTOMER_NAME LIKE ? ";
	        }
	        if (sex != null && !sex.isEmpty()) {
	            query += "AND SEX = ? ";
	        }
	        if (birthdayFrom != null && !birthdayFrom.isEmpty()) {
	            query += "AND BIRTHDAY >= ? ";
	        }
	        if (birthdayTo != null && !birthdayTo.isEmpty()) {
	            query += "AND BIRTHDAY <= ? ";
	        }
	        query += "ORDER BY CUSTOMER_ID;\r\n";
	       
	        conn =  new DBConnection().getConnection();
	        PreparedStatement ps = conn.prepareStatement(query);
	        int parameterIndex = 1;
	        if (name != null && !name.isEmpty()) {
	            ps.setString(parameterIndex++, "%" + name + "%");
	        }
	        if (sex != null && !sex.isEmpty()) {
	            ps.setString(parameterIndex++, sex);
	        }
	        if (birthdayFrom != null && !birthdayFrom.isEmpty()) {
	            ps.setString(parameterIndex++, birthdayFrom);
	        }
	        if (birthdayTo != null && !birthdayTo.isEmpty()) {
	            ps.setString(parameterIndex++, birthdayTo);
	        }
	        ResultSet rs = ps.executeQuery();
	        while(rs.next()) {
	            T002Dto dataT002Search = new T002Dto();
	            dataT002Search.setCUSTOMER_ID(rs.getString(1));
	            dataT002Search.setCUSTOMER_NAME(rs.getString(2));
	            dataT002Search.setSEX(rs.getString(3));
	            dataT002Search.setBIRTHDAY(rs.getString(4));
	            dataT002Search.setADDRESS(rs.getString(5));
	            listSearch.add(dataT002Search);
	        }
	        conn.close();
	    } catch (Exception e) {
	        e.printStackTrace();
	    }
	    return listSearch;
	}


Incorrect syntax near the keyword 'IS'.


+ "WHERE DELETE_YMD IS NULL "
                + "AND 1=1 ";




public List<T002Dto> getDataSearch(String name, String sex, String birthdayFrom, String birthdayTo) {
	    List<T002Dto> listSearch = new ArrayList<T002Dto>();
	    Connection conn = null;
	    try {
	        String query = "SELECT CUSTOMER_ID, CUSTOMER_NAME, CASE WHEN SEX = 0 THEN 'Male' else 'Female' end as SEX, BIRTHDAY, ADDRESS \r\n"
	                + "FROM MSTCUSTOMER\r\n"
	                + "WHERE 1=1";
	        if (name != null && !name.isEmpty()) {
	            query += "AND CUSTOMER_NAME LIKE ? ";
	        }
	        if (sex != null && !sex.isEmpty()) {
	            query += "AND SEX = ? ";
	        }
	        if (birthdayFrom != null && !birthdayFrom.isEmpty()) {
	            query += "AND BIRTHDAY >= ? ";
	        }
	        if (birthdayTo != null && !birthdayTo.isEmpty()) {
	            query += "AND BIRTHDAY <= ? ";
	        }
	        query += "ORDER BY CUSTOMER_ID;\r\n";
	       
	        conn =  new DBConnection().getConnection();
	        PreparedStatement ps = conn.prepareStatement(query);
	        int parameterIndex = 1;
	        if (name != null && !name.isEmpty()) {
	            ps.setString(parameterIndex++, "%" + name + "%");
	        }
	        if (sex != null && !sex.isEmpty()) {
	            ps.setString(parameterIndex++, sex);
	        }
	        if (birthdayFrom != null && !birthdayFrom.isEmpty()) {
	            ps.setString(parameterIndex++, birthdayFrom);
	        }
	        if (birthdayTo != null && !birthdayTo.isEmpty()) {
	            ps.setString(parameterIndex++, birthdayTo);
	        }
	        ResultSet rs = ps.executeQuery();
	        while(rs.next()) {
	            T002Dto dataT002Search = new T002Dto();
	            dataT002Search.setCUSTOMER_ID(rs.getString(1));
	            dataT002Search.setCUSTOMER_NAME(rs.getString(2));
	            dataT002Search.setSEX(rs.getString(3));
	            dataT002Search.setBIRTHDAY(rs.getString(4));
	            dataT002Search.setADDRESS(rs.getString(5));
	            listSearch.add(dataT002Search);
	        }
	        conn.close();
	    } catch (Exception e) {
	        e.printStackTrace();
	    }
	    return listSearch;
	}
	
	
	
	, DELETE_YMD IS NULL 



























SELECT CUSTOMER_ID, CUSTOMER_NAME,CASE WHEN SEX = 0 THEN 'Male' ELSE 'Female' END AS SEX,BIRTHDAY, ADDRESS FROM MSTCUSTOMER WHERE DELETE_YMD IS NULL ORDER BY CUSTOMER_ID OFFSET 30 ROWS FETCH NEXT 15 ROWS ONLY





function deleteRows() {
  var checkboxes = document.querySelectorAll('input[type="checkbox"]:checked');
  var selectedValues = [];
  for (var i = 0; i < checkboxes.length; i++) {
    selectedValues.push(checkboxes[i].value);
  }
  if (selectedValues.length === 0) {
    alert('<%=messageCheckNot%>');
    var confirmed = false;
    while (!confirmed) {
      confirmed = confirm("Are you sure you want to cancel?");
    }
    return false; // cancel the action and stay on the current page
  } else {
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
        console.log(this.responseText);
      }
    };
    xhttp.open("POST", "/CustomerSystem/T002", true);
    xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    xhttp.send("selectedValues=" + JSON.stringify(selectedValues));
  }
}





function deleteRows() {
  var checkboxes = document.querySelectorAll('input[type="checkbox"]:checked');
  var selectedValues = [];
  for (var i = 0; i < checkboxes.length; i++) {
    selectedValues.push(checkboxes[i].value);
  }
  if (selectedValues.length === 0) {
    var urlParams = new URLSearchParams(window.location.search);
    var indexParam = urlParams.get('index');
    alert('<%=messageCheckNot%>');
    window.history.pushState({}, "", window.location.pathname + "?index=" + indexParam);
    return false; // cancel the action and stay on the current page
  } else {
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
        console.log(this.responseText);
      }
    };
    xhttp.open("POST", "/CustomerSystem/T002", true);
    xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    xhttp.send("selectedValues=" + JSON.stringify(selectedValues));
  }
}








function deleteRows() {
	var checkboxes = document.querySelectorAll('input[type="checkbox"]:checked');
	var selectedValues = [];
	for (var i = 0; i < checkboxes.length; i++) {
	  selectedValues.push(checkboxes[i].value);
	}
	if (selectedValues == "") {
		alert('<%=messageCheckNot%>');
		var urlParams = new URLSearchParams(window.location.search);
		var indexParam = urlParams.get('index');
		window.history.pushState({}, "", window.location.pathname + "?index=" + indexParam);
		return false;
	}
	else {
		var xhttp = new XMLHttpRequest();
		xhttp.onreadystatechange = function() {
		  if (this.readyState == 4 && this.status == 200) {
		    console.log(this.responseText);
		  }
		};
		xhttp.open("POST", "/CustomerSystem/T002", true);
		xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
		xhttp.send("selectedValues=" + JSON.stringify(selectedValues));
	}
} da



var urlParams = new URLSearchParams(window.location.search);
  var indexParam = urlParams.get('index');
  window.history.pushState({}, "", window.location.pathname + "?index=" + indexParam);



http://localhost:8080/CustomerSystem/T002?index=2


 window.history.pushState({}, "", window.location.href);



/**
 * @(#)T002.java 16-00 2023/02/22
 *
 * Copyright(C) 2023 by TranVanToi  LTV
 *
 * Last_Update 2023/02/22.
 * Version 1.00.
 */

package fjs.cs.action;


import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * T002
 * 
 * @version 1.00a
 * @since 1.00
 * @author toi_tv_ttv
 * 
 */
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.sun.org.apache.bcel.internal.generic.RETURN;

import fjs.cs.common.Constants;
import fjs.cs.dao.T001Dao;
import fjs.cs.dao.T002Dao;
import fjs.cs.dto.T001Dto;
import fjs.cs.dto.T002Dto;


public class T002 extends HttpServlet {
	private static final long serialVersionUID = 1L;
	/**
	 * Init man hinh
	 * 
	 * @param HttpServletRequest  req
	 * @param HttpServletResponse resp
	 * @return RequestDispatcher
	 * @throws ServletException, IOException
	 * @since 1.00
	 */



	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String indexPage = request.getParameter("index");
		if (indexPage == null) {
			indexPage = "1";
		}
		
		String pages = request.getParameter("page");
		if (pages == null) {
			pages= "1";
		}
		
		int page = Integer.parseInt(pages);
		HttpSession session = request.getSession();
		session.setAttribute("indexsession", page);
		
		int index = Integer.parseInt(indexPage);
		request.setAttribute("tag", index);
		T002Dao dao = new T002Dao();
		
		//get data
		List<T002Dto> list = null;
		int count;
		try {
			list = dao.getData();
			request.setAttribute("listData", list);
			count = dao.getDataPage();
			int endpage = count/15;
			if (count % 15 != 0) {
				endpage++;
			}
			List<T002Dto> listPage = dao.pagingData(index);
			request.setAttribute("ListA", listPage);
			request.setAttribute("endP", endpage);
			request.getRequestDispatcher(Constants.T002_SEARCH);
			RequestDispatcher myRD = null;
			// Hien thi man hinh Search
			myRD = request.getRequestDispatcher(Constants.T002_SEARCH);
			myRD.forward(request, response);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * Event man hinh
	 * 
	 * @param HttpServletRequest  request
	 * @param HttpServletResponse response
	 * @return RequestDispatcher
	 * @throws ServletException, IOException
	 * @since 1.00
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html");
		try {
			String name = request.getParameter("txtCustomerName");
			String sex = request.getParameter("browser");
			String birthdayFrom = request.getParameter("txtBirthdayFromName");
			String birthdayTo = request.getParameter("txtBirthdayToName");
			validateDates(request, response, birthdayFrom, birthdayTo);
			deleteData(request, response);
			
			String page = request.getParameter("pagepage");
	        HttpSession session = request.getSession();

	        if (page != null && !page.isEmpty()) {
	            String sex1 = (String) session.getAttribute("sex");
	            String birthdayFrom1 = (String) session.getAttribute("birthdayFrom");
	            String birthdayTo1 = (String) session.getAttribute("birthdayTo");
	            processSearch(request, response, name, sex1, birthdayFrom1, birthdayTo1, page);
	            return;
	        } else {
	            page = "1";
	            request.setAttribute("nameSearch", name);
	            request.setAttribute("sexSearch", sex);
	            request.setAttribute("birthdayFromSearch", birthdayFrom);
	            request.setAttribute("birthdayToSearch", birthdayTo);
	            processSearch(request, response, name, sex, birthdayFrom, birthdayTo, page);
	            session.setAttribute("sex", sex);
	            session.setAttribute("birthdayFrom", birthdayFrom);
	            session.setAttribute("birthdayTo", birthdayTo);
	            return;
	        }
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private void processSearch(HttpServletRequest request, HttpServletResponse response, String name, String sex, String birthdayFrom, String birthdayTo, String page) throws ServletException, IOException {
	    T002Dao daoSearch = new T002Dao();
	    List<T002Dto> resultSearch = daoSearch.getDataSearch(name, sex, birthdayFrom, birthdayTo);
	    int recordsPerPage = 15;
	    int startIndex = (Integer.parseInt(page) - 1) * recordsPerPage;
	    int endIndex = startIndex + recordsPerPage;
	    int totalRecords = resultSearch.size();
	    int totalPages = (int) Math.ceil((double) totalRecords / recordsPerPage);
	    List<T002Dto> resultPaginated = resultSearch.subList(startIndex, Math.min(endIndex, totalRecords));
	    request.setAttribute("listDataSearch", resultPaginated);
	    request.setAttribute("currentPage", page);
	    request.setAttribute("recordsPerPage", recordsPerPage);
	    request.setAttribute("totalRecords", totalRecords);
	    request.setAttribute("totalPages", totalPages);
	    RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
	    rd.forward(request, response);
	}
	
	private void deleteData(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
	    T002Dao daoSearch = new T002Dao();
	    String[] ids = request.getParameterValues("selectedValues");
	    if (ids == null) {
	    	return;
	    }
	    if (ids != null && ids.length > 0) {
	        String idList = String.join(",", ids);
	        idList = idList.replace("[\"", "").replace("\"]", "");
	        String result = idList.replaceAll("[^\\d,]", "").replace("\"", "");
	        String[] result2 = result.split(",");
	        if (result2.length == 16) {
	            String[] result3 = Arrays.copyOfRange(result2, 1, result2.length);
	            daoSearch.deleteData(result3);
	        } else {
	            for (int i = 0; i < result2.length; i++) {
	                if (result2.length == 16) {
	                    daoSearch.deleteData(result2);
	                    return;
	                }
	                daoSearch.deleteData(result2);
	                
	                return;
	            }
	        }
	        response.setContentType("application/json");
	        response.setCharacterEncoding("UTF-8");
	        response.getWriter().write("{\"result\": \"success\"}");
	       
	    }
	}
	
	private void validateDates(HttpServletRequest request, HttpServletResponse response, String birthdayFrom, String birthdayTo) throws ServletException, IOException {
	    if (birthdayFrom != null && !birthdayFrom.isEmpty() && !isValidDate(birthdayFrom)) {
	        String messagebirthdayfrom = Constants.MESSAGE_ERROR_FROM;
	        request.setAttribute("dataFrom", birthdayFrom);
	        request.setAttribute("messageFrom", messagebirthdayfrom);
	        RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
	        rd.forward(request, response);
	        return;
	    }
	    if (birthdayTo != null && !birthdayTo.isEmpty() && !isValidDate(birthdayTo)) {
	        String messagebirthTo = Constants.MESSAGE_ERROR_TO;
	        request.setAttribute("dataTo", birthdayTo);
	        request.setAttribute("messageTo", messagebirthTo);
	        RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
	        rd.forward(request, response);
	        return;
	    }
	    if (birthdayFrom != null && birthdayTo != null && !birthdayFrom.isEmpty() && !birthdayTo.isEmpty()) {
	        request.setAttribute("birthDayFromFrom", birthdayFrom);
	        request.setAttribute("birthDayToTo", birthdayTo);
	        if (isValidDate(birthdayFrom) && isValidDate(birthdayTo)) {
	            String dayFrom = birthdayFrom.replaceAll("/", "");
	            String dayTo = birthdayTo.replaceAll("/", "");
	            if (Integer.parseInt(dayTo) < Integer.parseInt(dayFrom)) {
	                String messageFromTo = Constants.MESSAGE_ERROR_FROM_BIGGER_TO;
	                request.setAttribute("errorFromTo", messageFromTo);
	                RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
	                rd.forward(request, response);
	                return;
	            }
	        }
	    }
	}
	
	private boolean isValidDate(String txtDate) {
	    String rxDatePattern = "^(\\d{4})(\\/|-)(\\d{1,2})(\\/|-)(\\d{1,2})$";
	    Pattern pattern = Pattern.compile(rxDatePattern);
	    Matcher matcher = pattern.matcher(txtDate);
	    if (!matcher.matches()) {
	        return false;
	    }
	    int dtMonth = Integer.parseInt(matcher.group(3));
	    int dtDay = Integer.parseInt(matcher.group(5));
	    int dtYear = Integer.parseInt(matcher.group(1));
	    if (dtMonth < 1 || dtMonth > 12) {
	        return false;
	    } else if (dtDay < 1 || dtDay > 31) {
	        return false;
	    } else if ((dtMonth == 4 || dtMonth == 6 || dtMonth == 9 || dtMonth == 11) && dtDay == 31) {
	        return false;
	    } else if (dtMonth == 2) {
	        boolean isLeap = (dtYear % 4 == 0 && (dtYear % 100 != 0 || dtYear % 400 == 0));
	        if (dtDay > 29 || (dtDay == 29 && !isLeap)) {
	            return false;
	        }
	    }
	    return true;
	}
}



package fjs.cs.action;

import java.io.IOException;
import java.sql.SQLException;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import fjs.cs.common.Constants;
import fjs.cs.dao.T003Dao;
import fjs.cs.dto.T003Dto;

public class T003 extends HttpServlet {
	private static final long serialVersionUID = 1L;
	/**
	 * Init man hinh
	 * 
	 * @param HttpServletRequest  req
	 * @param HttpServletResponse resp
	 * @return RequestDispatcher
	 * @throws ServletException, IOException
	 * @since 1.00
	 */
	
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		RequestDispatcher myRD = null;
		String id = req.getParameter("id");
		if (id != null) {
			T003Dto dto;
			try {
				dto = T003Dao.getCustomerById(Integer.parseInt(id));
				req.setAttribute("dto", dto);
			} catch (NumberFormatException | SQLException e) {
				e.printStackTrace();
			}
		}
		// Hien thi man hinh Edit
		myRD = req.getRequestDispatcher(Constants.T003_EDIT);
		myRD.forward(req, resp);
	}
	
	/**
	 * Event man hinh
	 * 
	 * @param HttpServletRequest  req
	 * @param HttpServletResponse resp
	 * @return RequestDispatcher
	 * @throws ServletException, IOException
	 * @since 1.00
	 */
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		try {
			String id = req.getParameter("userId");
			String name = req.getParameter("txtCustomerName");
			String sex = req.getParameter("cboSex");
			String birthday = req.getParameter("txtCustomerBirthday");
			String email = req.getParameter("txtCustomerEmail");
			String address = req.getParameter("txaAddress");
			
			
			if (!isValidDate(birthday)) {
				String messageErrBirthDay = Constants.MESSAGE_ERROR_BIRTHDAY;
				req.setAttribute("messageErrBirthDay", messageErrBirthDay);
				HttpSession session = req.getSession();
				session.setAttribute("nameUsser", name);
				session.setAttribute("sexUser", sex);
				session.setAttribute("birthdayUser", birthday);
				session.setAttribute("emailUser", email);
				session.setAttribute("addressUser", address);
				RequestDispatcher rd = req.getRequestDispatcher("/WEB-INF/jsp/T003.jsp");
				rd.forward(req, resp);
				return;
			}
			
			boolean isValidEmail = checkGmailEmail(email);
			if (!isValidEmail) {
				String messageErrEmail = Constants.MESSAGE_ERROR_FORMAT_EMAIL;
				req.setAttribute("messageErrEmail", messageErrEmail);
				RequestDispatcher rd = req.getRequestDispatcher("/WEB-INF/jsp/T003.jsp");
				rd.forward(req, resp);
				return;
			}
	        HttpSession session = req.getSession();
	        /**
	         * Ki盻ノ tra n蘯ｿu id mﾃ� cﾃｳ d盻ｯ li盻㎡ thﾃｬ lﾃ� update
	         * Ngoﾃ�i ra: id khﾃｴng cﾃｳ d盻ｯ li盻㎡ lﾃ� save
	         */
	        int status = 0;
	        T003Dao dao = new T003Dao();
	        if (id == "") {
	        	T003Dto dtosave = new T003Dto();
	        	dtosave.setCUSTOMER_NAME(name);
	        	dtosave.setSEX(sex);
	        	dtosave.setBIRTHDAY(birthday);
	        	dtosave.setEMAIL(email);
	        	dtosave.setADDRESS(address);
	            status = dao.save(dtosave, session);
	            
	        }else if (id != "") {	 
	        	T003Dto dto = new T003Dto();
		        dto.setCUSTOMER_ID(Integer.parseInt(id));
		        dto.setCUSTOMER_NAME(name);
		        dto.setSEX(sex);
		        dto.setBIRTHDAY(birthday);
		        dto.setEMAIL(email);
		        dto.setADDRESS(address);
	        	status = dao.update(dto, session);
	        	
	        }
	        if (status > 0) {
	            resp.sendRedirect("/CustomerSystem/T002");
	        }
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	private boolean checkGmailEmail(String txtEmail) {
	    String gmailRegex = "^[a-zA-Z0-9._%+-]+@gmail\\.com$";
	    Pattern pattern = Pattern.compile(gmailRegex);
	    Matcher matcher = pattern.matcher(txtEmail);
	    return matcher.matches();
	}
	
	private boolean isValidDate(String txtDate) {
	    String rxDatePattern = "^(\\d{4})(\\/|-)(\\d{1,2})(\\/|-)(\\d{1,2})$";
	    Pattern pattern = Pattern.compile(rxDatePattern);
	    Matcher matcher = pattern.matcher(txtDate);
	    if (!matcher.matches()) {
	        return false;
	    }
	    int dtMonth = Integer.parseInt(matcher.group(3));
	    int dtDay = Integer.parseInt(matcher.group(5));
	    int dtYear = Integer.parseInt(matcher.group(1));
	    if (dtMonth < 1 || dtMonth > 12) {
	        return false;
	    } else if (dtDay < 1 || dtDay > 31) {
	        return false;
	    } else if ((dtMonth == 4 || dtMonth == 6 || dtMonth == 9 || dtMonth == 11) && dtDay == 31) {
	        return false;
	    } else if (dtMonth == 2) {
	        boolean isLeap = (dtYear % 4 == 0 && (dtYear % 100 != 0 || dtYear % 400 == 0));
	        if (dtDay > 29 || (dtDay == 29 && !isLeap)) {
	            return false;
	        }
	    }
	    return true;
	}
}






<%@page import="java.awt.List"%>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<%@page import="fjs.cs.dao.T003Dao,fjs.cs.common.Constants"%>  
<%@ page import="javax.servlet.http.HttpServletResponse" %>
<title>Search - Training</title>
</head>
<style type="text/css">
  <%@include file="/WEB-INF/css/common.css"%>
</style>
<style type="text/css">
  <%@include file="/WEB-INF/css/T002.css"%>
</style>
<body>

<style type="text/jsp">
  <%@include file="/WEB-INF/include/header.jsp"%>
</style>

<div class = "search-container">
	<div class = "search-container__dan">
		<div class = "search-container__text search-container__text_text">
			Login > Search Customer
		</div>
	<div class = "search-container__context">
				<div class = "search-container__logo">
				Welcome<%= "   " %>
				<% if (session.getAttribute("name") != null) {
				     String name = (String) session.getAttribute("name");
				    
				%>
				     <div class= "search-container__logo--wellcomname"><%= " " + name %></div>
				<% } %>

				</div>
		
			<a href = "/CustomerSystem/T001" class = "search-container__logout search-container__text_text" onclick = "Logout() ">
    			Log Out
			</a>
	</div>
	
	<div class = "search-container__line"></div>
	
	
<form id = "form-Search" action ="/CustomerSystem/T002" method = "POST" >
	<div class = "search-container__handalSearch">
		<div class = "search-container__handalSearch--margin handalSearch-customerName">
			<div class = "handalSearch-customercommon handalSearch-customerName__text search-container__text_text">Customer Name</div>
			<%if (request.getAttribute("nameSearch") != null){ %>
				<input id = "txtCustomerName" name = "txtCustomerName" value ="<%=request.getAttribute("nameSearch")%>" maxLength = "50"/>
			<%} %>
			<%if (request.getAttribute("nameSearch") == null){ %>
				<input id = "txtCustomerName" name = "txtCustomerName" maxLength = "50"/>
			<%} %>
		</div>
		
		<%if (request.getAttribute("sexSearch") == null) { %>
		<div class = "search-container__handalSearch--margin handalSearch-customerSex">
			<div class = "handalSearch-customercommon handalSearch-customerSex__text search-container__text_text">Sex</div>
			<select name="browser" value = "1" id = "cboSex">
				<option value=""></option>
		      	<option value="0">Male</option>
		     	 <option value="1">Female</option>
			</select>
		</div>
		<%} %>
		<%if (request.getAttribute("sexSearch") != null) { %>
			<div class="search-container__handalSearch--margin handalSearch-customerSex">
			  <div class="handalSearch-customercommon handalSearch-customerSex__text search-container__text_text">Sex</div>
			  <select name="browser" id="cboSex">
			    <option value=""></option>
			    <option value="0" <% if(request.getAttribute("sexSearch")!=null && request.getAttribute("sexSearch").equals("0")){ %>selected<% } %>>Male</option>
			    <option value="1" <% if(request.getAttribute("sexSearch")!=null && request.getAttribute("sexSearch").equals("1")){ %>selected<% } %>>Female</option>
			  </select>
			</div>
		<%} %>
		
		<div class = "search-container__handalSearch--margin handalSearch-BirthdayFrom">
			<div class = "handalSearch-customercommon handalSearch-BirthdayFrom__text search-container__text_text">Birthday</div>
			
			
			<%if (request.getAttribute("dataFrom") != null) {%>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" value="<%=request.getAttribute("dataFrom")%>" name = "txtBirthdayFromName"  maxLength = "10"/>
			<%} %>
			
			<%if (request.getAttribute("birthdayFromSearch") != null){%>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" value="<%=request.getAttribute("birthdayFromSearch")%>" name = "txtBirthdayFromName"  maxLength = "10"/>
			<%} %>
			
			<%if (request.getAttribute("dataFrom") == null && request.getAttribute("birthDayFromFrom") == null && request.getAttribute("birthdayFromSearch") == null){%>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" name = "txtBirthdayFromName"  maxLength = "10"/>
			<%} %>
			
			<%if (request.getAttribute("birthDayFromFrom") != null){%>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" value="<%=request.getAttribute("birthDayFromFrom")%>" name = "txtBirthdayFromName"  maxLength = "10"/>
			<%} %>
			
			
			
			<lable class = "handalSearch-BirthdayFrom__ngangcach">～</lable>
			
			<%if (request.getAttribute("dataTo") != null) {%>
				<input id = "txtBirthdayTo" class = "txtCustomerValidateTO" value="<%=request.getAttribute("dataTo")%>" name = "txtBirthdayToName" maxLength = "10"/>
			<%} %>
			
			<%if (request.getAttribute("dataTo") == null && request.getAttribute("birthDayToTo") == null){%>
				<input id = "txtBirthdayTo" class = "txtCustomerValidateTO" name = "txtBirthdayToName" maxLength = "10"/>
			<%} %>
			
			<%if (request.getAttribute("birthDayToTo") != null){%>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" value="<%=request.getAttribute("birthDayToTo")%>" name = "txtBirthdayFromName"  maxLength = "10"/>
			<%} %>
		</div>
		
		<div class = "handalSearch-btnSearch">
			<button type = "submit" id = "btnSearch">Search</button>
		</div>
	</div>

	
	<div class = "search-container__btnContext--chuyenhuong">
		<div class = "search-container__btnContext--start">
		<%
		if (request.getAttribute("listDataSearch") == null) {
		%>
			<%
				if (request.getAttribute("ListA") == null) {
			%>
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
			<%
				}
			%>
			<%
				if (request.getAttribute("ListA") != null) {
			%>
				<c:if test="${tag == 1}">				
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
				</c:if>
				<c:if test="${tag > 1 }">	
					<button id = "btnFirst"><a href="/CustomerSystem/T002?index=<%=1 %>"><<</a></button>			
					<button id = "btnPrevious"><a href="/CustomerSystem/T002?index=${tag-1}"><</a></button>
				</c:if>
			<%
				}
			%>
			
			
			<lable class = "search-container__btnContext--textstart search-container__text_text">Previous</lable>
		</div>
		
		<div class = "search-container__btnContext--end">
			<lable class = "search-container__btnContext--textend search-container__text_text">Next</lable>
			<%
				if (request.getAttribute("ListA") == null) {
			%>
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			<%
				}
			%>
			
			<%
				if (request.getAttribute("ListA") != null) {
				int endP = (Integer) request.getAttribute("endP"); 
			%>
			<c:if test="${tag >= endP}">			
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			</c:if>
			<c:if test="${tag < endP}">			
				<button id = "btnNext" ><a href="/CustomerSystem/T002?index=${tag+1}">></a></button>
				<button id="btnPrevious"><a href="/CustomerSystem/T002?index=<%= endP %>">>></a></button>
			</c:if>		
			<%
				}
			%>
			
			<%} %>
			
			
			
			<%
				if (request.getAttribute("listDataSearch") != null) {
			%>
			<%
				if (request.getAttribute("listDataSearch") == null) {
			%>
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
			<%
				}
			%>
			<%
				if (request.getAttribute("listDataSearch") != null) {
			%>
				 <c:if test="${requestScope.currentPage == 1}">
		            <button id="btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
		            <button id="btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
		        </c:if>
				<c:if test="${requestScope.currentPage > 1 }">	
					<button id="btnFirst" class="withinput-search" type="submit" onclick="sendPostRequest(1)"><<</button>
           			<button id="btnPrevious" class="withinput-search" type="submit" onclick="sendPostRequest(${requestScope.currentPage - 1})"><</button>
           			<input name="pagepage" hidden value=""/>
				</c:if>
			<%
				}
			%>
			
			
			<lable class = "search-container__btnContext--textstart search-container__text_text">Previous</lable>
		</div>
		
		<div class = "search-container__btnContext--end">
			<lable class = "search-container__btnContext--textend search-container__text_text">Next</lable>
			<%
				if (request.getAttribute("listDataSearch") == null) {
			%>
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
				
			<%
				}
			%>
			
			<%
				if (request.getAttribute("listDataSearch") != null) {
				
			%>
			<c:if test="${requestScope.currentPage >= requestScope.totalPages}">			
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			</c:if>
			<c:if test="${requestScope.currentPage < requestScope.totalPages}">			
				<button id="btnNext" class="withinput-search" type="submit" onclick="sendPostRequest(${requestScope.currentPage + 1})">></button>
            	<button id="btnLast" class="withinput-search" type="submit" onclick="sendPostRequest(${requestScope.totalPages})">>></button>
            	<input name="pagepage" hidden value=""/>
			</c:if>		
			<%
				}
			%>
			<%} %>
		
		</div>
	</div>
	
	<table class = "search-container__table">
        <tr class = "search-container__table--tieude">
        	<th class = "searchtable-trcheck"><input type="checkbox" id = "checkAll" name="checkboxAll" value="" onclick = "checkBox(this)"></th>
            <th class = "searchtable-trid">Customer ID</th>
            <th class = "searchtable-trname">Customer Name</th>
            <th class = "searchtable-trsex">Sex</th>
            <th class = "searchtable-trbirthday">Birthday</th>
            <th class = "searchtable-traddress">Address</th>
        </tr>
<c:choose>
    <c:when test="${not empty listDataSearch}">
        <c:forEach items="${listDataSearch}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:when>
    <c:when test="${not empty ListA}">
        <c:forEach items="${ListA}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:when>
    <c:otherwise>
        <c:forEach items="${ListA}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:otherwise>
</c:choose>
    </table>
    <div class = "search-btn__form">
		<button class = "search-container__nav-btnAddNew">
			<a href="/CustomerSystem/T003" >Add new</a>
		</button>
    		<%
				if (request.getAttribute("ListA") != null || request.getAttribute("listDataSearch") != null) {
			%>
				<button type = "submit" class = "search-container__delete" onclick="deleteRows()" >Delete</button>
			<%
				}
			%>
			
			<%
				if (request.getAttribute("ListA") == null && request.getAttribute("listDataSearch") == null) {
			%>
			<button type = "submit" disabled style="pointer-events: none;" onclick="deleteRows()"class = "search-container__delete" >Delete</button>
			<%
				}
			%>
    </div>
	</form>
	</div>
	<footer class="footer">
		<div class="header-br"></div>
		<div class="footer-text__copyright">Copyright (c) 2000-2008
			FUJINET, All Rights Reserved.</div>
	</footer>
</div>
</div>
<%
	String messageCheckNot = Constants.CHECKED_NOT_ERROR;
%>
<script>
	<%@include file="/WEB-INF/javascript/T002.js"%>
</script>
</body>
</html>







<%@page import="java.awt.List"%>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  
<%@ page import="fjs.cs.dao.T003Dao,fjs.cs.common.Constants" %>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<style type="text/css">
  <%@include file="/WEB-INF/css/T001.css"%>
</style>
<style type="text/css">
  <%@include file="/WEB-INF/css/T003.css"%>
</style>
<style type="text/css">
  <%@include file="/WEB-INF/css/common.css"%>
</style>
<title>Edit - Training</title>
</head>
<body>
	<div id="main">
		<div class="header">
			<h3 class="header-text">Training</h3>
			<div class="header-br"></div>
		</div>
		<div class = "edit-container">
			<div class = "edit-container__header">
				<span class = "edit-container__headerText edit-container__headerText">Login > Search Customer > Edit Customer Info</span>
				<div class = "edit-container__wellcom">
				<div class = "edit-container__wellcomLeft edit-container__headerText">
				Welcome
				<%
				if (session.getAttribute("name") != null) {%>
					<div class = "edit-container__wellcomname"><%=session.getAttribute("name") %></div>
				<%} %>
				</div>
					<div class = "edit-container__wellcomRight edit-container__headerText">
						<a href = "/CustomerSystem/T001" onclick = "Logout() ">Log Out</a>
					</div>
				</div>
			<c:if test = "${empty dto.CUSTOMER_ID}">
				<div class = "line-br">Add New</div>
			</c:if>
			<c:if test = "${not empty dto.CUSTOMER_ID}">
				<div class = "line-br">Edit</div>
			</c:if>	
		</div>
	<form action = "/CustomerSystem/T003" method = "POST">
		<div class = "edit-container__content">
			<div class = "edit-container__content--error"></div>
			
			<div class = "edit-container__content-Id">
				<div class = "edit-container__content-IdText edit-container__headerText">Customser Id</div>
				<lable for="userId" class = "edit-container__content-IdLable edit-container__headerText" id = "lblCustomerID" name = "lblCustomerID">${dto.CUSTOMER_ID}</lable>
				<input type="text" hidden id="userId" name="userId" value="${dto.CUSTOMER_ID}">
			</div>
			
			<div class = "edit-container__content-Name">
				<lable class = "edit-container__contentName-input edit-container__headerText">Customser Name</lable>
				<%if (request.getAttribute("nameUser") == null) {%>	
				<input id = "txtCustomerName" type="text" class = "form-with__input" name = "txtCustomerName" maxlength="50" value = "${dto.CUSTOMER_NAME}"/>
				<%} %>
				<%if (request.getAttribute("nameUser") != null) { %>
					<input id = "txtCustomerName" type="text" class = "form-with__input" name = "txtCustomerName" maxlength="50" value = "<%=request.getAttribute("nameUser")%>"/>
				<%} %>
			</div>
			
			<div class = "edit-container__content-Sex edit-container__btnContent-margin">
				<div class = "edit-container__content-Sexlable edit-container__headerText">Sex</div>
				<select  id="cboSex" name = "cboSex">
				  <option class = "cbooption" value=""></option>
				  <option class = "cbooption" value="0" ${dto.SEX == '0' ? 'selected' : ''}>Male</option>
				  <option class = "cbooption" value="1" ${dto.SEX == '1' ? 'selected' : ''}>Female</option>
				</select>
			</div>
			
			<div class = "edit-container__content-Birthday edit-container__btnContent-margin">
				<lable class = "edit-container__contentBirthday-input edit-container__headerText">Birthday</lable>
				<%if (request.getAttribute("birtdayUser") == null) { %>
					<input id = "txtCustomerBirthday"  class = "form-with__input" name = "txtCustomerBirthday" maxlenght ="10" value= "${dto.BIRTHDAY }"/>
				<%} %>
				<%if (request.getAttribute("birtdayUser") != null) { %>
					<input id = "txtCustomerBirthday"  class = "form-with__input" name = "txtCustomerBirthday" maxlenght ="10" value= "<%=request.getAttribute("birtdayUser")%>"/>
				<%} %>
			</div>
			
			<div class = "edit-container__content-Email edit-container__btnContent-margin">
				<lable class = "edit-container__contentEmail-input edit-container__headerText">Email</lable>
				
				<%if (request.getAttribute("emailUser") == null) { %>
				<input id = "txtCustomerEmail" type="text" class = "form-with__input" name ="txtCustomerEmail" maxlenght ="40" value="${dto.EMAIL }"/>
				<%} %>
				<%if (request.getAttribute("emailUser") != null) { %>
					<input id = "txtCustomerEmail" type="text" class = "form-with__input" name ="txtCustomerEmail" maxlenght ="40" value="<%=request.getAttribute("emailUser")%>"/>
				<%} %>
			</div>
			
			<div class = "edit-container__content-Address edit-container__btnContent-margin">
				<div class = "test-aline__editAddress">				
					<lable class = "edit-container__contentAddress-input edit-container__headerText">Address</lable>
				</div>
				<%if (request.getAttribute("addressUser") == null) { %>
				<textarea id="txaAddress" type="text" maxlength="256"  name = "txaAddress">${dto.ADDRESS}</textarea>
				<%} %>
				
				<%if (request.getAttribute("addressUser") != null) {%>
					<textarea id="txaAddress" type="text" maxlength="256"  name = "txaAddress"><%=request.getAttribute("addressUser") %></textarea>
				<%} %>
			
			</div>
			
			<div class = "edit-container__btnContent">
				<button type = "submit" class = "edit-container__btnContent-Save">Save</button>
				<button  id = "btnClearEdit" class = "edit-container__btnContent-Clear">Clear</button>
			</div>
		</div>
	</form>
		</div>
		<footer class="footer">
			<div class="header-br"></div>
			<div class="footer-text__copyright">Copyright (c) 2000-2008
			FUJINET, All Rights Reserved.</div>
		</footer>
	</div>
	<script>
		<%@include file ="/WEB-INF/javascript/T003.js"%>
	</script>
	
</body>
</html>
