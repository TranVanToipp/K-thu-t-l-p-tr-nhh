private boolean checkGmailEmail(String txtEmail) {
    String gmailRegex = "^[a-zA-Z0-9._%+-]+@gmail\\.com$";
    Pattern pattern = Pattern.compile(gmailRegex);
    Matcher matcher = pattern.matcher(txtEmail);
    return matcher.matches();
}


String email = "example@gmail.com";
boolean isValid = checkGmailEmail(email);
if (isValid) {
    System.out.println("Địa chỉ email hợp lệ");
} else {
    System.out.println("Địa chỉ email không hợp lệ");
}


















25.597402597402596



/**
 * @(#)T002.java 16-00 2023/02/22
 *
 * Copyright(C) 2023 by TranVanToi  LTV
 *
 * Last_Update 2023/02/22.
 * Version 1.00.
 */

package fjs.cs.action;


import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * T002
 * 
 * @version 1.00
 * @since 1.00
 * @author toi_tv_ttv
 * 
 */
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.sun.org.apache.bcel.internal.generic.RETURN;

import fjs.cs.common.Constants;
import fjs.cs.dao.T001Dao;
import fjs.cs.dao.T002Dao;
import fjs.cs.dto.T001Dto;
import fjs.cs.dto.T002Dto;


public class T002 extends HttpServlet {
	private static final long serialVersionUID = 1L;
	/**
	 * Init man hinh
	 * 
	 * @param HttpServletRequest  req
	 * @param HttpServletResponse resp
	 * @return RequestDispatcher
	 * @throws ServletException, IOException
	 * @since 1.00
	 */



	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String indexPage = request.getParameter("index");
		if (indexPage == null) {
			indexPage = "1";
		}
		
		String pages = request.getParameter("page");
		if (pages == null) {
			pages= "1";
		}
		
		int page = Integer.parseInt(pages);
		HttpSession session = request.getSession();
		session.setAttribute("indexsession", page);
		
		int index = Integer.parseInt(indexPage);
		request.setAttribute("tag", index);
		
		
		
		
		T002Dao dao = new T002Dao();
		
		//get data
		List<T002Dto> list = null;
		int count;
		try {
			list = dao.getData();
			request.setAttribute("listData", list);
			count = dao.getDataPage();
			int endpage = count/15;
			if (count % 15 != 0) {
				endpage++;
			}
			List<T002Dto> listPage = dao.pagingData(index);
			request.setAttribute("ListA", listPage);
			request.setAttribute("endP", endpage);
			request.getRequestDispatcher(Constants.T002_SEARCH);
			RequestDispatcher myRD = null;
			// Hien thi man hinh Search
			myRD = request.getRequestDispatcher(Constants.T002_SEARCH);
			myRD.forward(request, response);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * Event man hinh
	 * 
	 * @param HttpServletRequest  request
	 * @param HttpServletResponse response
	 * @return RequestDispatcher
	 * @throws ServletException, IOException
	 * @since 1.00
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType("text/html");
		try {
			String name = request.getParameter("txtCustomerName");
			String sex = request.getParameter("browser");
			String birthdayFrom = request.getParameter("txtBirthdayFromName");
			String birthdayTo = request.getParameter("txtBirthdayToName");
				
			if (birthdayFrom != "" && birthdayFrom != null) {
				if (!isValidDate(birthdayFrom)) {
					String messagebirthdayfrom = Constants.MESSAGE_ERROR_FROM;
					String dataFrom = birthdayFrom;
					request.setAttribute("dataFrom", dataFrom);
					request.setAttribute("messageFrom", messagebirthdayfrom);
					RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
					rd.forward(request, response);
					return;
				}
			}
				
			if (birthdayTo != "" && birthdayTo != null) {
				if (!isValidDate(birthdayTo)) {
					String messagebirthTo = Constants.MESSAGE_ERROR_TO;
					String dataTo = birthdayTo;
					request.setAttribute("dataTo", dataTo);
					request.setAttribute("messageTo", messagebirthTo);
					RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
					rd.forward(request, response);
					return;
				}
			}
			
			if (birthdayFrom != "" && birthdayTo != "" && birthdayFrom != null && birthdayTo != null) {
				String dataFrom = birthdayFrom;
				String dataTo = birthdayTo;
				if (isValidDate(birthdayFrom) && isValidDate(birthdayTo)) {
					String dayFrom = birthdayFrom.replaceAll("/", "");
					String dayTo = birthdayTo.replaceAll("/", "");
					
					if (Integer.parseInt(dayTo) < Integer.parseInt(dayFrom)) {
						String messageFromTo = Constants.MESSAGE_ERROR_FROM_BIGGER_TO;
						request.setAttribute("errorFromTo", messageFromTo);
						request.setAttribute("dataFrom", dataFrom);
						request.setAttribute("dataTo", dataTo);
						RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
						rd.forward(request, response);
						return;
					}
				}
			}
			
			
			
			T002Dao daoSearch = new T002Dao();
			String[] ids = request.getParameterValues("selectedValues");
			if (ids != null && ids.length > 0) {
			    String idList = String.join(",", ids);
			    idList = idList.replace("[\"", "").replace("\"]", "");
			    String result = idList.replaceAll("[^\\d,]", "").replace("\"", "");
			    String[] result2 = result.split(",");
			    if (result2.length == 16) {
			    	String[] result3 = Arrays.copyOfRange(result2, 1, result2.length);
		    		daoSearch.deleteData(result3);
			    }else {
			    	for (int i = 0;i< result2.length; i++) {
				    	if (result2.length == 16) {
				    		daoSearch.deleteData(result2);
				    	}
				    	daoSearch.deleteData(result2);
				    }
			    }
			}
			String page = request.getParameter("pagepage");
			if (page != null) {
				HttpSession session = request.getSession();
				//String name1 =(String) session.getAttribute("sex");
				String sex1 =(String) session.getAttribute("sex");
				String birthdayFrom1 =(String) session.getAttribute("birthdayFrom");
				String birthdayTo1 =(String) session.getAttribute("birthdayTo");
				List<T002Dto> resultSearch1 = daoSearch.getDataSearch(name, sex1, birthdayFrom1, birthdayTo1);
				
				//String page = request.getParameter("pagepage");
				int recordsPerPage = 15; // số phần tử hiển thị trên mỗi trang
				int startIndex = (Integer.parseInt(page)- 1) * recordsPerPage; // vị trí bắt đầu của trang hiện tại
				int endIndex = startIndex + recordsPerPage; // vị trí kết thúc của trang hiện tại
				int totalRecords = resultSearch1.size(); // tổng số phần tử của danh sách
				int totalPages = (int) Math.ceil((double) totalRecords / recordsPerPage); // tổng số trang
				List<T002Dto> resultPaginated = resultSearch1.subList(startIndex, Math.min(endIndex, totalRecords));
				request.setAttribute("listDataSearch", resultPaginated);
				request.setAttribute("currentPage", page);
				request.setAttribute("recordsPerPage", recordsPerPage);
				request.setAttribute("totalRecords", totalRecords);
				request.setAttribute("totalPages", totalPages);
//				//HttpSession session = request.getSession();
//				session.setAttribute("sex", sex);
//				session.setAttribute("birthdayFrom", birthdayFrom);
				RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
				rd.forward(request, response);
				return;
			}
			
			if (page== null) {
				page = "1";
				List<T002Dto> resultSearch = daoSearch.getDataSearch(name, sex, birthdayFrom, birthdayTo);
				int recordsPerPage = 15; // số phần tử hiển thị trên mỗi trang
				int startIndex = (Integer.parseInt(page)- 1) * recordsPerPage; // vị trí bắt đầu của trang hiện tại
				int endIndex = startIndex + recordsPerPage; // vị trí kết thúc của trang hiện tại
				int totalRecords = resultSearch.size(); // tổng số phần tử của danh sách
				int totalPages = (int) Math.ceil((double) totalRecords / recordsPerPage); // tổng số trang
				List<T002Dto> resultPaginated = resultSearch.subList(startIndex, Math.min(endIndex, totalRecords));
				request.setAttribute("listDataSearch", resultPaginated);
				request.setAttribute("currentPage", page);
				request.setAttribute("recordsPerPage", recordsPerPage);
				request.setAttribute("totalRecords", totalRecords);
				request.setAttribute("totalPages", totalPages);
				HttpSession session = request.getSession();
				session.setAttribute("sex", sex);
				session.setAttribute("birthdayFrom", birthdayFrom);
				session.setAttribute("birthdayTo", birthdayTo);
				RequestDispatcher rd = request.getRequestDispatcher("/WEB-INF/jsp/T002.jsp");
				rd.forward(request, response);
				return;
			}
			
//			HttpSession session = request.getSession();
//			String page = (String) session.getAttribute("page");
			
			//Lấy data các checkbox được checked
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	private boolean isValidDate(String txtDate) {
	    String rxDatePattern = "^(\\d{4})(\\/|-)(\\d{1,2})(\\/|-)(\\d{1,2})$";
	    Pattern pattern = Pattern.compile(rxDatePattern);
	    Matcher matcher = pattern.matcher(txtDate);
	    if (!matcher.matches()) {
	        return false;
	    }
	    int dtMonth = Integer.parseInt(matcher.group(3));
	    int dtDay = Integer.parseInt(matcher.group(5));
	    int dtYear = Integer.parseInt(matcher.group(1));
	    if (dtMonth < 1 || dtMonth > 12) {
	        return false;
	    } else if (dtDay < 1 || dtDay > 31) {
	        return false;
	    } else if ((dtMonth == 4 || dtMonth == 6 || dtMonth == 9 || dtMonth == 11) && dtDay == 31) {
	        return false;
	    } else if (dtMonth == 2) {
	        boolean isLeap = (dtYear % 4 == 0 && (dtYear % 100 != 0 || dtYear % 400 == 0));
	        if (dtDay > 29 || (dtDay == 29 && !isLeap)) {
	            return false;
	        }
	    }
	    return true;
	}
}





<%@page import="java.awt.List"%>
<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>  
<%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
<%@page import="fjs.cs.dao.T003Dao,fjs.cs.common.Constants"%>  

<title>Search - Training</title>
</head>
<style type="text/css">
  <%@include file="/WEB-INF/css/common.css"%>
</style>
<style type="text/css">
  <%@include file="/WEB-INF/css/T002.css"%>
</style>
<body>

<style type="text/jsp">
  <%@include file="/WEB-INF/include/header.jsp"%>
</style>

<div class = "search-container">
	<div class = "search-container__dan">
		<div class = "search-container__text search-container__text_text">
			Login > Search Customer
		</div>
	<div class = "search-container__context">
				<div class = "search-container__logo">
				Welcome
					<%if (session.getAttribute("name") != null) {
						Object session2 = session.getAttribute("name");
						session.setAttribute("name1", session2);
					%>
							<div><%=session.getAttribute("name") %></div>
					<%} %>
				</div>
		
			<a href = "/CustomerSystem/T001" class = "search-container__logout search-container__text_text" onclick = "Logout() ">
    			Log Out
			</a>
			<script>
				function Logout() {
				    <% session.removeAttribute("name"); %>  // Xóa session "name"
				    location.reload();
				}
			</script>
	</div>
	
	<div class = "search-container__line"></div>
	
	
<form id = "form-Search" action ="/CustomerSystem/T002" method = "POST" >
	<div class = "search-container__handalSearch">
		<div class = "search-container__handalSearch--margin handalSearch-customerName">
			<div class = "handalSearch-customercommon handalSearch-customerName__text search-container__text_text">Customer Name</div>
			<input id = "txtCustomerName" name = "txtCustomerName" maxLength = "50"/>
		</div>
		
		<div class = "search-container__handalSearch--margin handalSearch-customerSex">
			<div class = "handalSearch-customercommon handalSearch-customerSex__text search-container__text_text">Sex</div>
			<select name="browser" id = "cboSex">
				<option value=""></option>
		      	<option value="0">Male</option>
		     	 <option value="1">Female</option>
			</select>
		</div>
		
		<div class = "search-container__handalSearch--margin handalSearch-BirthdayFrom">
			<div class = "handalSearch-customercommon handalSearch-BirthdayFrom__text search-container__text_text">Birthday</div>
			<input id = "txtBirthdayForm" class = "txtCustomerValidateFROM" name = "txtBirthdayFromName" maxLength = "10"/>
			<lable class = "handalSearch-BirthdayFrom__ngangcach">～</lable>
			<input id = "txtBirthdayTo" class = "txtCustomerValidateTO" name = "txtBirthdayToName" maxLength = "10"/>
		</div>
		
		<div class = "handalSearch-btnSearch">
			<button type = "submit" id = "btnSearch">Search</button>
		</div>
	</div>

	
	<div class = "search-container__btnContext--chuyenhuong">
		<div class = "search-container__btnContext--start">
		<%
		if (request.getAttribute("listDataSearch") == null) {
		%>
			<%
				if (request.getAttribute("ListA") == null) {
			%>
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
			<%
				}
			%>
			<%
				if (request.getAttribute("ListA") != null) {
			%>
				<c:if test="${tag == 1}">				
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
				</c:if>
				<c:if test="${tag > 1 }">	
					<button id = "btnFirst"><a href="/CustomerSystem/T002?index=<%=1 %>"><<</a></button>			
					<button id = "btnPrevious"><a href="/CustomerSystem/T002?index=${tag-1}"><</a></button>
				</c:if>
			<%
				}
			%>
			
			
			<lable class = "search-container__btnContext--textstart search-container__text_text">Previous</lable>
		</div>
		
		<div class = "search-container__btnContext--end">
			<lable class = "search-container__btnContext--textend search-container__text_text">Next</lable>
			<%
				if (request.getAttribute("ListA") == null) {
			%>
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			<%
				}
			%>
			
			<%
				if (request.getAttribute("ListA") != null) {
				int endP = (Integer) request.getAttribute("endP"); 
			%>
			<c:if test="${tag >= endP}">			
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			</c:if>
			<c:if test="${tag < endP}">			
				<button id = "btnNext" ><a href="/CustomerSystem/T002?index=${tag+1}">></a></button>
				<button id="btnPrevious"><a href="/CustomerSystem/T002?index=<%= endP %>">>></a></button>
			</c:if>		
			<%
				}
			%>
			
			<%} %>
			
			
			
			
			
			
			
			
			
			
			
			<%
				if (request.getAttribute("listDataSearch") != null) {
			%>
			<%
				if (request.getAttribute("listDataSearch") == null) {
			%>
					<button id = "btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
					<button id = "btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
			<%
				}
			%>
			<%
				if (request.getAttribute("listDataSearch") != null) {
			%>
				 <c:if test="${requestScope.currentPage == 1}">
		            <button id="btnFirst" disabled style="pointer-events: none;"><a href="#"><<</a></button>
		            <button id="btnPrevious" disabled style="pointer-events: none;"><a href="#"><</a></button>
		        </c:if>
				<c:if test="${requestScope.currentPage > 1 }">	
					<button id="btnFirst" type="submit" onclick="sendPostRequest(1)"><<</button>
           			<button id="btnPrevious" type="submit" onclick="sendPostRequest(${requestScope.currentPage - 1})"><</button>
           			<input name="pagepage" hidden value=""/>
				</c:if>
			<%
				}
			%>
			
			
			<lable class = "search-container__btnContext--textstart search-container__text_text">Previous</lable>
		</div>
		
		<div class = "search-container__btnContext--end">
			<lable class = "search-container__btnContext--textend search-container__text_text">Next</lable>
			<%
				if (request.getAttribute("listDataSearch") == null) {
			%>
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
				
			<%
				}
			%>
			
			<%
				if (request.getAttribute("listDataSearch") != null) {
				
			%>
			<c:if test="${requestScope.currentPage >= requestScope.totalPages}">			
				<button id = "btnNext" disabled style="pointer-events: none;"><a href="#">></a></button>
				<button id="btnPrevious" disabled style="pointer-events: none;"><a href="#">>></a></button>
			</c:if>
			<c:if test="${requestScope.currentPage < requestScope.totalPages}">			
				<button id="btnNext" type="submit" onclick="sendPostRequest(${requestScope.currentPage + 1})">></button>
            	<button id="btnLast" type="submit" onclick="sendPostRequest(${requestScope.totalPages})">>></button>
            	<input name="pagepage" hidden value=""/>
			</c:if>		
			<%
				}
			%>
			<%} %>
		<script>
		  function sendPostRequest(page) {
			
		    var pageInput = document.getElementsByName("pagepage")[0];
		    pageInput.value = page;
		    
		  }
		</script>
		
		</div>
	</div>
	</form>
	<form action = "/CustomerSystem/T002" method="POST" onsubmit="deleteRows()">
	<table class = "search-container__table">
        <tr class = "search-container__table--tieude">
        	<th class = "searchtable-trcheck"><input type="checkbox" id = "checkAll" name="checkboxAll" value="" onclick = "checkBox(this)"></th>
            <th class = "searchtable-trid">Customer ID</th>
            <th class = "searchtable-trname">Customer Name</th>
            <th class = "searchtable-trsex">Sex</th>
            <th class = "searchtable-trbirthday">Birthday</th>
            <th class = "searchtable-traddress">Address</th>
        </tr>
<c:choose>
    <c:when test="${not empty listDataSearch}">
        <c:forEach items="${listDataSearch}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:when>
    
    
    
    <c:when test="${not empty ListA}">
        <c:forEach items="${ListA}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:when>
    <c:otherwise>
        <c:forEach items="${ListA}" var="dept">
            <tr>
                <td class = "searchtable-check"><input type="checkbox" name="checkboxAll" value="${dept.CUSTOMER_ID}"></td>
                <td ><a href="/CustomerSystem/T003?id=${dept.CUSTOMER_ID}" class = "searchtable-id"> ${dept.CUSTOMER_ID} </a></td>
                <td class = "searchtable-name">${dept.CUSTOMER_NAME }</td>
                <td class = "searchtable-sex">${dept.SEX}</td>
                <td class = "searchtable-birthday">${dept.BIRTHDAY}</td>
                <td class = "searchtable-address">${dept.ADDRESS}</td>
            </tr>
        </c:forEach>
    </c:otherwise>
    
</c:choose>
    </table>
    <div class = "search-btn__form">
		<button class = "search-container__nav-btnAddNew">
			<a href="/CustomerSystem/T003" >Add new</a>
		</button>
    		<%
				if (request.getAttribute("ListA") != null || request.getAttribute("listDataSearch") != null) {
			%>
				<button type = "submit" class = "search-container__delete" >Delete</button>
			<%
				}
			%>
			
			<%
				if (request.getAttribute("ListA") == null && request.getAttribute("listDataSearch") == null) {
			%>
			<button type = "submit" disabled style="pointer-events: none;" onclick="deleteRows()"class = "search-container__delete" >Delete</button>
			<%
				}
			%>
    </div>
	</form>
	</div>
	<footer class="footer">
		<div class="header-br"></div>
		<div class="footer-text__copyright">Copyright (c) 2000-2008
			FUJINET, All Rights Reserved.</div>
	</footer>
</div>
</div>
<%
	if (request.getAttribute("birthdayFrom") != null) {	
%>
<script>
window.onload = function () {
	document.querySelector(".txtCustomerValidateFROM").value = <%=request.getAttribute("birthdayFrom")%>
}
</script>
<%
	}
%>
<%
	if (request.getAttribute("sex") != null) {
%>
<script>
window.onload = function () {
	document.getElementById("cboSex").value = <%=request.getAttribute("sex")%>
}
</script>
<%
	}
%>

<%
	if (request.getAttribute("messageFrom") != null) {
%>
<script>
	window.onload = function () {		
		alert('<%=request.getAttribute("messageFrom")%>')
		document.querySelector(".txtCustomerValidateFROM").value = <%=request.getAttribute("dataFrom")%>
	}
</script>
<%
	}
%>

<%
	if (request.getAttribute("messageTo") != null) {
%>
<script>
	window.onload = function () {		
		alert("<%=request.getAttribute("messageTo")%>")
		document.querySelector(".txtCustomerValidateTO").value = <%=request.getAttribute("dataTo")%>
	}
</script>
<%
	}
%>

<%
	if (request.getAttribute("errorFromTo") != null) {
%>
<script>
	alert("<%=request.getAttribute("errorFromTo")%>")
	document.querySelector(".txtCustomerValidateFROM").value = <%=request.getAttribute("dataFrom")%>
	document.querySelector(".txtCustomerValidateTO").value = <%=request.getAttribute("dataTo")%>
</script>
<%
	}
%>
<%
	String messageCheckNot = Constants.CHECKED_NOT_ERROR;
%>
<script>
	<%@include file="/WEB-INF/javascript/T002.js"%>
</script>
</body>
</html>
